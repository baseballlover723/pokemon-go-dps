/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.PlayerData');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.PokemonData');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.battle.BattleActionType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.battle.BattleState');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.battle.BattleType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.gym.GymState');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.player.Currency');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile');
goog.provide('proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.ActivityType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.BadgeType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.CameraInterpolation');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.CameraTarget');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.Gender');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.HoloIapItemCategory');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.ItemCategory');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.ItemEffect');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.Platform');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.PokemonId');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.PokemonMovementType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.PokemonRarity');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.PokemonType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.TeamColor');
goog.provide('proto.com.github.aeonlucid.pogoprotos.enums.TutorialState');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.Candy');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId');
goog.provide('proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.MapCell');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.MapObjectsStatus');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.fort.FortData');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.fort.FortRenderingType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.fort.FortSponsor');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.fort.FortType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon');
goog.provide('proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.StatusCode');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.Status');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.Status');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.Status');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.Request');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.RequestType');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.CatchStatus');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.Status');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.Status');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Background');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Status');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.Status');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.Status');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.Status');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.Result');
goog.provide('proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.FortSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.MapSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.BuddySize');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes');
goog.provide('proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            requiredExperienceList: jspb.Message.getField(msg, 1),
            leaderSlotsList: jspb.Message.getField(msg, 2),
            trainerSlotsList: jspb.Message.getField(msg, 3),
            searchRollBonusList: jspb.Message.getField(msg, 4)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setRequiredExperienceList(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setLeaderSlotsList(value);
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setTrainerSlotsList(value);
                break;
            case 4:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setSearchRollBonusList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getRequiredExperienceList();
    if (f.length > 0) {
        writer.writePackedInt32(
            1,
            f
        );
    }
    f = this.getLeaderSlotsList();
    if (f.length > 0) {
        writer.writePackedInt32(
            2,
            f
        );
    }
    f = this.getTrainerSlotsList();
    if (f.length > 0) {
        writer.writePackedInt32(
            3,
            f
        );
    }
    f = this.getSearchRollBonusList();
    if (f.length > 0) {
        writer.writePackedInt32(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated int32 required_experience = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.getRequiredExperienceList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.setRequiredExperienceList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.clearRequiredExperienceList = function() {
    jspb.Message.setField(this, 1, []);
};


/**
 * repeated int32 leader_slots = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.getLeaderSlotsList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.setLeaderSlotsList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.clearLeaderSlotsList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * repeated int32 trainer_slots = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.getTrainerSlotsList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.setTrainerSlotsList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.clearTrainerSlotsList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * repeated int32 search_roll_bonus = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.getSearchRollBonusList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 4));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.setSearchRollBonusList = function(value) {
    jspb.Message.setField(this, 4, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.prototype.clearSearchRollBonusList = function() {
    jspb.Message.setField(this, 4, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            sequenceList: jspb.Message.getField(msg, 1)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.getSequenceList().push(value);
                msg.setSequenceList(msg.getSequenceList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSequenceList();
    if (f.length > 0) {
        writer.writeRepeatedString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated string sequence = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.prototype.getSequenceList = function() {
    return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<string>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.prototype.setSequenceList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.prototype.clearSequenceList = function() {
    jspb.Message.setField(this, 1, []);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.CameraTarget = {
    CAM_TARGET_ATTACKER: 0,
    CAM_TARGET_ATTACKER_EDGE: 1,
    CAM_TARGET_ATTACKER_GROUND: 2,
    CAM_TARGET_DEFENDER: 3,
    CAM_TARGET_DEFENDER_EDGE: 4,
    CAM_TARGET_DEFENDER_GROUND: 5,
    CAM_TARGET_ATTACKER_DEFENDER: 6,
    CAM_TARGET_ATTACKER_DEFENDER_EDGE: 7,
    CAM_TARGET_DEFENDER_ATTACKER: 8,
    CAM_TARGET_DEFENDER_ATTACKER_EDGE: 9,
    CAM_TARGET_ATTACKER_DEFENDER_MIRROR: 11,
    CAM_TARGET_SHOULDER_ATTACKER_DEFENDER: 12,
    CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR: 13,
    CAM_TARGET_ATTACKER_DEFENDER_WORLD: 14
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.CameraInterpolation = {
    CAM_INTERP_CUT: 0,
    CAM_INTERP_LINEAR: 1,
    CAM_INTERP_SMOOTH: 2,
    CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE: 3,
    CAM_INTERP_DEPENDS: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.repeatedFields_ = [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            nextCamera: msg.getNextCamera(),
            interpolationList: jspb.Message.getField(msg, 2),
            targetTypeList: jspb.Message.getField(msg, 3),
            easeInSpeedList: jspb.Message.getRepeatedFloatingPointField(msg, 4),
            eastOutSpeedList: jspb.Message.getRepeatedFloatingPointField(msg, 5),
            durationSecondsList: jspb.Message.getRepeatedFloatingPointField(msg, 6),
            waitSecondsList: jspb.Message.getRepeatedFloatingPointField(msg, 7),
            transitionSecondsList: jspb.Message.getRepeatedFloatingPointField(msg, 8),
            angleDegreeList: jspb.Message.getRepeatedFloatingPointField(msg, 9),
            angleOffsetDegreeList: jspb.Message.getRepeatedFloatingPointField(msg, 10),
            pitchDegreeList: jspb.Message.getRepeatedFloatingPointField(msg, 11),
            pitchOffsetDegreeList: jspb.Message.getRepeatedFloatingPointField(msg, 12),
            rollDegreeList: jspb.Message.getRepeatedFloatingPointField(msg, 13),
            distanceMetersList: jspb.Message.getRepeatedFloatingPointField(msg, 14),
            heightPercentList: jspb.Message.getRepeatedFloatingPointField(msg, 15),
            vertCtrRatioList: jspb.Message.getRepeatedFloatingPointField(msg, 16)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setNextCamera(value);
                break;
            case 2:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.CameraInterpolation>} */ (reader.readPackedEnum());
                msg.setInterpolationList(value);
                break;
            case 3:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.CameraTarget>} */ (reader.readPackedEnum());
                msg.setTargetTypeList(value);
                break;
            case 4:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setEaseInSpeedList(value);
                break;
            case 5:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setEastOutSpeedList(value);
                break;
            case 6:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setDurationSecondsList(value);
                break;
            case 7:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setWaitSecondsList(value);
                break;
            case 8:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setTransitionSecondsList(value);
                break;
            case 9:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setAngleDegreeList(value);
                break;
            case 10:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setAngleOffsetDegreeList(value);
                break;
            case 11:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setPitchDegreeList(value);
                break;
            case 12:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setPitchOffsetDegreeList(value);
                break;
            case 13:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setRollDegreeList(value);
                break;
            case 14:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setDistanceMetersList(value);
                break;
            case 15:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setHeightPercentList(value);
                break;
            case 16:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setVertCtrRatioList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getNextCamera();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getInterpolationList();
    if (f.length > 0) {
        writer.writePackedEnum(
            2,
            f
        );
    }
    f = this.getTargetTypeList();
    if (f.length > 0) {
        writer.writePackedEnum(
            3,
            f
        );
    }
    f = this.getEaseInSpeedList();
    if (f.length > 0) {
        writer.writePackedFloat(
            4,
            f
        );
    }
    f = this.getEastOutSpeedList();
    if (f.length > 0) {
        writer.writePackedFloat(
            5,
            f
        );
    }
    f = this.getDurationSecondsList();
    if (f.length > 0) {
        writer.writePackedFloat(
            6,
            f
        );
    }
    f = this.getWaitSecondsList();
    if (f.length > 0) {
        writer.writePackedFloat(
            7,
            f
        );
    }
    f = this.getTransitionSecondsList();
    if (f.length > 0) {
        writer.writePackedFloat(
            8,
            f
        );
    }
    f = this.getAngleDegreeList();
    if (f.length > 0) {
        writer.writePackedFloat(
            9,
            f
        );
    }
    f = this.getAngleOffsetDegreeList();
    if (f.length > 0) {
        writer.writePackedFloat(
            10,
            f
        );
    }
    f = this.getPitchDegreeList();
    if (f.length > 0) {
        writer.writePackedFloat(
            11,
            f
        );
    }
    f = this.getPitchOffsetDegreeList();
    if (f.length > 0) {
        writer.writePackedFloat(
            12,
            f
        );
    }
    f = this.getRollDegreeList();
    if (f.length > 0) {
        writer.writePackedFloat(
            13,
            f
        );
    }
    f = this.getDistanceMetersList();
    if (f.length > 0) {
        writer.writePackedFloat(
            14,
            f
        );
    }
    f = this.getHeightPercentList();
    if (f.length > 0) {
        writer.writePackedFloat(
            15,
            f
        );
    }
    f = this.getVertCtrRatioList();
    if (f.length > 0) {
        writer.writePackedFloat(
            16,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string next_camera = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getNextCamera = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setNextCamera = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.CameraInterpolation interpolation = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.CameraInterpolation>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getInterpolationList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.CameraInterpolation>} */ (jspb.Message.getField(this, 2));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.CameraInterpolation>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setInterpolationList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearInterpolationList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.CameraTarget target_type = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.CameraTarget>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getTargetTypeList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.CameraTarget>} */ (jspb.Message.getField(this, 3));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.CameraTarget>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setTargetTypeList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearTargetTypeList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * repeated float ease_in_speed = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getEaseInSpeedList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setEaseInSpeedList = function(value) {
    jspb.Message.setField(this, 4, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearEaseInSpeedList = function() {
    jspb.Message.setField(this, 4, []);
};


/**
 * repeated float east_out_speed = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getEastOutSpeedList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setEastOutSpeedList = function(value) {
    jspb.Message.setField(this, 5, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearEastOutSpeedList = function() {
    jspb.Message.setField(this, 5, []);
};


/**
 * repeated float duration_seconds = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getDurationSecondsList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 6));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setDurationSecondsList = function(value) {
    jspb.Message.setField(this, 6, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearDurationSecondsList = function() {
    jspb.Message.setField(this, 6, []);
};


/**
 * repeated float wait_seconds = 7;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getWaitSecondsList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 7));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setWaitSecondsList = function(value) {
    jspb.Message.setField(this, 7, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearWaitSecondsList = function() {
    jspb.Message.setField(this, 7, []);
};


/**
 * repeated float transition_seconds = 8;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getTransitionSecondsList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setTransitionSecondsList = function(value) {
    jspb.Message.setField(this, 8, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearTransitionSecondsList = function() {
    jspb.Message.setField(this, 8, []);
};


/**
 * repeated float angle_degree = 9;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getAngleDegreeList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 9));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setAngleDegreeList = function(value) {
    jspb.Message.setField(this, 9, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearAngleDegreeList = function() {
    jspb.Message.setField(this, 9, []);
};


/**
 * repeated float angle_offset_degree = 10;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getAngleOffsetDegreeList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 10));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setAngleOffsetDegreeList = function(value) {
    jspb.Message.setField(this, 10, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearAngleOffsetDegreeList = function() {
    jspb.Message.setField(this, 10, []);
};


/**
 * repeated float pitch_degree = 11;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getPitchDegreeList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 11));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setPitchDegreeList = function(value) {
    jspb.Message.setField(this, 11, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearPitchDegreeList = function() {
    jspb.Message.setField(this, 11, []);
};


/**
 * repeated float pitch_offset_degree = 12;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getPitchOffsetDegreeList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 12));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setPitchOffsetDegreeList = function(value) {
    jspb.Message.setField(this, 12, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearPitchOffsetDegreeList = function() {
    jspb.Message.setField(this, 12, []);
};


/**
 * repeated float roll_degree = 13;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getRollDegreeList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 13));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setRollDegreeList = function(value) {
    jspb.Message.setField(this, 13, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearRollDegreeList = function() {
    jspb.Message.setField(this, 13, []);
};


/**
 * repeated float distance_meters = 14;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getDistanceMetersList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 14));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setDistanceMetersList = function(value) {
    jspb.Message.setField(this, 14, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearDistanceMetersList = function() {
    jspb.Message.setField(this, 14, []);
};


/**
 * repeated float height_percent = 15;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getHeightPercentList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 15));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setHeightPercentList = function(value) {
    jspb.Message.setField(this, 15, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearHeightPercentList = function() {
    jspb.Message.setField(this, 15, []);
};


/**
 * repeated float vert_ctr_ratio = 16;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.getVertCtrRatioList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 16));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.setVertCtrRatioList = function(value) {
    jspb.Message.setField(this, 16, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.prototype.clearVertCtrRatioList = function() {
    jspb.Message.setField(this, 16, []);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.BadgeType = {
    BADGE_UNSET: 0,
    BADGE_TRAVEL_KM: 1,
    BADGE_POKEDEX_ENTRIES: 2,
    BADGE_CAPTURE_TOTAL: 3,
    BADGE_DEFEATED_FORT: 4,
    BADGE_EVOLVED_TOTAL: 5,
    BADGE_HATCHED_TOTAL: 6,
    BADGE_ENCOUNTERED_TOTAL: 7,
    BADGE_POKESTOPS_VISITED: 8,
    BADGE_UNIQUE_POKESTOPS: 9,
    BADGE_POKEBALL_THROWN: 10,
    BADGE_BIG_MAGIKARP: 11,
    BADGE_DEPLOYED_TOTAL: 12,
    BADGE_BATTLE_ATTACK_WON: 13,
    BADGE_BATTLE_TRAINING_WON: 14,
    BADGE_BATTLE_DEFEND_WON: 15,
    BADGE_PRESTIGE_RAISED: 16,
    BADGE_PRESTIGE_DROPPED: 17,
    BADGE_TYPE_NORMAL: 18,
    BADGE_TYPE_FIGHTING: 19,
    BADGE_TYPE_FLYING: 20,
    BADGE_TYPE_POISON: 21,
    BADGE_TYPE_GROUND: 22,
    BADGE_TYPE_ROCK: 23,
    BADGE_TYPE_BUG: 24,
    BADGE_TYPE_GHOST: 25,
    BADGE_TYPE_STEEL: 26,
    BADGE_TYPE_FIRE: 27,
    BADGE_TYPE_WATER: 28,
    BADGE_TYPE_GRASS: 29,
    BADGE_TYPE_ELECTRIC: 30,
    BADGE_TYPE_PSYCHIC: 31,
    BADGE_TYPE_ICE: 32,
    BADGE_TYPE_DRAGON: 33,
    BADGE_TYPE_DARK: 34,
    BADGE_TYPE_FAIRY: 35,
    BADGE_SMALL_RATTATA: 36,
    BADGE_PIKACHU: 37
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            badgeType: msg.getBadgeType(),
            badgeRank: msg.getBadgeRank(),
            targetsList: jspb.Message.getField(msg, 3)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} */ (reader.readEnum());
                msg.setBadgeType(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBadgeRank(value);
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setTargetsList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getBadgeType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getBadgeRank();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getTargetsList();
    if (f.length > 0) {
        writer.writePackedInt32(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.BadgeType badge_type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.getBadgeType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.setBadgeType = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 badge_rank = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.getBadgeRank = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.setBadgeRank = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * repeated int32 targets = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.getTargetsList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.setTargetsList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.prototype.clearTargetsList = function() {
    jspb.Message.setField(this, 3, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            energyPerSec: msg.getEnergyPerSec(),
            dodgeEnergyCost: msg.getDodgeEnergyCost(),
            retargetSeconds: msg.getRetargetSeconds(),
            enemyAttackInterval: msg.getEnemyAttackInterval(),
            attackServerInterval: msg.getAttackServerInterval(),
            roundDurationSeconds: msg.getRoundDurationSeconds(),
            bonusTimePerAllySeconds: msg.getBonusTimePerAllySeconds(),
            maximumAttackersPerBattle: msg.getMaximumAttackersPerBattle(),
            sameTypeAttackBonusMultiplier: msg.getSameTypeAttackBonusMultiplier(),
            maximumEnergy: msg.getMaximumEnergy(),
            energyDeltaPerHealthLost: msg.getEnergyDeltaPerHealthLost(),
            dodgeDurationMs: msg.getDodgeDurationMs(),
            minimumPlayerLevel: msg.getMinimumPlayerLevel(),
            swapDurationMs: msg.getSwapDurationMs(),
            dodgeDamageReductionPercent: msg.getDodgeDamageReductionPercent()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setEnergyPerSec(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setDodgeEnergyCost(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setRetargetSeconds(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setEnemyAttackInterval(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setAttackServerInterval(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setRoundDurationSeconds(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setBonusTimePerAllySeconds(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaximumAttackersPerBattle(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setSameTypeAttackBonusMultiplier(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaximumEnergy(value);
                break;
            case 11:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setEnergyDeltaPerHealthLost(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDodgeDurationMs(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMinimumPlayerLevel(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setSwapDurationMs(value);
                break;
            case 15:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setDodgeDamageReductionPercent(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getEnergyPerSec();
    if (f !== 0.0) {
        writer.writeFloat(
            1,
            f
        );
    }
    f = this.getDodgeEnergyCost();
    if (f !== 0.0) {
        writer.writeFloat(
            2,
            f
        );
    }
    f = this.getRetargetSeconds();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = this.getEnemyAttackInterval();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = this.getAttackServerInterval();
    if (f !== 0.0) {
        writer.writeFloat(
            5,
            f
        );
    }
    f = this.getRoundDurationSeconds();
    if (f !== 0.0) {
        writer.writeFloat(
            6,
            f
        );
    }
    f = this.getBonusTimePerAllySeconds();
    if (f !== 0.0) {
        writer.writeFloat(
            7,
            f
        );
    }
    f = this.getMaximumAttackersPerBattle();
    if (f !== 0) {
        writer.writeInt32(
            8,
            f
        );
    }
    f = this.getSameTypeAttackBonusMultiplier();
    if (f !== 0.0) {
        writer.writeFloat(
            9,
            f
        );
    }
    f = this.getMaximumEnergy();
    if (f !== 0) {
        writer.writeInt32(
            10,
            f
        );
    }
    f = this.getEnergyDeltaPerHealthLost();
    if (f !== 0.0) {
        writer.writeFloat(
            11,
            f
        );
    }
    f = this.getDodgeDurationMs();
    if (f !== 0) {
        writer.writeInt32(
            12,
            f
        );
    }
    f = this.getMinimumPlayerLevel();
    if (f !== 0) {
        writer.writeInt32(
            13,
            f
        );
    }
    f = this.getSwapDurationMs();
    if (f !== 0) {
        writer.writeInt32(
            14,
            f
        );
    }
    f = this.getDodgeDamageReductionPercent();
    if (f !== 0.0) {
        writer.writeFloat(
            15,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional float energy_per_sec = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getEnergyPerSec = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setEnergyPerSec = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional float dodge_energy_cost = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getDodgeEnergyCost = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setDodgeEnergyCost = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional float retarget_seconds = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getRetargetSeconds = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setRetargetSeconds = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional float enemy_attack_interval = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getEnemyAttackInterval = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setEnemyAttackInterval = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional float attack_server_interval = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getAttackServerInterval = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setAttackServerInterval = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional float round_duration_seconds = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getRoundDurationSeconds = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setRoundDurationSeconds = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional float bonus_time_per_ally_seconds = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getBonusTimePerAllySeconds = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setBonusTimePerAllySeconds = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional int32 maximum_attackers_per_battle = 8;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getMaximumAttackersPerBattle = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setMaximumAttackersPerBattle = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional float same_type_attack_bonus_multiplier = 9;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getSameTypeAttackBonusMultiplier = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setSameTypeAttackBonusMultiplier = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * optional int32 maximum_energy = 10;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getMaximumEnergy = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setMaximumEnergy = function(value) {
    jspb.Message.setField(this, 10, value);
};


/**
 * optional float energy_delta_per_health_lost = 11;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getEnergyDeltaPerHealthLost = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 11, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setEnergyDeltaPerHealthLost = function(value) {
    jspb.Message.setField(this, 11, value);
};


/**
 * optional int32 dodge_duration_ms = 12;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getDodgeDurationMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 12, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setDodgeDurationMs = function(value) {
    jspb.Message.setField(this, 12, value);
};


/**
 * optional int32 minimum_player_level = 13;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getMinimumPlayerLevel = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 13, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setMinimumPlayerLevel = function(value) {
    jspb.Message.setField(this, 13, value);
};


/**
 * optional int32 swap_duration_ms = 14;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getSwapDurationMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 14, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setSwapDurationMs = function(value) {
    jspb.Message.setField(this, 14, value);
};


/**
 * optional float dodge_damage_reduction_percent = 15;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.getDodgeDamageReductionPercent = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 15, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.prototype.setDodgeDamageReductionPercent = function(value) {
    jspb.Message.setField(this, 15, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            dailyBonusCoins: msg.getDailyBonusCoins(),
            dailyDefenderBonusPerPokemonList: jspb.Message.getField(msg, 2),
            dailyDefenderBonusMaxDefenders: msg.getDailyDefenderBonusMaxDefenders(),
            dailyDefenderBonusCurrencyList: jspb.Message.getField(msg, 4),
            minTimeBetweenClaimsMs: msg.getMinTimeBetweenClaimsMs(),
            dailyBonusEnabled: msg.getDailyBonusEnabled(),
            dailyDefenderBonusEnabled: msg.getDailyDefenderBonusEnabled()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDailyBonusCoins(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setDailyDefenderBonusPerPokemonList(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDailyDefenderBonusMaxDefenders(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.getDailyDefenderBonusCurrencyList().push(value);
                msg.setDailyDefenderBonusCurrencyList(msg.getDailyDefenderBonusCurrencyList());
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setMinTimeBetweenClaimsMs(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setDailyBonusEnabled(value);
                break;
            case 7:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setDailyDefenderBonusEnabled(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getDailyBonusCoins();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
    f = this.getDailyDefenderBonusPerPokemonList();
    if (f.length > 0) {
        writer.writePackedInt32(
            2,
            f
        );
    }
    f = this.getDailyDefenderBonusMaxDefenders();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getDailyDefenderBonusCurrencyList();
    if (f.length > 0) {
        writer.writeRepeatedString(
            4,
            f
        );
    }
    f = this.getMinTimeBetweenClaimsMs();
    if (f !== 0) {
        writer.writeInt64(
            5,
            f
        );
    }
    f = this.getDailyBonusEnabled();
    if (f) {
        writer.writeBool(
            6,
            f
        );
    }
    f = this.getDailyDefenderBonusEnabled();
    if (f) {
        writer.writeBool(
            7,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 daily_bonus_coins = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.getDailyBonusCoins = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.setDailyBonusCoins = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated int32 daily_defender_bonus_per_pokemon = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.getDailyDefenderBonusPerPokemonList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.setDailyDefenderBonusPerPokemonList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.clearDailyDefenderBonusPerPokemonList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * optional int32 daily_defender_bonus_max_defenders = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.getDailyDefenderBonusMaxDefenders = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.setDailyDefenderBonusMaxDefenders = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * repeated string daily_defender_bonus_currency = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.getDailyDefenderBonusCurrencyList = function() {
    return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 4));
};


/** @param {Array.<string>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.setDailyDefenderBonusCurrencyList = function(value) {
    jspb.Message.setField(this, 4, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.clearDailyDefenderBonusCurrencyList = function() {
    jspb.Message.setField(this, 4, []);
};


/**
 * optional int64 min_time_between_claims_ms = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.getMinTimeBetweenClaimsMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.setMinTimeBetweenClaimsMs = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional bool daily_bonus_enabled = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.getDailyBonusEnabled = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 6, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.setDailyBonusEnabled = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional bool daily_defender_bonus_enabled = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.getDailyDefenderBonusEnabled = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 7, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.prototype.setDailyDefenderBonusEnabled = function(value) {
    jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            equipBadgeCooldownMs: msg.getEquipBadgeCooldownMs(),
            catchProbabilityBonusList: jspb.Message.getRepeatedFloatingPointField(msg, 2),
            fleeProbabilityBonusList: jspb.Message.getRepeatedFloatingPointField(msg, 3)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setEquipBadgeCooldownMs(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setCatchProbabilityBonusList(value);
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setFleeProbabilityBonusList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getEquipBadgeCooldownMs();
    if (f !== 0) {
        writer.writeInt64(
            1,
            f
        );
    }
    f = this.getCatchProbabilityBonusList();
    if (f.length > 0) {
        writer.writePackedFloat(
            2,
            f
        );
    }
    f = this.getFleeProbabilityBonusList();
    if (f.length > 0) {
        writer.writePackedFloat(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 equip_badge_cooldown_ms = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.getEquipBadgeCooldownMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.setEquipBadgeCooldownMs = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated float catch_probability_bonus = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.getCatchProbabilityBonusList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.setCatchProbabilityBonusList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.clearCatchProbabilityBonusList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * repeated float flee_probability_bonus = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.getFleeProbabilityBonusList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.setFleeProbabilityBonusList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.prototype.clearFleeProbabilityBonusList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.PokemonType = {
    POKEMON_TYPE_NONE: 0,
    POKEMON_TYPE_NORMAL: 1,
    POKEMON_TYPE_FIGHTING: 2,
    POKEMON_TYPE_FLYING: 3,
    POKEMON_TYPE_POISON: 4,
    POKEMON_TYPE_GROUND: 5,
    POKEMON_TYPE_ROCK: 6,
    POKEMON_TYPE_BUG: 7,
    POKEMON_TYPE_GHOST: 8,
    POKEMON_TYPE_STEEL: 9,
    POKEMON_TYPE_FIRE: 10,
    POKEMON_TYPE_WATER: 11,
    POKEMON_TYPE_GRASS: 12,
    POKEMON_TYPE_ELECTRIC: 13,
    POKEMON_TYPE_PSYCHIC: 14,
    POKEMON_TYPE_ICE: 15,
    POKEMON_TYPE_DRAGON: 16,
    POKEMON_TYPE_DARK: 17,
    POKEMON_TYPE_FAIRY: 18
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            attackScalarList: jspb.Message.getRepeatedFloatingPointField(msg, 1),
            attackType: msg.getAttackType()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setAttackScalarList(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} */ (reader.readEnum());
                msg.setAttackType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getAttackScalarList();
    if (f.length > 0) {
        writer.writePackedFloat(
            1,
            f
        );
    }
    f = this.getAttackType();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated float attack_scalar = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.prototype.getAttackScalarList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.prototype.setAttackScalarList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.prototype.clearAttackScalarList = function() {
    jspb.Message.setField(this, 1, []);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonType attack_type = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.prototype.getAttackType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.prototype.setAttackType = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove = {
    MOVE_UNSET: 0,
    THUNDER_SHOCK: 1,
    QUICK_ATTACK: 2,
    SCRATCH: 3,
    EMBER: 4,
    VINE_WHIP: 5,
    TACKLE: 6,
    RAZOR_LEAF: 7,
    TAKE_DOWN: 8,
    WATER_GUN: 9,
    BITE: 10,
    POUND: 11,
    DOUBLE_SLAP: 12,
    WRAP: 13,
    HYPER_BEAM: 14,
    LICK: 15,
    DARK_PULSE: 16,
    SMOG: 17,
    SLUDGE: 18,
    METAL_CLAW: 19,
    VICE_GRIP: 20,
    FLAME_WHEEL: 21,
    MEGAHORN: 22,
    WING_ATTACK: 23,
    FLAMETHROWER: 24,
    SUCKER_PUNCH: 25,
    DIG: 26,
    LOW_KICK: 27,
    CROSS_CHOP: 28,
    PSYCHO_CUT: 29,
    PSYBEAM: 30,
    EARTHQUAKE: 31,
    STONE_EDGE: 32,
    ICE_PUNCH: 33,
    HEART_STAMP: 34,
    DISCHARGE: 35,
    FLASH_CANNON: 36,
    PECK: 37,
    DRILL_PECK: 38,
    ICE_BEAM: 39,
    BLIZZARD: 40,
    AIR_SLASH: 41,
    HEAT_WAVE: 42,
    TWINEEDLE: 43,
    POISON_JAB: 44,
    AERIAL_ACE: 45,
    DRILL_RUN: 46,
    PETAL_BLIZZARD: 47,
    MEGA_DRAIN: 48,
    BUG_BUZZ: 49,
    POISON_FANG: 50,
    NIGHT_SLASH: 51,
    SLASH: 52,
    BUBBLE_BEAM: 53,
    SUBMISSION: 54,
    KARATE_CHOP: 55,
    LOW_SWEEP: 56,
    AQUA_JET: 57,
    AQUA_TAIL: 58,
    SEED_BOMB: 59,
    PSYSHOCK: 60,
    ROCK_THROW: 61,
    ANCIENT_POWER: 62,
    ROCK_TOMB: 63,
    ROCK_SLIDE: 64,
    POWER_GEM: 65,
    SHADOW_SNEAK: 66,
    SHADOW_PUNCH: 67,
    SHADOW_CLAW: 68,
    OMINOUS_WIND: 69,
    SHADOW_BALL: 70,
    BULLET_PUNCH: 71,
    MAGNET_BOMB: 72,
    STEEL_WING: 73,
    IRON_HEAD: 74,
    PARABOLIC_CHARGE: 75,
    SPARK: 76,
    THUNDER_PUNCH: 77,
    THUNDER: 78,
    THUNDERBOLT: 79,
    TWISTER: 80,
    DRAGON_BREATH: 81,
    DRAGON_PULSE: 82,
    DRAGON_CLAW: 83,
    DISARMING_VOICE: 84,
    DRAINING_KISS: 85,
    DAZZLING_GLEAM: 86,
    MOONBLAST: 87,
    PLAY_ROUGH: 88,
    CROSS_POISON: 89,
    SLUDGE_BOMB: 90,
    SLUDGE_WAVE: 91,
    GUNK_SHOT: 92,
    MUD_SHOT: 93,
    BONE_CLUB: 94,
    BULLDOZE: 95,
    MUD_BOMB: 96,
    FURY_CUTTER: 97,
    BUG_BITE: 98,
    SIGNAL_BEAM: 99,
    X_SCISSOR: 100,
    FLAME_CHARGE: 101,
    FLAME_BURST: 102,
    FIRE_BLAST: 103,
    BRINE: 104,
    WATER_PULSE: 105,
    SCALD: 106,
    HYDRO_PUMP: 107,
    PSYCHIC: 108,
    PSYSTRIKE: 109,
    ICE_SHARD: 110,
    ICY_WIND: 111,
    FROST_BREATH: 112,
    ABSORB: 113,
    GIGA_DRAIN: 114,
    FIRE_PUNCH: 115,
    SOLAR_BEAM: 116,
    LEAF_BLADE: 117,
    POWER_WHIP: 118,
    SPLASH: 119,
    ACID: 120,
    AIR_CUTTER: 121,
    HURRICANE: 122,
    BRICK_BREAK: 123,
    CUT: 124,
    SWIFT: 125,
    HORN_ATTACK: 126,
    STOMP: 127,
    HEADBUTT: 128,
    HYPER_FANG: 129,
    SLAM: 130,
    BODY_SLAM: 131,
    REST: 132,
    STRUGGLE: 133,
    SCALD_BLASTOISE: 134,
    HYDRO_PUMP_BLASTOISE: 135,
    WRAP_GREEN: 136,
    WRAP_PINK: 137,
    FURY_CUTTER_FAST: 200,
    BUG_BITE_FAST: 201,
    BITE_FAST: 202,
    SUCKER_PUNCH_FAST: 203,
    DRAGON_BREATH_FAST: 204,
    THUNDER_SHOCK_FAST: 205,
    SPARK_FAST: 206,
    LOW_KICK_FAST: 207,
    KARATE_CHOP_FAST: 208,
    EMBER_FAST: 209,
    WING_ATTACK_FAST: 210,
    PECK_FAST: 211,
    LICK_FAST: 212,
    SHADOW_CLAW_FAST: 213,
    VINE_WHIP_FAST: 214,
    RAZOR_LEAF_FAST: 215,
    MUD_SHOT_FAST: 216,
    ICE_SHARD_FAST: 217,
    FROST_BREATH_FAST: 218,
    QUICK_ATTACK_FAST: 219,
    SCRATCH_FAST: 220,
    TACKLE_FAST: 221,
    POUND_FAST: 222,
    CUT_FAST: 223,
    POISON_JAB_FAST: 224,
    ACID_FAST: 225,
    PSYCHO_CUT_FAST: 226,
    ROCK_THROW_FAST: 227,
    METAL_CLAW_FAST: 228,
    BULLET_PUNCH_FAST: 229,
    WATER_GUN_FAST: 230,
    SPLASH_FAST: 231,
    WATER_GUN_FAST_BLASTOISE: 232,
    MUD_SLAP_FAST: 233,
    ZEN_HEADBUTT_FAST: 234,
    CONFUSION_FAST: 235,
    POISON_STING_FAST: 236,
    BUBBLE_FAST: 237,
    FEINT_ATTACK_FAST: 238,
    STEEL_WING_FAST: 239,
    FIRE_FANG_FAST: 240,
    ROCK_SMASH_FAST: 241
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            movementId: msg.getMovementId(),
            animationId: msg.getAnimationId(),
            pokemonType: msg.getPokemonType(),
            power: msg.getPower(),
            accuracyChance: msg.getAccuracyChance(),
            criticalChance: msg.getCriticalChance(),
            healScalar: msg.getHealScalar(),
            staminaLossScalar: msg.getStaminaLossScalar(),
            trainerLevelMin: msg.getTrainerLevelMin(),
            trainerLevelMax: msg.getTrainerLevelMax(),
            vfxName: msg.getVfxName(),
            durationMs: msg.getDurationMs(),
            damageWindowStartMs: msg.getDamageWindowStartMs(),
            damageWindowEndMs: msg.getDamageWindowEndMs(),
            energyDelta: msg.getEnergyDelta()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove} */ (reader.readEnum());
                msg.setMovementId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setAnimationId(value);
                break;
            case 3:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} */ (reader.readEnum());
                msg.setPokemonType(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setPower(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setAccuracyChance(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCriticalChance(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setHealScalar(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setStaminaLossScalar(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTrainerLevelMin(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTrainerLevelMax(value);
                break;
            case 11:
                var value = /** @type {string} */ (reader.readString());
                msg.setVfxName(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDurationMs(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDamageWindowStartMs(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDamageWindowEndMs(value);
                break;
            case 15:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEnergyDelta(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getMovementId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getAnimationId();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getPokemonType();
    if (f !== 0.0) {
        writer.writeEnum(
            3,
            f
        );
    }
    f = this.getPower();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = this.getAccuracyChance();
    if (f !== 0.0) {
        writer.writeFloat(
            5,
            f
        );
    }
    f = this.getCriticalChance();
    if (f !== 0.0) {
        writer.writeFloat(
            6,
            f
        );
    }
    f = this.getHealScalar();
    if (f !== 0.0) {
        writer.writeFloat(
            7,
            f
        );
    }
    f = this.getStaminaLossScalar();
    if (f !== 0.0) {
        writer.writeFloat(
            8,
            f
        );
    }
    f = this.getTrainerLevelMin();
    if (f !== 0) {
        writer.writeInt32(
            9,
            f
        );
    }
    f = this.getTrainerLevelMax();
    if (f !== 0) {
        writer.writeInt32(
            10,
            f
        );
    }
    f = this.getVfxName();
    if (f.length > 0) {
        writer.writeString(
            11,
            f
        );
    }
    f = this.getDurationMs();
    if (f !== 0) {
        writer.writeInt32(
            12,
            f
        );
    }
    f = this.getDamageWindowStartMs();
    if (f !== 0) {
        writer.writeInt32(
            13,
            f
        );
    }
    f = this.getDamageWindowEndMs();
    if (f !== 0) {
        writer.writeInt32(
            14,
            f
        );
    }
    f = this.getEnergyDelta();
    if (f !== 0) {
        writer.writeInt32(
            15,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonMove movement_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getMovementId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setMovementId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 animation_id = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getAnimationId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setAnimationId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonType pokemon_type = 3;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getPokemonType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setPokemonType = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional float power = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getPower = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setPower = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional float accuracy_chance = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getAccuracyChance = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setAccuracyChance = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional float critical_chance = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getCriticalChance = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setCriticalChance = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional float heal_scalar = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getHealScalar = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setHealScalar = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional float stamina_loss_scalar = 8;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getStaminaLossScalar = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setStaminaLossScalar = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional int32 trainer_level_min = 9;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getTrainerLevelMin = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setTrainerLevelMin = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * optional int32 trainer_level_max = 10;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getTrainerLevelMax = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setTrainerLevelMax = function(value) {
    jspb.Message.setField(this, 10, value);
};


/**
 * optional string vfx_name = 11;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getVfxName = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setVfxName = function(value) {
    jspb.Message.setField(this, 11, value);
};


/**
 * optional int32 duration_ms = 12;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getDurationMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 12, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setDurationMs = function(value) {
    jspb.Message.setField(this, 12, value);
};


/**
 * optional int32 damage_window_start_ms = 13;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getDamageWindowStartMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 13, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setDamageWindowStartMs = function(value) {
    jspb.Message.setField(this, 13, value);
};


/**
 * optional int32 damage_window_end_ms = 14;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getDamageWindowEndMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 14, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setDamageWindowEndMs = function(value) {
    jspb.Message.setField(this, 14, value);
};


/**
 * optional int32 energy_delta = 15;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.getEnergyDelta = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 15, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.prototype.setEnergyDelta = function(value) {
    jspb.Message.setField(this, 15, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            rankNumList: jspb.Message.getField(msg, 1),
            requiredExperienceList: jspb.Message.getField(msg, 2),
            cpMultiplierList: jspb.Message.getRepeatedFloatingPointField(msg, 3),
            maxEggPlayerLevel: msg.getMaxEggPlayerLevel(),
            maxEncounterPlayerLevel: msg.getMaxEncounterPlayerLevel()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setRankNumList(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setRequiredExperienceList(value);
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setCpMultiplierList(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaxEggPlayerLevel(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaxEncounterPlayerLevel(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getRankNumList();
    if (f.length > 0) {
        writer.writePackedInt32(
            1,
            f
        );
    }
    f = this.getRequiredExperienceList();
    if (f.length > 0) {
        writer.writePackedInt32(
            2,
            f
        );
    }
    f = this.getCpMultiplierList();
    if (f.length > 0) {
        writer.writePackedFloat(
            3,
            f
        );
    }
    f = this.getMaxEggPlayerLevel();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
    f = this.getMaxEncounterPlayerLevel();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated int32 rank_num = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.getRankNumList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.setRankNumList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.clearRankNumList = function() {
    jspb.Message.setField(this, 1, []);
};


/**
 * repeated int32 required_experience = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.getRequiredExperienceList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.setRequiredExperienceList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.clearRequiredExperienceList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * repeated float cp_multiplier = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.getCpMultiplierList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.setCpMultiplierList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.clearCpMultiplierList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * optional int32 max_egg_player_level = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.getMaxEggPlayerLevel = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.setMaxEggPlayerLevel = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 max_encounter_player_level = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.getMaxEncounterPlayerLevel = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.prototype.setMaxEncounterPlayerLevel = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.PokemonId = {
    MISSINGNO: 0,
    BULBASAUR: 1,
    IVYSAUR: 2,
    VENUSAUR: 3,
    CHARMANDER: 4,
    CHARMELEON: 5,
    CHARIZARD: 6,
    SQUIRTLE: 7,
    WARTORTLE: 8,
    BLASTOISE: 9,
    CATERPIE: 10,
    METAPOD: 11,
    BUTTERFREE: 12,
    WEEDLE: 13,
    KAKUNA: 14,
    BEEDRILL: 15,
    PIDGEY: 16,
    PIDGEOTTO: 17,
    PIDGEOT: 18,
    RATTATA: 19,
    RATICATE: 20,
    SPEAROW: 21,
    FEAROW: 22,
    EKANS: 23,
    ARBOK: 24,
    PIKACHU: 25,
    RAICHU: 26,
    SANDSHREW: 27,
    SANDSLASH: 28,
    NIDORAN_FEMALE: 29,
    NIDORINA: 30,
    NIDOQUEEN: 31,
    NIDORAN_MALE: 32,
    NIDORINO: 33,
    NIDOKING: 34,
    CLEFAIRY: 35,
    CLEFABLE: 36,
    VULPIX: 37,
    NINETALES: 38,
    JIGGLYPUFF: 39,
    WIGGLYTUFF: 40,
    ZUBAT: 41,
    GOLBAT: 42,
    ODDISH: 43,
    GLOOM: 44,
    VILEPLUME: 45,
    PARAS: 46,
    PARASECT: 47,
    VENONAT: 48,
    VENOMOTH: 49,
    DIGLETT: 50,
    DUGTRIO: 51,
    MEOWTH: 52,
    PERSIAN: 53,
    PSYDUCK: 54,
    GOLDUCK: 55,
    MANKEY: 56,
    PRIMEAPE: 57,
    GROWLITHE: 58,
    ARCANINE: 59,
    POLIWAG: 60,
    POLIWHIRL: 61,
    POLIWRATH: 62,
    ABRA: 63,
    KADABRA: 64,
    ALAKAZAM: 65,
    MACHOP: 66,
    MACHOKE: 67,
    MACHAMP: 68,
    BELLSPROUT: 69,
    WEEPINBELL: 70,
    VICTREEBEL: 71,
    TENTACOOL: 72,
    TENTACRUEL: 73,
    GEODUDE: 74,
    GRAVELER: 75,
    GOLEM: 76,
    PONYTA: 77,
    RAPIDASH: 78,
    SLOWPOKE: 79,
    SLOWBRO: 80,
    MAGNEMITE: 81,
    MAGNETON: 82,
    FARFETCHD: 83,
    DODUO: 84,
    DODRIO: 85,
    SEEL: 86,
    DEWGONG: 87,
    GRIMER: 88,
    MUK: 89,
    SHELLDER: 90,
    CLOYSTER: 91,
    GASTLY: 92,
    HAUNTER: 93,
    GENGAR: 94,
    ONIX: 95,
    DROWZEE: 96,
    HYPNO: 97,
    KRABBY: 98,
    KINGLER: 99,
    VOLTORB: 100,
    ELECTRODE: 101,
    EXEGGCUTE: 102,
    EXEGGUTOR: 103,
    CUBONE: 104,
    MAROWAK: 105,
    HITMONLEE: 106,
    HITMONCHAN: 107,
    LICKITUNG: 108,
    KOFFING: 109,
    WEEZING: 110,
    RHYHORN: 111,
    RHYDON: 112,
    CHANSEY: 113,
    TANGELA: 114,
    KANGASKHAN: 115,
    HORSEA: 116,
    SEADRA: 117,
    GOLDEEN: 118,
    SEAKING: 119,
    STARYU: 120,
    STARMIE: 121,
    MR_MIME: 122,
    SCYTHER: 123,
    JYNX: 124,
    ELECTABUZZ: 125,
    MAGMAR: 126,
    PINSIR: 127,
    TAUROS: 128,
    MAGIKARP: 129,
    GYARADOS: 130,
    LAPRAS: 131,
    DITTO: 132,
    EEVEE: 133,
    VAPOREON: 134,
    JOLTEON: 135,
    FLAREON: 136,
    PORYGON: 137,
    OMANYTE: 138,
    OMASTAR: 139,
    KABUTO: 140,
    KABUTOPS: 141,
    AERODACTYL: 142,
    SNORLAX: 143,
    ARTICUNO: 144,
    ZAPDOS: 145,
    MOLTRES: 146,
    DRATINI: 147,
    DRAGONAIR: 148,
    DRAGONITE: 149,
    MEWTWO: 150,
    MEW: 151
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.PokemonRarity = {
    POKEMON_RARITY_NORMAL: 0,
    POKEMON_RARITY_LEGENDARY: 1,
    POKEMON_RARITY_MYTHIC: 2
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId = {
    FAMILY_UNSET: 0,
    FAMILY_BULBASAUR: 1,
    FAMILY_CHARMANDER: 4,
    FAMILY_SQUIRTLE: 7,
    FAMILY_CATERPIE: 10,
    FAMILY_WEEDLE: 13,
    FAMILY_PIDGEY: 16,
    FAMILY_RATTATA: 19,
    FAMILY_SPEAROW: 21,
    FAMILY_EKANS: 23,
    FAMILY_PIKACHU: 25,
    FAMILY_SANDSHREW: 27,
    FAMILY_NIDORAN_FEMALE: 29,
    FAMILY_NIDORAN_MALE: 32,
    FAMILY_CLEFAIRY: 35,
    FAMILY_VULPIX: 37,
    FAMILY_JIGGLYPUFF: 39,
    FAMILY_ZUBAT: 41,
    FAMILY_ODDISH: 43,
    FAMILY_PARAS: 46,
    FAMILY_VENONAT: 48,
    FAMILY_DIGLETT: 50,
    FAMILY_MEOWTH: 52,
    FAMILY_PSYDUCK: 54,
    FAMILY_MANKEY: 56,
    FAMILY_GROWLITHE: 58,
    FAMILY_POLIWAG: 60,
    FAMILY_ABRA: 63,
    FAMILY_MACHOP: 66,
    FAMILY_BELLSPROUT: 69,
    FAMILY_TENTACOOL: 72,
    FAMILY_GEODUDE: 74,
    FAMILY_PONYTA: 77,
    FAMILY_SLOWPOKE: 79,
    FAMILY_MAGNEMITE: 81,
    FAMILY_FARFETCHD: 83,
    FAMILY_DODUO: 84,
    FAMILY_SEEL: 86,
    FAMILY_GRIMER: 88,
    FAMILY_SHELLDER: 90,
    FAMILY_GASTLY: 92,
    FAMILY_ONIX: 95,
    FAMILY_DROWZEE: 96,
    FAMILY_HYPNO: 97,
    FAMILY_KRABBY: 98,
    FAMILY_VOLTORB: 100,
    FAMILY_EXEGGCUTE: 102,
    FAMILY_CUBONE: 104,
    FAMILY_HITMONLEE: 106,
    FAMILY_HITMONCHAN: 107,
    FAMILY_LICKITUNG: 108,
    FAMILY_KOFFING: 109,
    FAMILY_RHYHORN: 111,
    FAMILY_CHANSEY: 113,
    FAMILY_TANGELA: 114,
    FAMILY_KANGASKHAN: 115,
    FAMILY_HORSEA: 116,
    FAMILY_GOLDEEN: 118,
    FAMILY_STARYU: 120,
    FAMILY_MR_MIME: 122,
    FAMILY_SCYTHER: 123,
    FAMILY_JYNX: 124,
    FAMILY_ELECTABUZZ: 125,
    FAMILY_MAGMAR: 126,
    FAMILY_PINSIR: 127,
    FAMILY_TAUROS: 128,
    FAMILY_MAGIKARP: 129,
    FAMILY_LAPRAS: 131,
    FAMILY_DITTO: 132,
    FAMILY_EEVEE: 133,
    FAMILY_PORYGON: 137,
    FAMILY_OMANYTE: 138,
    FAMILY_KABUTO: 140,
    FAMILY_AERODACTYL: 142,
    FAMILY_SNORLAX: 143,
    FAMILY_ARTICUNO: 144,
    FAMILY_ZAPDOS: 145,
    FAMILY_MOLTRES: 146,
    FAMILY_DRATINI: 147,
    FAMILY_MEWTWO: 150,
    FAMILY_MEW: 151
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            baseStamina: msg.getBaseStamina(),
            baseAttack: msg.getBaseAttack(),
            baseDefense: msg.getBaseDefense(),
            dodgeEnergyDelta: msg.getDodgeEnergyDelta()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBaseStamina(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBaseAttack(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBaseDefense(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDodgeEnergyDelta(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getBaseStamina();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
    f = this.getBaseAttack();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getBaseDefense();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getDodgeEnergyDelta();
    if (f !== 0) {
        writer.writeInt32(
            8,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 base_stamina = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.getBaseStamina = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.setBaseStamina = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 base_attack = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.getBaseAttack = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.setBaseAttack = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 base_defense = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.getBaseDefense = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.setBaseDefense = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 dodge_energy_delta = 8;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.getDodgeEnergyDelta = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.prototype.setDodgeEnergyDelta = function(value) {
    jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            diskRadiusM: msg.getDiskRadiusM(),
            cylinderRadiusM: msg.getCylinderRadiusM(),
            cylinderHeightM: msg.getCylinderHeightM(),
            cylinderGroundM: msg.getCylinderGroundM(),
            shoulderModeScale: msg.getShoulderModeScale()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setDiskRadiusM(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCylinderRadiusM(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCylinderHeightM(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCylinderGroundM(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setShoulderModeScale(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getDiskRadiusM();
    if (f !== 0.0) {
        writer.writeFloat(
            1,
            f
        );
    }
    f = this.getCylinderRadiusM();
    if (f !== 0.0) {
        writer.writeFloat(
            2,
            f
        );
    }
    f = this.getCylinderHeightM();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = this.getCylinderGroundM();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = this.getShoulderModeScale();
    if (f !== 0.0) {
        writer.writeFloat(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional float disk_radius_m = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.getDiskRadiusM = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.setDiskRadiusM = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional float cylinder_radius_m = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.getCylinderRadiusM = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.setCylinderRadiusM = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional float cylinder_height_m = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.getCylinderHeightM = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.setCylinderHeightM = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional float cylinder_ground_m = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.getCylinderGroundM = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.setCylinderGroundM = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional float shoulder_mode_scale = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.getShoulderModeScale = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.prototype.setShoulderModeScale = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.PokemonMovementType = {
    MOVEMENT_STATIC: 0,
    MOVEMENT_JUMP: 1,
    MOVEMENT_VERTICAL: 2,
    MOVEMENT_PSYCHIC: 3,
    MOVEMENT_ELECTRIC: 4,
    MOVEMENT_FLYING: 5,
    MOVEMENT_HOVERING: 6
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            baseCaptureRate: msg.getBaseCaptureRate(),
            baseFleeRate: msg.getBaseFleeRate(),
            collisionRadiusM: msg.getCollisionRadiusM(),
            collisionHeightM: msg.getCollisionHeightM(),
            collisionHeadRadiusM: msg.getCollisionHeadRadiusM(),
            movementType: msg.getMovementType(),
            movementTimerS: msg.getMovementTimerS(),
            jumpTimeS: msg.getJumpTimeS(),
            attackTimerS: msg.getAttackTimerS()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setBaseCaptureRate(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setBaseFleeRate(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCollisionRadiusM(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCollisionHeightM(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCollisionHeadRadiusM(value);
                break;
            case 6:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMovementType} */ (reader.readEnum());
                msg.setMovementType(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setMovementTimerS(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setJumpTimeS(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setAttackTimerS(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getBaseCaptureRate();
    if (f !== 0.0) {
        writer.writeFloat(
            1,
            f
        );
    }
    f = this.getBaseFleeRate();
    if (f !== 0.0) {
        writer.writeFloat(
            2,
            f
        );
    }
    f = this.getCollisionRadiusM();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = this.getCollisionHeightM();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = this.getCollisionHeadRadiusM();
    if (f !== 0.0) {
        writer.writeFloat(
            5,
            f
        );
    }
    f = this.getMovementType();
    if (f !== 0.0) {
        writer.writeEnum(
            6,
            f
        );
    }
    f = this.getMovementTimerS();
    if (f !== 0.0) {
        writer.writeFloat(
            7,
            f
        );
    }
    f = this.getJumpTimeS();
    if (f !== 0.0) {
        writer.writeFloat(
            8,
            f
        );
    }
    f = this.getAttackTimerS();
    if (f !== 0.0) {
        writer.writeFloat(
            9,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional float base_capture_rate = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.getBaseCaptureRate = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.setBaseCaptureRate = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional float base_flee_rate = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.getBaseFleeRate = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.setBaseFleeRate = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional float collision_radius_m = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.getCollisionRadiusM = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.setCollisionRadiusM = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional float collision_height_m = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.getCollisionHeightM = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.setCollisionHeightM = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional float collision_head_radius_m = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.getCollisionHeadRadiusM = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.setCollisionHeadRadiusM = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonMovementType movement_type = 6;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMovementType}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.getMovementType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMovementType} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMovementType} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.setMovementType = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional float movement_timer_s = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.getMovementTimerS = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.setMovementTimerS = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional float jump_time_s = 8;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.getJumpTimeS = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.setJumpTimeS = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional float attack_timer_s = 9;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.getAttackTimerS = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.prototype.setAttackTimerS = function(value) {
    jspb.Message.setField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.repeatedFields_ = [9,10,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId(),
            modelScale: msg.getModelScale(),
            type: msg.getType(),
            type2: msg.getType2(),
            camera: (f = msg.getCamera()) && proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.toObject(includeInstance, f),
            encounter: (f = msg.getEncounter()) && proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.toObject(includeInstance, f),
            stats: (f = msg.getStats()) && proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.toObject(includeInstance, f),
            quickMovesList: jspb.Message.getField(msg, 9),
            cinematicMovesList: jspb.Message.getField(msg, 10),
            animationTimeList: jspb.Message.getRepeatedFloatingPointField(msg, 11),
            evolutionIdsList: jspb.Message.getField(msg, 12),
            evolutionPips: msg.getEvolutionPips(),
            rarity: msg.getRarity(),
            pokedexHeightM: msg.getPokedexHeightM(),
            pokedexWeightKg: msg.getPokedexWeightKg(),
            parentPokemonId: msg.getParentPokemonId(),
            heightStdDev: msg.getHeightStdDev(),
            weightStdDev: msg.getWeightStdDev(),
            kmDistanceToHatch: msg.getKmDistanceToHatch(),
            familyId: msg.getFamilyId(),
            candyToEvolve: msg.getCandyToEvolve(),
            kmBuddyDistance: msg.getKmBuddyDistance(),
            buddySize: msg.getBuddySize()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setPokemonId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setModelScale(value);
                break;
            case 4:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 5:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} */ (reader.readEnum());
                msg.setType2(value);
                break;
            case 6:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.deserializeBinaryFromReader);
                msg.setCamera(value);
                break;
            case 7:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.deserializeBinaryFromReader);
                msg.setEncounter(value);
                break;
            case 8:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.deserializeBinaryFromReader);
                msg.setStats(value);
                break;
            case 9:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove>} */ (reader.readPackedEnum());
                msg.setQuickMovesList(value);
                break;
            case 10:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove>} */ (reader.readPackedEnum());
                msg.setCinematicMovesList(value);
                break;
            case 11:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setAnimationTimeList(value);
                break;
            case 12:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId>} */ (reader.readPackedEnum());
                msg.setEvolutionIdsList(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEvolutionPips(value);
                break;
            case 14:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonRarity} */ (reader.readEnum());
                msg.setRarity(value);
                break;
            case 15:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setPokedexHeightM(value);
                break;
            case 16:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setPokedexWeightKg(value);
                break;
            case 17:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setParentPokemonId(value);
                break;
            case 18:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setHeightStdDev(value);
                break;
            case 19:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setWeightStdDev(value);
                break;
            case 20:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setKmDistanceToHatch(value);
                break;
            case 21:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId} */ (reader.readEnum());
                msg.setFamilyId(value);
                break;
            case 22:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCandyToEvolve(value);
                break;
            case 23:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setKmBuddyDistance(value);
                break;
            case 24:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.BuddySize} */ (reader.readEnum());
                msg.setBuddySize(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getModelScale();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = this.getType();
    if (f !== 0.0) {
        writer.writeEnum(
            4,
            f
        );
    }
    f = this.getType2();
    if (f !== 0.0) {
        writer.writeEnum(
            5,
            f
        );
    }
    f = this.getCamera();
    if (f != null) {
        writer.writeMessage(
            6,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes.serializeBinaryToWriter
        );
    }
    f = this.getEncounter();
    if (f != null) {
        writer.writeMessage(
            7,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes.serializeBinaryToWriter
        );
    }
    f = this.getStats();
    if (f != null) {
        writer.writeMessage(
            8,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes.serializeBinaryToWriter
        );
    }
    f = this.getQuickMovesList();
    if (f.length > 0) {
        writer.writePackedEnum(
            9,
            f
        );
    }
    f = this.getCinematicMovesList();
    if (f.length > 0) {
        writer.writePackedEnum(
            10,
            f
        );
    }
    f = this.getAnimationTimeList();
    if (f.length > 0) {
        writer.writePackedFloat(
            11,
            f
        );
    }
    f = this.getEvolutionIdsList();
    if (f.length > 0) {
        writer.writePackedEnum(
            12,
            f
        );
    }
    f = this.getEvolutionPips();
    if (f !== 0) {
        writer.writeInt32(
            13,
            f
        );
    }
    f = this.getRarity();
    if (f !== 0.0) {
        writer.writeEnum(
            14,
            f
        );
    }
    f = this.getPokedexHeightM();
    if (f !== 0.0) {
        writer.writeFloat(
            15,
            f
        );
    }
    f = this.getPokedexWeightKg();
    if (f !== 0.0) {
        writer.writeFloat(
            16,
            f
        );
    }
    f = this.getParentPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            17,
            f
        );
    }
    f = this.getHeightStdDev();
    if (f !== 0.0) {
        writer.writeFloat(
            18,
            f
        );
    }
    f = this.getWeightStdDev();
    if (f !== 0.0) {
        writer.writeFloat(
            19,
            f
        );
    }
    f = this.getKmDistanceToHatch();
    if (f !== 0.0) {
        writer.writeFloat(
            20,
            f
        );
    }
    f = this.getFamilyId();
    if (f !== 0.0) {
        writer.writeEnum(
            21,
            f
        );
    }
    f = this.getCandyToEvolve();
    if (f !== 0) {
        writer.writeInt32(
            22,
            f
        );
    }
    f = this.getKmBuddyDistance();
    if (f !== 0.0) {
        writer.writeFloat(
            23,
            f
        );
    }
    f = this.getBuddySize();
    if (f !== 0.0) {
        writer.writeEnum(
            24,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId pokemon_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional float model_scale = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getModelScale = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setModelScale = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonType type = 4;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setType = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonType type_2 = 5;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getType2 = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setType2 = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional pokemon.CameraAttributes camera = 6;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getCamera = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes, 6));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.CameraAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setCamera = function(value) {
    jspb.Message.setWrapperField(this, 6, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.clearCamera = function() {
    this.setCamera(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.hasCamera = function() {
    return jspb.Message.getField(this, 6) != null;
};


/**
 * optional pokemon.EncounterAttributes encounter = 7;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getEncounter = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes, 7));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.EncounterAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setEncounter = function(value) {
    jspb.Message.setWrapperField(this, 7, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.clearEncounter = function() {
    this.setEncounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.hasEncounter = function() {
    return jspb.Message.getField(this, 7) != null;
};


/**
 * optional pokemon.StatsAttributes stats = 8;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getStats = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes, 8));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.pokemon.StatsAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setStats = function(value) {
    jspb.Message.setWrapperField(this, 8, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.clearStats = function() {
    this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.hasStats = function() {
    return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.PokemonMove quick_moves = 9;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getQuickMovesList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove>} */ (jspb.Message.getField(this, 9));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setQuickMovesList = function(value) {
    jspb.Message.setField(this, 9, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.clearQuickMovesList = function() {
    jspb.Message.setField(this, 9, []);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.PokemonMove cinematic_moves = 10;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getCinematicMovesList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove>} */ (jspb.Message.getField(this, 10));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setCinematicMovesList = function(value) {
    jspb.Message.setField(this, 10, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.clearCinematicMovesList = function() {
    jspb.Message.setField(this, 10, []);
};


/**
 * repeated float animation_time = 11;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getAnimationTimeList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 11));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setAnimationTimeList = function(value) {
    jspb.Message.setField(this, 11, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.clearAnimationTimeList = function() {
    jspb.Message.setField(this, 11, []);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.PokemonId evolution_ids = 12;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getEvolutionIdsList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId>} */ (jspb.Message.getField(this, 12));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setEvolutionIdsList = function(value) {
    jspb.Message.setField(this, 12, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.clearEvolutionIdsList = function() {
    jspb.Message.setField(this, 12, []);
};


/**
 * optional int32 evolution_pips = 13;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getEvolutionPips = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 13, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setEvolutionPips = function(value) {
    jspb.Message.setField(this, 13, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonRarity rarity = 14;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonRarity}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getRarity = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonRarity} */ (jspb.Message.getFieldProto3(this, 14, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonRarity} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setRarity = function(value) {
    jspb.Message.setField(this, 14, value);
};


/**
 * optional float pokedex_height_m = 15;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getPokedexHeightM = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 15, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setPokedexHeightM = function(value) {
    jspb.Message.setField(this, 15, value);
};


/**
 * optional float pokedex_weight_kg = 16;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getPokedexWeightKg = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 16, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setPokedexWeightKg = function(value) {
    jspb.Message.setField(this, 16, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId parent_pokemon_id = 17;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getParentPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 17, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setParentPokemonId = function(value) {
    jspb.Message.setField(this, 17, value);
};


/**
 * optional float height_std_dev = 18;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getHeightStdDev = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 18, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setHeightStdDev = function(value) {
    jspb.Message.setField(this, 18, value);
};


/**
 * optional float weight_std_dev = 19;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getWeightStdDev = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 19, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setWeightStdDev = function(value) {
    jspb.Message.setField(this, 19, value);
};


/**
 * optional float km_distance_to_hatch = 20;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getKmDistanceToHatch = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 20, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setKmDistanceToHatch = function(value) {
    jspb.Message.setField(this, 20, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId family_id = 21;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getFamilyId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId} */ (jspb.Message.getFieldProto3(this, 21, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setFamilyId = function(value) {
    jspb.Message.setField(this, 21, value);
};


/**
 * optional int32 candy_to_evolve = 22;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getCandyToEvolve = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 22, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setCandyToEvolve = function(value) {
    jspb.Message.setField(this, 22, value);
};


/**
 * optional float km_buddy_distance = 23;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getKmBuddyDistance = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 23, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setKmBuddyDistance = function(value) {
    jspb.Message.setField(this, 23, value);
};


/**
 * optional BuddySize buddy_size = 24;
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.BuddySize}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.getBuddySize = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.BuddySize} */ (jspb.Message.getFieldProto3(this, 24, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.BuddySize} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.prototype.setBuddySize = function(value) {
    jspb.Message.setField(this, 24, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.BuddySize = {
    BUDDY_MEDIUM: 0,
    BUDDY_SHOULDER: 1,
    BUDDY_BIG: 2,
    BUDDY_FLYING: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            upgradesPerLevel: msg.getUpgradesPerLevel(),
            allowedLevelsAbovePlayer: msg.getAllowedLevelsAbovePlayer(),
            candyCostList: jspb.Message.getField(msg, 3),
            stardustCostList: jspb.Message.getField(msg, 4)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setUpgradesPerLevel(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setAllowedLevelsAbovePlayer(value);
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setCandyCostList(value);
                break;
            case 4:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setStardustCostList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getUpgradesPerLevel();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
    f = this.getAllowedLevelsAbovePlayer();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getCandyCostList();
    if (f.length > 0) {
        writer.writePackedInt32(
            3,
            f
        );
    }
    f = this.getStardustCostList();
    if (f.length > 0) {
        writer.writePackedInt32(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 upgrades_per_level = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.getUpgradesPerLevel = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.setUpgradesPerLevel = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 allowed_levels_above_player = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.getAllowedLevelsAbovePlayer = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.setAllowedLevelsAbovePlayer = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * repeated int32 candy_cost = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.getCandyCostList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.setCandyCostList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.clearCandyCostList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * repeated int32 stardust_cost = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.getStardustCostList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 4));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.setStardustCostList = function(value) {
    jspb.Message.setField(this, 4, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.prototype.clearStardustCostList = function() {
    jspb.Message.setField(this, 4, []);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.ItemCategory = {
    ITEM_CATEGORY_NONE: 0,
    ITEM_CATEGORY_POKEBALL: 1,
    ITEM_CATEGORY_FOOD: 2,
    ITEM_CATEGORY_MEDICINE: 3,
    ITEM_CATEGORY_BOOST: 4,
    ITEM_CATEGORY_UTILITES: 5,
    ITEM_CATEGORY_CAMERA: 6,
    ITEM_CATEGORY_DISK: 7,
    ITEM_CATEGORY_INCUBATOR: 8,
    ITEM_CATEGORY_INCENSE: 9,
    ITEM_CATEGORY_XP_BOOST: 10,
    ITEM_CATEGORY_INVENTORY_UPGRADE: 11
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId = {
    ITEM_UNKNOWN: 0,
    ITEM_POKE_BALL: 1,
    ITEM_GREAT_BALL: 2,
    ITEM_ULTRA_BALL: 3,
    ITEM_MASTER_BALL: 4,
    ITEM_POTION: 101,
    ITEM_SUPER_POTION: 102,
    ITEM_HYPER_POTION: 103,
    ITEM_MAX_POTION: 104,
    ITEM_REVIVE: 201,
    ITEM_MAX_REVIVE: 202,
    ITEM_LUCKY_EGG: 301,
    ITEM_INCENSE_ORDINARY: 401,
    ITEM_INCENSE_SPICY: 402,
    ITEM_INCENSE_COOL: 403,
    ITEM_INCENSE_FLORAL: 404,
    ITEM_TROY_DISK: 501,
    ITEM_X_ATTACK: 602,
    ITEM_X_DEFENSE: 603,
    ITEM_X_MIRACLE: 604,
    ITEM_RAZZ_BERRY: 701,
    ITEM_BLUK_BERRY: 702,
    ITEM_NANAB_BERRY: 703,
    ITEM_WEPAR_BERRY: 704,
    ITEM_PINAP_BERRY: 705,
    ITEM_SPECIAL_CAMERA: 801,
    ITEM_INCUBATOR_BASIC_UNLIMITED: 901,
    ITEM_INCUBATOR_BASIC: 902,
    ITEM_POKEMON_STORAGE_UPGRADE: 1001,
    ITEM_ITEM_STORAGE_UPGRADE: 1002
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemType = {
    ITEM_TYPE_NONE: 0,
    ITEM_TYPE_POKEBALL: 1,
    ITEM_TYPE_POTION: 2,
    ITEM_TYPE_REVIVE: 3,
    ITEM_TYPE_MAP: 4,
    ITEM_TYPE_BATTLE: 5,
    ITEM_TYPE_FOOD: 6,
    ITEM_TYPE_CAMERA: 7,
    ITEM_TYPE_DISK: 8,
    ITEM_TYPE_INCUBATOR: 9,
    ITEM_TYPE_INCENSE: 10,
    ITEM_TYPE_XP_BOOST: 11,
    ITEM_TYPE_INVENTORY_UPGRADE: 12
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.ItemEffect = {
    ITEM_EFFECT_NONE: 0,
    ITEM_EFFECT_CAP_NO_FLEE: 1000,
    ITEM_EFFECT_CAP_NO_MOVEMENT: 1002,
    ITEM_EFFECT_CAP_NO_THREAT: 1003,
    ITEM_EFFECT_CAP_TARGET_MAX: 1004,
    ITEM_EFFECT_CAP_TARGET_SLOW: 1005,
    ITEM_EFFECT_CAP_CHANCE_NIGHT: 1006,
    ITEM_EFFECT_CAP_CHANCE_TRAINER: 1007,
    ITEM_EFFECT_CAP_CHANCE_FIRST_THROW: 1008,
    ITEM_EFFECT_CAP_CHANCE_LEGEND: 1009,
    ITEM_EFFECT_CAP_CHANCE_HEAVY: 1010,
    ITEM_EFFECT_CAP_CHANCE_REPEAT: 1011,
    ITEM_EFFECT_CAP_CHANCE_MULTI_THROW: 1012,
    ITEM_EFFECT_CAP_CHANCE_ALWAYS: 1013,
    ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW: 1014
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemEffectList: jspb.Message.getField(msg, 1),
            itemEffectPercentList: jspb.Message.getRepeatedFloatingPointField(msg, 2),
            growthPercent: msg.getGrowthPercent()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.ItemEffect>} */ (reader.readPackedEnum());
                msg.setItemEffectList(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setItemEffectPercentList(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setGrowthPercent(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemEffectList();
    if (f.length > 0) {
        writer.writePackedEnum(
            1,
            f
        );
    }
    f = this.getItemEffectPercentList();
    if (f.length > 0) {
        writer.writePackedFloat(
            2,
            f
        );
    }
    f = this.getGrowthPercent();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.ItemEffect item_effect = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.ItemEffect>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.getItemEffectList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.ItemEffect>} */ (jspb.Message.getField(this, 1));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.ItemEffect>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.setItemEffectList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.clearItemEffectList = function() {
    jspb.Message.setField(this, 1, []);
};


/**
 * repeated float item_effect_percent = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.getItemEffectPercentList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.setItemEffectPercentList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.clearItemEffectPercentList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * optional float growth_percent = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.getGrowthPercent = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.prototype.setGrowthPercent = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            staPercent: msg.getStaPercent(),
            staAmount: msg.getStaAmount()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setStaPercent(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStaAmount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStaPercent();
    if (f !== 0.0) {
        writer.writeFloat(
            1,
            f
        );
    }
    f = this.getStaAmount();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional float sta_percent = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.prototype.getStaPercent = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.prototype.setStaPercent = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 sta_amount = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.prototype.getStaAmount = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.prototype.setStaAmount = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            staPercent: msg.getStaPercent()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setStaPercent(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStaPercent();
    if (f !== 0.0) {
        writer.writeFloat(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional float sta_percent = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.prototype.getStaPercent = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.prototype.setStaPercent = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            staPercent: msg.getStaPercent()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setStaPercent(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStaPercent();
    if (f !== 0.0) {
        writer.writeFloat(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional float sta_percent = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.prototype.getStaPercent = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.prototype.setStaPercent = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            incenseLifetimeSeconds: msg.getIncenseLifetimeSeconds(),
            pokemonTypeList: jspb.Message.getField(msg, 2),
            pokemonIncenseTypeProbability: msg.getPokemonIncenseTypeProbability(),
            standingTimeBetweenEncountersSeconds: msg.getStandingTimeBetweenEncountersSeconds(),
            movingTimeBetweenEncounterSeconds: msg.getMovingTimeBetweenEncounterSeconds(),
            distanceRequiredForShorterIntervalMeters: msg.getDistanceRequiredForShorterIntervalMeters(),
            pokemonAttractedLengthSec: msg.getPokemonAttractedLengthSec()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setIncenseLifetimeSeconds(value);
                break;
            case 2:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType>} */ (reader.readPackedEnum());
                msg.setPokemonTypeList(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setPokemonIncenseTypeProbability(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStandingTimeBetweenEncountersSeconds(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMovingTimeBetweenEncounterSeconds(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDistanceRequiredForShorterIntervalMeters(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPokemonAttractedLengthSec(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getIncenseLifetimeSeconds();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
    f = this.getPokemonTypeList();
    if (f.length > 0) {
        writer.writePackedEnum(
            2,
            f
        );
    }
    f = this.getPokemonIncenseTypeProbability();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = this.getStandingTimeBetweenEncountersSeconds();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
    f = this.getMovingTimeBetweenEncounterSeconds();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
    f = this.getDistanceRequiredForShorterIntervalMeters();
    if (f !== 0) {
        writer.writeInt32(
            6,
            f
        );
    }
    f = this.getPokemonAttractedLengthSec();
    if (f !== 0) {
        writer.writeInt32(
            7,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 incense_lifetime_seconds = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.getIncenseLifetimeSeconds = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.setIncenseLifetimeSeconds = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.PokemonType pokemon_type = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.getPokemonTypeList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType>} */ (jspb.Message.getField(this, 2));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.PokemonType>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.setPokemonTypeList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.clearPokemonTypeList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * optional float pokemon_incense_type_probability = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.getPokemonIncenseTypeProbability = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.setPokemonIncenseTypeProbability = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 standing_time_between_encounters_seconds = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.getStandingTimeBetweenEncountersSeconds = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.setStandingTimeBetweenEncountersSeconds = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 moving_time_between_encounter_seconds = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.getMovingTimeBetweenEncounterSeconds = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.setMovingTimeBetweenEncounterSeconds = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional int32 distance_required_for_shorter_interval_meters = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.getDistanceRequiredForShorterIntervalMeters = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.setDistanceRequiredForShorterIntervalMeters = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 pokemon_attracted_length_sec = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.getPokemonAttractedLengthSec = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.prototype.setPokemonAttractedLengthSec = function(value) {
    jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemEffect: msg.getItemEffect(),
            captureMulti: msg.getCaptureMulti(),
            captureMultiEffect: msg.getCaptureMultiEffect(),
            itemEffectMod: msg.getItemEffectMod()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.ItemEffect} */ (reader.readEnum());
                msg.setItemEffect(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCaptureMulti(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCaptureMultiEffect(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setItemEffectMod(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemEffect();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getCaptureMulti();
    if (f !== 0.0) {
        writer.writeFloat(
            2,
            f
        );
    }
    f = this.getCaptureMultiEffect();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = this.getItemEffectMod();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.ItemEffect item_effect = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.ItemEffect}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.getItemEffect = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.ItemEffect} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.ItemEffect} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.setItemEffect = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional float capture_multi = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.getCaptureMulti = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.setCaptureMulti = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional float capture_multi_effect = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.getCaptureMultiEffect = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.setCaptureMultiEffect = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional float item_effect_mod = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.getItemEffectMod = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.prototype.setItemEffectMod = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            modifierLifetimeSeconds: msg.getModifierLifetimeSeconds(),
            troyDiskNumPokemonSpawned: msg.getTroyDiskNumPokemonSpawned()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setModifierLifetimeSeconds(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTroyDiskNumPokemonSpawned(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getModifierLifetimeSeconds();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
    f = this.getTroyDiskNumPokemonSpawned();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 modifier_lifetime_seconds = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.prototype.getModifierLifetimeSeconds = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.prototype.setModifierLifetimeSeconds = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 troy_disk_num_pokemon_spawned = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.prototype.getTroyDiskNumPokemonSpawned = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.prototype.setTroyDiskNumPokemonSpawned = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType = {
    INCUBATOR_UNSET: 0,
    INCUBATOR_DISTANCE: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            incubatorType: msg.getIncubatorType(),
            uses: msg.getUses(),
            distanceMultiplier: msg.getDistanceMultiplier()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType} */ (reader.readEnum());
                msg.setIncubatorType(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setUses(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setDistanceMultiplier(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getIncubatorType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getUses();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getDistanceMultiplier();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType incubator_type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.prototype.getIncubatorType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.prototype.setIncubatorType = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 uses = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.prototype.getUses = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.prototype.setUses = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional float distance_multiplier = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.prototype.getDistanceMultiplier = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.prototype.setDistanceMultiplier = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            xpMultiplier: msg.getXpMultiplier(),
            boostDurationMs: msg.getBoostDurationMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setXpMultiplier(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBoostDurationMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getXpMultiplier();
    if (f !== 0.0) {
        writer.writeFloat(
            1,
            f
        );
    }
    f = this.getBoostDurationMs();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional float xp_multiplier = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.prototype.getXpMultiplier = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.prototype.setXpMultiplier = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 boost_duration_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.prototype.getBoostDurationMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.prototype.setBoostDurationMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType = {
    UPGRADE_UNSET: 0,
    INCREASE_ITEM_STORAGE: 1,
    INCREASE_POKEMON_STORAGE: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.toObject = function(includeInstance, msg) {
        var f, obj = {
            additionalStorage: msg.getAdditionalStorage(),
            upgradeType: msg.getUpgradeType()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setAdditionalStorage(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType} */ (reader.readEnum());
                msg.setUpgradeType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getAdditionalStorage();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
    f = this.getUpgradeType();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 additional_storage = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.prototype.getAdditionalStorage = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.prototype.setAdditionalStorage = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType upgrade_type = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.prototype.getUpgradeType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.prototype.setUpgradeType = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            itemType: msg.getItemType(),
            category: msg.getCategory(),
            dropFreq: msg.getDropFreq(),
            dropTrainerLevel: msg.getDropTrainerLevel(),
            pokeball: (f = msg.getPokeball()) && proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.toObject(includeInstance, f),
            potion: (f = msg.getPotion()) && proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.toObject(includeInstance, f),
            revive: (f = msg.getRevive()) && proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.toObject(includeInstance, f),
            battle: (f = msg.getBattle()) && proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.toObject(includeInstance, f),
            food: (f = msg.getFood()) && proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.toObject(includeInstance, f),
            inventoryUpgrade: (f = msg.getInventoryUpgrade()) && proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.toObject(includeInstance, f),
            xpBoost: (f = msg.getXpBoost()) && proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.toObject(includeInstance, f),
            incense: (f = msg.getIncense()) && proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.toObject(includeInstance, f),
            eggIncubator: (f = msg.getEggIncubator()) && proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.toObject(includeInstance, f),
            fortModifier: (f = msg.getFortModifier()) && proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemType} */ (reader.readEnum());
                msg.setItemType(value);
                break;
            case 3:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.ItemCategory} */ (reader.readEnum());
                msg.setCategory(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setDropFreq(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDropTrainerLevel(value);
                break;
            case 6:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.deserializeBinaryFromReader);
                msg.setPokeball(value);
                break;
            case 7:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.deserializeBinaryFromReader);
                msg.setPotion(value);
                break;
            case 8:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.deserializeBinaryFromReader);
                msg.setRevive(value);
                break;
            case 9:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.deserializeBinaryFromReader);
                msg.setBattle(value);
                break;
            case 10:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.deserializeBinaryFromReader);
                msg.setFood(value);
                break;
            case 11:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.deserializeBinaryFromReader);
                msg.setInventoryUpgrade(value);
                break;
            case 12:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.deserializeBinaryFromReader);
                msg.setXpBoost(value);
                break;
            case 13:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.deserializeBinaryFromReader);
                msg.setIncense(value);
                break;
            case 14:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.deserializeBinaryFromReader);
                msg.setEggIncubator(value);
                break;
            case 15:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.deserializeBinaryFromReader);
                msg.setFortModifier(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getItemType();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getCategory();
    if (f !== 0.0) {
        writer.writeEnum(
            3,
            f
        );
    }
    f = this.getDropFreq();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = this.getDropTrainerLevel();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
    f = this.getPokeball();
    if (f != null) {
        writer.writeMessage(
            6,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes.serializeBinaryToWriter
        );
    }
    f = this.getPotion();
    if (f != null) {
        writer.writeMessage(
            7,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes.serializeBinaryToWriter
        );
    }
    f = this.getRevive();
    if (f != null) {
        writer.writeMessage(
            8,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes.serializeBinaryToWriter
        );
    }
    f = this.getBattle();
    if (f != null) {
        writer.writeMessage(
            9,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes.serializeBinaryToWriter
        );
    }
    f = this.getFood();
    if (f != null) {
        writer.writeMessage(
            10,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes.serializeBinaryToWriter
        );
    }
    f = this.getInventoryUpgrade();
    if (f != null) {
        writer.writeMessage(
            11,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes.serializeBinaryToWriter
        );
    }
    f = this.getXpBoost();
    if (f != null) {
        writer.writeMessage(
            12,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes.serializeBinaryToWriter
        );
    }
    f = this.getIncense();
    if (f != null) {
        writer.writeMessage(
            13,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes.serializeBinaryToWriter
        );
    }
    f = this.getEggIncubator();
    if (f != null) {
        writer.writeMessage(
            14,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes.serializeBinaryToWriter
        );
    }
    f = this.getFortModifier();
    if (f != null) {
        writer.writeMessage(
            15,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemType item_type = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemType}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getItemType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemType} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemType} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setItemType = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.ItemCategory category = 3;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.ItemCategory}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getCategory = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.ItemCategory} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.ItemCategory} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setCategory = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional float drop_freq = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getDropFreq = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setDropFreq = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 drop_trainer_level = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getDropTrainerLevel = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setDropTrainerLevel = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional item.PokeballAttributes pokeball = 6;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getPokeball = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes, 6));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.item.PokeballAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setPokeball = function(value) {
    jspb.Message.setWrapperField(this, 6, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.clearPokeball = function() {
    this.setPokeball(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.hasPokeball = function() {
    return jspb.Message.getField(this, 6) != null;
};


/**
 * optional item.PotionAttributes potion = 7;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getPotion = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes, 7));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.item.PotionAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setPotion = function(value) {
    jspb.Message.setWrapperField(this, 7, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.clearPotion = function() {
    this.setPotion(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.hasPotion = function() {
    return jspb.Message.getField(this, 7) != null;
};


/**
 * optional item.ReviveAttributes revive = 8;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getRevive = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes, 8));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.item.ReviveAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setRevive = function(value) {
    jspb.Message.setWrapperField(this, 8, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.clearRevive = function() {
    this.setRevive(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.hasRevive = function() {
    return jspb.Message.getField(this, 8) != null;
};


/**
 * optional item.BattleAttributes battle = 9;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getBattle = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes, 9));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.item.BattleAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setBattle = function(value) {
    jspb.Message.setWrapperField(this, 9, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.clearBattle = function() {
    this.setBattle(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.hasBattle = function() {
    return jspb.Message.getField(this, 9) != null;
};


/**
 * optional item.FoodAttributes food = 10;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getFood = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes, 10));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.item.FoodAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setFood = function(value) {
    jspb.Message.setWrapperField(this, 10, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.clearFood = function() {
    this.setFood(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.hasFood = function() {
    return jspb.Message.getField(this, 10) != null;
};


/**
 * optional item.InventoryUpgradeAttributes inventory_upgrade = 11;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getInventoryUpgrade = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes, 11));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.item.InventoryUpgradeAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setInventoryUpgrade = function(value) {
    jspb.Message.setWrapperField(this, 11, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.clearInventoryUpgrade = function() {
    this.setInventoryUpgrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.hasInventoryUpgrade = function() {
    return jspb.Message.getField(this, 11) != null;
};


/**
 * optional item.ExperienceBoostAttributes xp_boost = 12;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getXpBoost = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes, 12));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.item.ExperienceBoostAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setXpBoost = function(value) {
    jspb.Message.setWrapperField(this, 12, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.clearXpBoost = function() {
    this.setXpBoost(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.hasXpBoost = function() {
    return jspb.Message.getField(this, 12) != null;
};


/**
 * optional item.IncenseAttributes incense = 13;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getIncense = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes, 13));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.item.IncenseAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setIncense = function(value) {
    jspb.Message.setWrapperField(this, 13, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.clearIncense = function() {
    this.setIncense(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.hasIncense = function() {
    return jspb.Message.getField(this, 13) != null;
};


/**
 * optional item.EggIncubatorAttributes egg_incubator = 14;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getEggIncubator = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes, 14));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.item.EggIncubatorAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setEggIncubator = function(value) {
    jspb.Message.setWrapperField(this, 14, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.clearEggIncubator = function() {
    this.setEggIncubator(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.hasEggIncubator = function() {
    return jspb.Message.getField(this, 14) != null;
};


/**
 * optional item.FortModifierAttributes fort_modifier = 15;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.getFortModifier = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes, 15));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.item.FortModifierAttributes|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.setFortModifier = function(value) {
    jspb.Message.setWrapperField(this, 15, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.clearFortModifier = function() {
    this.setFortModifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.prototype.hasFortModifier = function() {
    return jspb.Message.getField(this, 15) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            spinBonusThreshold: msg.getSpinBonusThreshold(),
            excellentThrowThreshold: msg.getExcellentThrowThreshold(),
            greatThrowThreshold: msg.getGreatThrowThreshold(),
            niceThrowThreshold: msg.getNiceThrowThreshold(),
            milestoneThreshold: msg.getMilestoneThreshold()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setSpinBonusThreshold(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setExcellentThrowThreshold(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setGreatThrowThreshold(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setNiceThrowThreshold(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMilestoneThreshold(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSpinBonusThreshold();
    if (f !== 0.0) {
        writer.writeFloat(
            1,
            f
        );
    }
    f = this.getExcellentThrowThreshold();
    if (f !== 0.0) {
        writer.writeFloat(
            2,
            f
        );
    }
    f = this.getGreatThrowThreshold();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = this.getNiceThrowThreshold();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = this.getMilestoneThreshold();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional float spin_bonus_threshold = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.getSpinBonusThreshold = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.setSpinBonusThreshold = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional float excellent_throw_threshold = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.getExcellentThrowThreshold = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.setExcellentThrowThreshold = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional float great_throw_threshold = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.getGreatThrowThreshold = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.setGreatThrowThreshold = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional float nice_throw_threshold = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.getNiceThrowThreshold = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.setNiceThrowThreshold = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 milestone_threshold = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.getMilestoneThreshold = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.prototype.setMilestoneThreshold = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.HoloIapItemCategory = {
    IAP_CATEGORY_NONE: 0,
    IAP_CATEGORY_BUNDLE: 1,
    IAP_CATEGORY_ITEMS: 2,
    IAP_CATEGORY_UPGRADES: 3,
    IAP_CATEGORY_POKECOINS: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.toObject = function(includeInstance, msg) {
        var f, obj = {
            sku: msg.getSku(),
            category: msg.getCategory(),
            sortOrder: msg.getSortOrder(),
            itemIdsList: jspb.Message.getField(msg, 4),
            countsList: jspb.Message.getField(msg, 5)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay;
    return proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setSku(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.HoloIapItemCategory} */ (reader.readEnum());
                msg.setCategory(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setSortOrder(value);
                break;
            case 4:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} */ (reader.readPackedEnum());
                msg.setItemIdsList(value);
                break;
            case 5:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setCountsList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSku();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getCategory();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getSortOrder();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getItemIdsList();
    if (f.length > 0) {
        writer.writePackedEnum(
            4,
            f
        );
    }
    f = this.getCountsList();
    if (f.length > 0) {
        writer.writePackedInt32(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string sku = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.getSku = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.setSku = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.HoloIapItemCategory category = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.HoloIapItemCategory}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.getCategory = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.HoloIapItemCategory} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.HoloIapItemCategory} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.setCategory = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 sort_order = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.getSortOrder = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.setSortOrder = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.inventory.item.ItemId item_ids = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.getItemIdsList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} */ (jspb.Message.getField(this, 4));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.setItemIdsList = function(value) {
    jspb.Message.setField(this, 4, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.clearItemIdsList = function() {
    jspb.Message.setField(this, 4, []);
};


/**
 * repeated int32 counts = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.getCountsList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 5));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.setCountsList = function(value) {
    jspb.Message.setField(this, 5, value || []);
};


proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.prototype.clearCountsList = function() {
    jspb.Message.setField(this, 5, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.displayName = 'proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.toObject = function(includeInstance, msg) {
        var f, obj = {
            fortSummaryId: msg.getFortSummaryId(),
            lastModifiedTimestampMs: msg.getLastModifiedTimestampMs(),
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary;
    return proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortSummaryId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setLastModifiedTimestampMs(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getFortSummaryId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getLastModifiedTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string fort_summary_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.getFortSummaryId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.setFortSummaryId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 last_modified_timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.getLastModifiedTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.setLastModifiedTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.TeamColor = {
    NEUTRAL: 0,
    BLUE: 1,
    RED: 2,
    YELLOW: 3
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortType = {
    GYM: 0,
    CHECKPOINT: 1
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortSponsor = {
    UNSET_SPONSOR: 0,
    MCDONALDS: 1,
    POKEMON_STORE: 2
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortRenderingType = {
    DEFAULT: 0,
    INTERNAL_TEST: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.displayName = 'proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.toObject = function(includeInstance, msg) {
        var f, obj = {
            fortId: msg.getFortId(),
            encounterId: msg.getEncounterId(),
            activePokemonId: msg.getActivePokemonId(),
            lureExpiresTimestampMs: msg.getLureExpiresTimestampMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo;
    return proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setEncounterId(value);
                break;
            case 3:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setActivePokemonId(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setLureExpiresTimestampMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getFortId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getEncounterId();
    if (f !== 0) {
        writer.writeFixed64(
            2,
            f
        );
    }
    f = this.getActivePokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            3,
            f
        );
    }
    f = this.getLureExpiresTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string fort_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.getFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.setFortId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 encounter_id = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.getEncounterId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.setEncounterId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId active_pokemon_id = 3;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.getActivePokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.setActivePokemonId = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 lure_expires_timestamp_ms = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.getLureExpiresTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.prototype.setLureExpiresTimestampMs = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.map.fort.FortData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.displayName = 'proto.com.github.aeonlucid.pogoprotos.map.fort.FortData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.toObject = function(includeInstance, msg) {
        var f, obj = {
            id: msg.getId(),
            lastModifiedTimestampMs: msg.getLastModifiedTimestampMs(),
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude(),
            enabled: msg.getEnabled(),
            type: msg.getType(),
            ownedByTeam: msg.getOwnedByTeam(),
            guardPokemonId: msg.getGuardPokemonId(),
            guardPokemonCp: msg.getGuardPokemonCp(),
            gymPoints: msg.getGymPoints(),
            isInBattle: msg.getIsInBattle(),
            activeFortModifierList: jspb.Message.getField(msg, 12),
            lureInfo: (f = msg.getLureInfo()) && proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.toObject(includeInstance, f),
            cooldownCompleteTimestampMs: msg.getCooldownCompleteTimestampMs(),
            sponsor: msg.getSponsor(),
            renderingType: msg.getRenderingType()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.map.fort.FortData;
    return proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setLastModifiedTimestampMs(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            case 8:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setEnabled(value);
                break;
            case 9:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortType} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 5:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} */ (reader.readEnum());
                msg.setOwnedByTeam(value);
                break;
            case 6:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setGuardPokemonId(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setGuardPokemonCp(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setGymPoints(value);
                break;
            case 11:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsInBattle(value);
                break;
            case 12:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} */ (reader.readPackedEnum());
                msg.setActiveFortModifierList(value);
                break;
            case 13:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.deserializeBinaryFromReader);
                msg.setLureInfo(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setCooldownCompleteTimestampMs(value);
                break;
            case 15:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSponsor} */ (reader.readEnum());
                msg.setSponsor(value);
                break;
            case 16:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortRenderingType} */ (reader.readEnum());
                msg.setRenderingType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getLastModifiedTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
    f = this.getEnabled();
    if (f) {
        writer.writeBool(
            8,
            f
        );
    }
    f = this.getType();
    if (f !== 0.0) {
        writer.writeEnum(
            9,
            f
        );
    }
    f = this.getOwnedByTeam();
    if (f !== 0.0) {
        writer.writeEnum(
            5,
            f
        );
    }
    f = this.getGuardPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            6,
            f
        );
    }
    f = this.getGuardPokemonCp();
    if (f !== 0) {
        writer.writeInt32(
            7,
            f
        );
    }
    f = this.getGymPoints();
    if (f !== 0) {
        writer.writeInt64(
            10,
            f
        );
    }
    f = this.getIsInBattle();
    if (f) {
        writer.writeBool(
            11,
            f
        );
    }
    f = this.getActiveFortModifierList();
    if (f.length > 0) {
        writer.writePackedEnum(
            12,
            f
        );
    }
    f = this.getLureInfo();
    if (f != null) {
        writer.writeMessage(
            13,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo.serializeBinaryToWriter
        );
    }
    f = this.getCooldownCompleteTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            14,
            f
        );
    }
    f = this.getSponsor();
    if (f !== 0.0) {
        writer.writeEnum(
            15,
            f
        );
    }
    f = this.getRenderingType();
    if (f !== 0.0) {
        writer.writeEnum(
            16,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 last_modified_timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getLastModifiedTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setLastModifiedTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional bool enabled = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getEnabled = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 8, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setEnabled = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional FortType type = 9;
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortType}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortType} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortType} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setType = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.TeamColor owned_by_team = 5;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getOwnedByTeam = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setOwnedByTeam = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId guard_pokemon_id = 6;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getGuardPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setGuardPokemonId = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 guard_pokemon_cp = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getGuardPokemonCp = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setGuardPokemonCp = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional int64 gym_points = 10;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getGymPoints = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setGymPoints = function(value) {
    jspb.Message.setField(this, 10, value);
};


/**
 * optional bool is_in_battle = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getIsInBattle = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 11, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setIsInBattle = function(value) {
    jspb.Message.setField(this, 11, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.inventory.item.ItemId active_fort_modifier = 12;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getActiveFortModifierList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} */ (jspb.Message.getField(this, 12));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setActiveFortModifierList = function(value) {
    jspb.Message.setField(this, 12, value || []);
};


proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.clearActiveFortModifierList = function() {
    jspb.Message.setField(this, 12, []);
};


/**
 * optional FortLureInfo lure_info = 13;
 * @return {proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getLureInfo = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo, 13));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.map.fort.FortLureInfo|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setLureInfo = function(value) {
    jspb.Message.setWrapperField(this, 13, value);
};


proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.clearLureInfo = function() {
    this.setLureInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.hasLureInfo = function() {
    return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int64 cooldown_complete_timestamp_ms = 14;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getCooldownCompleteTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 14, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setCooldownCompleteTimestampMs = function(value) {
    jspb.Message.setField(this, 14, value);
};


/**
 * optional FortSponsor sponsor = 15;
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSponsor}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getSponsor = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSponsor} */ (jspb.Message.getFieldProto3(this, 15, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSponsor} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setSponsor = function(value) {
    jspb.Message.setField(this, 15, value);
};


/**
 * optional FortRenderingType rendering_type = 16;
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortRenderingType}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.getRenderingType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortRenderingType} */ (jspb.Message.getFieldProto3(this, 16, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortRenderingType} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.prototype.setRenderingType = function(value) {
    jspb.Message.setField(this, 16, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.displayName = 'proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            expirationTimestampMs: msg.getExpirationTimestampMs(),
            deployerPlayerCodename: msg.getDeployerPlayerCodename()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier;
    return proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setExpirationTimestampMs(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeployerPlayerCodename(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getExpirationTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = this.getDeployerPlayerCodename();
    if (f.length > 0) {
        writer.writeString(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 expiration_timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.prototype.getExpirationTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.prototype.setExpirationTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional string deployer_player_codename = 3;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.prototype.getDeployerPlayerCodename = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.prototype.setDeployerPlayerCodename = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            count: msg.getCount(),
            unseen: msg.getUnseen()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData;
    return proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCount(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setUnseen(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getCount();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getUnseen();
    if (f) {
        writer.writeBool(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.prototype.getCount = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.prototype.setCount = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional bool unseen = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.prototype.getUnseen = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.prototype.setUnseen = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            fortId: msg.getFortId(),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(),
                proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.toObject, includeInstance),
            eggs: msg.getEggs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry;
    return proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortId(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.deserializeBinaryFromReader);
                msg.getItemsList().push(value);
                msg.setItemsList(msg.getItemsList());
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEggs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getFortId();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.serializeBinaryToWriter
        );
    }
    f = this.getEggs();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.Result}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.Result} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string fort_id = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.getFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.setFortId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.inventory.item.ItemData items = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData>}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.getItemsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData, 3));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData>} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.setItemsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.clearItemsList = function() {
    this.setItemsList([]);
};


/**
 * optional int32 eggs = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.getEggs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.prototype.setEggs = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.Result = {
    UNSET: 0,
    SUCCESS: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            pokemonId: msg.getPokemonId(),
            amount: msg.getAmount()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry;
    return proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setPokemonId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setAmount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getAmount();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.Result}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.Result} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId pokemon_id = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.prototype.getPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 amount = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.prototype.getAmount = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.prototype.setAmount = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.Result = {
    UNSET: 0,
    CANDY_FOUND: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            pokemonId: msg.getPokemonId(),
            combatPoints: msg.getCombatPoints(),
            pokemonDataId: msg.getPokemonDataId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry;
    return proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setPokemonId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCombatPoints(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonDataId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getCombatPoints();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getPokemonDataId();
    if (f !== 0) {
        writer.writeFixed64(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.Result}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.Result} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId pokemon_id = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.getPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 combat_points = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.getCombatPoints = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.setCombatPoints = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional fixed64 pokemon_data_id = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.getPokemonDataId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.prototype.setPokemonDataId = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.Result = {
    UNSET: 0,
    POKEMON_CAPTURED: 1,
    POKEMON_FLED: 2,
    POKEMON_HATCHED: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.oneofGroups_);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.ActionCase = {
    ACTION_NOT_SET: 0,
    CATCH_POKEMON: 3,
    FORT_SEARCH: 4,
    BUDDY_POKEMON: 5
};

/**
 * @return {proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.ActionCase}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.getActionCase = function() {
    return /** @type {proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.ActionCase} */(jspb.Message.computeOneofCase(this, proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.toObject = function(includeInstance, msg) {
        var f, obj = {
            timestampMs: msg.getTimestampMs(),
            sfida: msg.getSfida(),
            catchPokemon: (f = msg.getCatchPokemon()) && proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.toObject(includeInstance, f),
            fortSearch: (f = msg.getFortSearch()) && proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.toObject(includeInstance, f),
            buddyPokemon: (f = msg.getBuddyPokemon()) && proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry;
    return proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTimestampMs(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSfida(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.deserializeBinaryFromReader);
                msg.setCatchPokemon(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.deserializeBinaryFromReader);
                msg.setFortSearch(value);
                break;
            case 5:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.deserializeBinaryFromReader);
                msg.setBuddyPokemon(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            1,
            f
        );
    }
    f = this.getSfida();
    if (f) {
        writer.writeBool(
            2,
            f
        );
    }
    f = this.getCatchPokemon();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry.serializeBinaryToWriter
        );
    }
    f = this.getFortSearch();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry.serializeBinaryToWriter
        );
    }
    f = this.getBuddyPokemon();
    if (f != null) {
        writer.writeMessage(
            5,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 timestamp_ms = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.getTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.setTimestampMs = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional bool sfida = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.getSfida = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.setSfida = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional CatchPokemonLogEntry catch_pokemon = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.getCatchPokemon = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.logs.CatchPokemonLogEntry|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.setCatchPokemon = function(value) {
    jspb.Message.setOneofWrapperField(this, 3, proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.oneofGroups_[0], value);
};


proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.clearCatchPokemon = function() {
    this.setCatchPokemon(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.hasCatchPokemon = function() {
    return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FortSearchLogEntry fort_search = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.getFortSearch = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.logs.FortSearchLogEntry|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.setFortSearch = function(value) {
    jspb.Message.setOneofWrapperField(this, 4, proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.oneofGroups_[0], value);
};


proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.clearFortSearch = function() {
    this.setFortSearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.hasFortSearch = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BuddyPokemonLogEntry buddy_pokemon = 5;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.getBuddyPokemon = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry, 5));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.logs.BuddyPokemonLogEntry|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.setBuddyPokemon = function(value) {
    jspb.Message.setOneofWrapperField(this, 5, proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.oneofGroups_[0], value);
};


proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.clearBuddyPokemon = function() {
    this.setBuddyPokemon(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.prototype.hasBuddyPokemon = function() {
    return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.displayName = 'proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.toObject = function(includeInstance, msg) {
        var f, obj = {
            spawnPointId: msg.getSpawnPointId(),
            encounterId: msg.getEncounterId(),
            pokemonId: msg.getPokemonId(),
            expirationTimestampMs: msg.getExpirationTimestampMs(),
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon;
    return proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setSpawnPointId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setEncounterId(value);
                break;
            case 3:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setPokemonId(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setExpirationTimestampMs(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSpawnPointId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getEncounterId();
    if (f !== 0) {
        writer.writeFixed64(
            2,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            3,
            f
        );
    }
    f = this.getExpirationTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            4,
            f
        );
    }
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            5,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            6,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string spawn_point_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.getSpawnPointId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.setSpawnPointId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 encounter_id = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.getEncounterId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.setEncounterId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId pokemon_id = 3;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.getPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 expiration_timestamp_ms = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.getExpirationTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.setExpirationTimestampMs = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional double latitude = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional double longitude = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.displayName = 'proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId(),
            distanceInMeters: msg.getDistanceInMeters(),
            encounterId: msg.getEncounterId(),
            fortId: msg.getFortId(),
            fortImageUrl: msg.getFortImageUrl()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon;
    return proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setPokemonId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setDistanceInMeters(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setEncounterId(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortId(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortImageUrl(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getDistanceInMeters();
    if (f !== 0.0) {
        writer.writeFloat(
            2,
            f
        );
    }
    f = this.getEncounterId();
    if (f !== 0) {
        writer.writeFixed64(
            3,
            f
        );
    }
    f = this.getFortId();
    if (f.length > 0) {
        writer.writeString(
            4,
            f
        );
    }
    f = this.getFortImageUrl();
    if (f.length > 0) {
        writer.writeString(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId pokemon_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.getPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional float distance_in_meters = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.getDistanceInMeters = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.setDistanceInMeters = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional fixed64 encounter_id = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.getEncounterId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.setEncounterId = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional string fort_id = 4;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.getFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.setFortId = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional string fort_image_url = 5;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.getFortImageUrl = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.prototype.setFortImageUrl = function(value) {
    jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.PokemonData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.PokemonData.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.PokemonData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.PokemonData} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject = function(includeInstance, msg) {
        var f, obj = {
            id: msg.getId(),
            pokemonId: msg.getPokemonId(),
            cp: msg.getCp(),
            stamina: msg.getStamina(),
            staminaMax: msg.getStaminaMax(),
            move1: msg.getMove1(),
            move2: msg.getMove2(),
            deployedFortId: msg.getDeployedFortId(),
            ownerName: msg.getOwnerName(),
            isEgg: msg.getIsEgg(),
            eggKmWalkedTarget: msg.getEggKmWalkedTarget(),
            eggKmWalkedStart: msg.getEggKmWalkedStart(),
            origin: msg.getOrigin(),
            heightM: msg.getHeightM(),
            weightKg: msg.getWeightKg(),
            individualAttack: msg.getIndividualAttack(),
            individualDefense: msg.getIndividualDefense(),
            individualStamina: msg.getIndividualStamina(),
            cpMultiplier: msg.getCpMultiplier(),
            pokeball: msg.getPokeball(),
            capturedCellId: msg.getCapturedCellId(),
            battlesAttacked: msg.getBattlesAttacked(),
            battlesDefended: msg.getBattlesDefended(),
            eggIncubatorId: msg.getEggIncubatorId(),
            creationTimeMs: msg.getCreationTimeMs(),
            numUpgrades: msg.getNumUpgrades(),
            additionalCpMultiplier: msg.getAdditionalCpMultiplier(),
            favorite: msg.getFavorite(),
            nickname: msg.getNickname(),
            fromFort: msg.getFromFort(),
            buddyCandyAwarded: msg.getBuddyCandyAwarded()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
    return proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.PokemonData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setPokemonId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCp(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStamina(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStaminaMax(value);
                break;
            case 6:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove} */ (reader.readEnum());
                msg.setMove1(value);
                break;
            case 7:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove} */ (reader.readEnum());
                msg.setMove2(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeployedFortId(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setOwnerName(value);
                break;
            case 10:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsEgg(value);
                break;
            case 11:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setEggKmWalkedTarget(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setEggKmWalkedStart(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setOrigin(value);
                break;
            case 15:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setHeightM(value);
                break;
            case 16:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setWeightKg(value);
                break;
            case 17:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setIndividualAttack(value);
                break;
            case 18:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setIndividualDefense(value);
                break;
            case 19:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setIndividualStamina(value);
                break;
            case 20:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCpMultiplier(value);
                break;
            case 21:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setPokeball(value);
                break;
            case 22:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setCapturedCellId(value);
                break;
            case 23:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBattlesAttacked(value);
                break;
            case 24:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBattlesDefended(value);
                break;
            case 25:
                var value = /** @type {string} */ (reader.readString());
                msg.setEggIncubatorId(value);
                break;
            case 26:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setCreationTimeMs(value);
                break;
            case 27:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setNumUpgrades(value);
                break;
            case 28:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setAdditionalCpMultiplier(value);
                break;
            case 29:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setFavorite(value);
                break;
            case 30:
                var value = /** @type {string} */ (reader.readString());
                msg.setNickname(value);
                break;
            case 31:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setFromFort(value);
                break;
            case 32:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBuddyCandyAwarded(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.PokemonData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getCp();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getStamina();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
    f = this.getStaminaMax();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
    f = this.getMove1();
    if (f !== 0.0) {
        writer.writeEnum(
            6,
            f
        );
    }
    f = this.getMove2();
    if (f !== 0.0) {
        writer.writeEnum(
            7,
            f
        );
    }
    f = this.getDeployedFortId();
    if (f.length > 0) {
        writer.writeString(
            8,
            f
        );
    }
    f = this.getOwnerName();
    if (f.length > 0) {
        writer.writeString(
            9,
            f
        );
    }
    f = this.getIsEgg();
    if (f) {
        writer.writeBool(
            10,
            f
        );
    }
    f = this.getEggKmWalkedTarget();
    if (f !== 0.0) {
        writer.writeDouble(
            11,
            f
        );
    }
    f = this.getEggKmWalkedStart();
    if (f !== 0.0) {
        writer.writeDouble(
            12,
            f
        );
    }
    f = this.getOrigin();
    if (f !== 0) {
        writer.writeInt32(
            14,
            f
        );
    }
    f = this.getHeightM();
    if (f !== 0.0) {
        writer.writeFloat(
            15,
            f
        );
    }
    f = this.getWeightKg();
    if (f !== 0.0) {
        writer.writeFloat(
            16,
            f
        );
    }
    f = this.getIndividualAttack();
    if (f !== 0) {
        writer.writeInt32(
            17,
            f
        );
    }
    f = this.getIndividualDefense();
    if (f !== 0) {
        writer.writeInt32(
            18,
            f
        );
    }
    f = this.getIndividualStamina();
    if (f !== 0) {
        writer.writeInt32(
            19,
            f
        );
    }
    f = this.getCpMultiplier();
    if (f !== 0.0) {
        writer.writeFloat(
            20,
            f
        );
    }
    f = this.getPokeball();
    if (f !== 0.0) {
        writer.writeEnum(
            21,
            f
        );
    }
    f = this.getCapturedCellId();
    if (f !== 0) {
        writer.writeUint64(
            22,
            f
        );
    }
    f = this.getBattlesAttacked();
    if (f !== 0) {
        writer.writeInt32(
            23,
            f
        );
    }
    f = this.getBattlesDefended();
    if (f !== 0) {
        writer.writeInt32(
            24,
            f
        );
    }
    f = this.getEggIncubatorId();
    if (f.length > 0) {
        writer.writeString(
            25,
            f
        );
    }
    f = this.getCreationTimeMs();
    if (f !== 0) {
        writer.writeUint64(
            26,
            f
        );
    }
    f = this.getNumUpgrades();
    if (f !== 0) {
        writer.writeInt32(
            27,
            f
        );
    }
    f = this.getAdditionalCpMultiplier();
    if (f !== 0.0) {
        writer.writeFloat(
            28,
            f
        );
    }
    f = this.getFavorite();
    if (f !== 0) {
        writer.writeInt32(
            29,
            f
        );
    }
    f = this.getNickname();
    if (f.length > 0) {
        writer.writeString(
            30,
            f
        );
    }
    f = this.getFromFort();
    if (f !== 0) {
        writer.writeInt32(
            31,
            f
        );
    }
    f = this.getBuddyCandyAwarded();
    if (f !== 0) {
        writer.writeInt32(
            32,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PokemonData} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId pokemon_id = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 cp = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getCp = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setCp = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 stamina = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getStamina = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setStamina = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 stamina_max = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getStaminaMax = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setStaminaMax = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonMove move_1 = 6;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getMove1 = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setMove1 = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonMove move_2 = 7;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getMove2 = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonMove} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setMove2 = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional string deployed_fort_id = 8;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getDeployedFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setDeployedFortId = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional string owner_name = 9;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getOwnerName = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setOwnerName = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * optional bool is_egg = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getIsEgg = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 10, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setIsEgg = function(value) {
    jspb.Message.setField(this, 10, value);
};


/**
 * optional double egg_km_walked_target = 11;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getEggKmWalkedTarget = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 11, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setEggKmWalkedTarget = function(value) {
    jspb.Message.setField(this, 11, value);
};


/**
 * optional double egg_km_walked_start = 12;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getEggKmWalkedStart = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 12, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setEggKmWalkedStart = function(value) {
    jspb.Message.setField(this, 12, value);
};


/**
 * optional int32 origin = 14;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getOrigin = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 14, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setOrigin = function(value) {
    jspb.Message.setField(this, 14, value);
};


/**
 * optional float height_m = 15;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getHeightM = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 15, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setHeightM = function(value) {
    jspb.Message.setField(this, 15, value);
};


/**
 * optional float weight_kg = 16;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getWeightKg = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 16, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setWeightKg = function(value) {
    jspb.Message.setField(this, 16, value);
};


/**
 * optional int32 individual_attack = 17;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getIndividualAttack = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 17, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setIndividualAttack = function(value) {
    jspb.Message.setField(this, 17, value);
};


/**
 * optional int32 individual_defense = 18;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getIndividualDefense = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 18, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setIndividualDefense = function(value) {
    jspb.Message.setField(this, 18, value);
};


/**
 * optional int32 individual_stamina = 19;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getIndividualStamina = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 19, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setIndividualStamina = function(value) {
    jspb.Message.setField(this, 19, value);
};


/**
 * optional float cp_multiplier = 20;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getCpMultiplier = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 20, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setCpMultiplier = function(value) {
    jspb.Message.setField(this, 20, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball = 21;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getPokeball = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 21, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setPokeball = function(value) {
    jspb.Message.setField(this, 21, value);
};


/**
 * optional uint64 captured_cell_id = 22;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getCapturedCellId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 22, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setCapturedCellId = function(value) {
    jspb.Message.setField(this, 22, value);
};


/**
 * optional int32 battles_attacked = 23;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getBattlesAttacked = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 23, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setBattlesAttacked = function(value) {
    jspb.Message.setField(this, 23, value);
};


/**
 * optional int32 battles_defended = 24;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getBattlesDefended = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 24, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setBattlesDefended = function(value) {
    jspb.Message.setField(this, 24, value);
};


/**
 * optional string egg_incubator_id = 25;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getEggIncubatorId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 25, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setEggIncubatorId = function(value) {
    jspb.Message.setField(this, 25, value);
};


/**
 * optional uint64 creation_time_ms = 26;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getCreationTimeMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 26, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setCreationTimeMs = function(value) {
    jspb.Message.setField(this, 26, value);
};


/**
 * optional int32 num_upgrades = 27;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getNumUpgrades = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 27, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setNumUpgrades = function(value) {
    jspb.Message.setField(this, 27, value);
};


/**
 * optional float additional_cp_multiplier = 28;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getAdditionalCpMultiplier = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 28, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setAdditionalCpMultiplier = function(value) {
    jspb.Message.setField(this, 28, value);
};


/**
 * optional int32 favorite = 29;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getFavorite = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 29, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setFavorite = function(value) {
    jspb.Message.setField(this, 29, value);
};


/**
 * optional string nickname = 30;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getNickname = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 30, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setNickname = function(value) {
    jspb.Message.setField(this, 30, value);
};


/**
 * optional int32 from_fort = 31;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getFromFort = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 31, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setFromFort = function(value) {
    jspb.Message.setField(this, 31, value);
};


/**
 * optional int32 buddy_candy_awarded = 32;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.getBuddyCandyAwarded = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 32, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokemonData.prototype.setBuddyCandyAwarded = function(value) {
    jspb.Message.setField(this, 32, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.displayName = 'proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.toObject = function(includeInstance, msg) {
        var f, obj = {
            encounterId: msg.getEncounterId(),
            lastModifiedTimestampMs: msg.getLastModifiedTimestampMs(),
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude(),
            spawnPointId: msg.getSpawnPointId(),
            pokemonData: (f = msg.getPokemonData()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            timeTillHiddenMs: msg.getTimeTillHiddenMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon;
    return proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setEncounterId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setLastModifiedTimestampMs(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setSpawnPointId(value);
                break;
            case 7:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setPokemonData(value);
                break;
            case 11:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTimeTillHiddenMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getEncounterId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
    f = this.getLastModifiedTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
    f = this.getSpawnPointId();
    if (f.length > 0) {
        writer.writeString(
            5,
            f
        );
    }
    f = this.getPokemonData();
    if (f != null) {
        writer.writeMessage(
            7,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getTimeTillHiddenMs();
    if (f !== 0) {
        writer.writeInt32(
            11,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 encounter_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.getEncounterId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.setEncounterId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 last_modified_timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.getLastModifiedTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.setLastModifiedTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional string spawn_point_id = 5;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.getSpawnPointId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.setSpawnPointId = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData pokemon_data = 7;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.getPokemonData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 7));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.setPokemonData = function(value) {
    jspb.Message.setWrapperField(this, 7, value);
};


proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.clearPokemonData = function() {
    this.setPokemonData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.hasPokemonData = function() {
    return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 time_till_hidden_ms = 11;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.getTimeTillHiddenMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 11, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.prototype.setTimeTillHiddenMs = function(value) {
    jspb.Message.setField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            received: msg.getReceived()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setReceived(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getReceived();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool received = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.prototype.getReceived = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.SendEncryptedSignatureResponse.prototype.setReceived = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.Status} */ (reader.readEnum());
                msg.setResult(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Status result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.Status}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.Status} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.Status} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemPokeCoinsResponse.Status = {
    UNKNOWN: 0,
    SUCCESS: 1,
    NOT_ENOUGH_POKECOINS: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.player.Currency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.player.Currency.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.player.Currency';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.Currency.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.player.Currency.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.Currency} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.Currency.toObject = function(includeInstance, msg) {
        var f, obj = {
            name: msg.getName(),
            amount: msg.getAmount()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.Currency}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.player.Currency;
    return proto.com.github.aeonlucid.pogoprotos.data.player.Currency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.Currency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.Currency}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setAmount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.Currency} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getName();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getAmount();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.Currency} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.player.Currency} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency.prototype.getName = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency.prototype.setName = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 amount = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency.prototype.getAmount = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.Currency.prototype.setAmount = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            status: msg.getStatus(),
            itemsList: jspb.Message.toObjectList(msg.getItemsList(),
                proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.toObject, includeInstance),
            playerCurrenciesList: jspb.Message.toObjectList(msg.getPlayerCurrenciesList(),
                proto.com.github.aeonlucid.pogoprotos.data.player.Currency.toObject, includeInstance),
            unknown4: msg.getUnknown4()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.Status} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.deserializeBinaryFromReader);
                msg.getItemsList().push(value);
                msg.setItemsList(msg.getItemsList());
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.Currency;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.Currency.deserializeBinaryFromReader);
                msg.getPlayerCurrenciesList().push(value);
                msg.setPlayerCurrenciesList(msg.getPlayerCurrenciesList());
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setUnknown4(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.serializeBinaryToWriter
        );
    }
    f = this.getPlayerCurrenciesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.Currency.serializeBinaryToWriter
        );
    }
    f = this.getUnknown4();
    if (f.length > 0) {
        writer.writeString(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Status status = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.Status}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.getStatus = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.Status} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.Status} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.setStatus = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated StoreItem items = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.getItemsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem, 2));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.setItemsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.clearItemsList = function() {
    this.setItemsList([]);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.data.player.Currency player_currencies = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.player.Currency>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.getPlayerCurrenciesList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.player.Currency>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.Currency, 3));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.player.Currency>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.setPlayerCurrenciesList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.clearPlayerCurrenciesList = function() {
    this.setPlayerCurrenciesList([]);
};


/**
 * optional string unknown4 = 4;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.getUnknown4 = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.prototype.setUnknown4 = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.Status = {
    UNDEFINED: 0,
    OKAY: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            isIap: msg.getIsIap(),
            currencyToBuy: (f = msg.getCurrencyToBuy()) && proto.com.github.aeonlucid.pogoprotos.data.player.Currency.toObject(includeInstance, f),
            yieldsCurrency: (f = msg.getYieldsCurrency()) && proto.com.github.aeonlucid.pogoprotos.data.player.Currency.toObject(includeInstance, f),
            yieldsItem: (f = msg.getYieldsItem()) && proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.toObject(includeInstance, f),
            tagsMap: (f = msg.getTagsMap(true)) ? f.toArray() : [],
            unknown7: msg.getUnknown7()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem;
    return proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsIap(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.Currency;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.Currency.deserializeBinaryFromReader);
                msg.setCurrencyToBuy(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.Currency;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.Currency.deserializeBinaryFromReader);
                msg.setYieldsCurrency(value);
                break;
            case 5:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.deserializeBinaryFromReader);
                msg.setYieldsItem(value);
                break;
            case 6:
                var value = msg.getTagsMap();
                reader.readMessage(value, function(message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
                });
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setUnknown7(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getIsIap();
    if (f) {
        writer.writeBool(
            2,
            f
        );
    }
    f = this.getCurrencyToBuy();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.Currency.serializeBinaryToWriter
        );
    }
    f = this.getYieldsCurrency();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.Currency.serializeBinaryToWriter
        );
    }
    f = this.getYieldsItem();
    if (f != null) {
        writer.writeMessage(
            5,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.serializeBinaryToWriter
        );
    }
    f = this.getTagsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = this.getUnknown7();
    if (f !== 0) {
        writer.writeInt32(
            7,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.getItemId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional bool is_iap = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.getIsIap = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.setIsIap = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.player.Currency currency_to_buy = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.Currency}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.getCurrencyToBuy = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.Currency} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.Currency, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.Currency|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.setCurrencyToBuy = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.clearCurrencyToBuy = function() {
    this.setCurrencyToBuy(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.hasCurrencyToBuy = function() {
    return jspb.Message.getField(this, 3) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.player.Currency yields_currency = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.Currency}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.getYieldsCurrency = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.Currency} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.Currency, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.Currency|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.setYieldsCurrency = function(value) {
    jspb.Message.setWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.clearYieldsCurrency = function() {
    this.setYieldsCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.hasYieldsCurrency = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemData yields_item = 5;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.getYieldsItem = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData, 5));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.setYieldsItem = function(value) {
    jspb.Message.setWrapperField(this, 5, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.clearYieldsItem = function() {
    this.setYieldsItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.hasYieldsItem = function() {
    return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, string> tags = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.getTagsMap = function(opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (
        jspb.Message.getMapField(this, 6, opt_noLazyCreate,
            null));
};


/**
 * optional int32 unknown7 = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.getUnknown7 = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.GetStoreItemsResponse.StoreItem.prototype.setUnknown7 = function(value) {
    jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            purchaseToken: msg.getPurchaseToken()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.Status} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPurchaseToken(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPurchaseToken();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Status result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.Status}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.Status} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.Status} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string purchase_token = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.prototype.getPurchaseToken = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.prototype.setPurchaseToken = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.responses.BuyItemAndroidResponse.Status = {
    UNKNOWN: 0,
    SUCCESS: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            upgradeType: msg.getUpgradeType(),
            additionalStorage: msg.getAdditionalStorage()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade;
    return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType} */ (reader.readEnum());
                msg.setUpgradeType(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setAdditionalStorage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getUpgradeType();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getAdditionalStorage();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional item.ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional InventoryUpgradeType upgrade_type = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.prototype.getUpgradeType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgradeType} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.prototype.setUpgradeType = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 additional_storage = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.prototype.getAdditionalStorage = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.prototype.setAdditionalStorage = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.toObject = function(includeInstance, msg) {
        var f, obj = {
            id: msg.getId(),
            itemId: msg.getItemId(),
            incubatorType: msg.getIncubatorType(),
            usesRemaining: msg.getUsesRemaining(),
            pokemonId: msg.getPokemonId(),
            startKmWalked: msg.getStartKmWalked(),
            targetKmWalked: msg.getTargetKmWalked()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator;
    return proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 3:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType} */ (reader.readEnum());
                msg.setIncubatorType(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setUsesRemaining(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setPokemonId(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setStartKmWalked(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setTargetKmWalked(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getIncubatorType();
    if (f !== 0.0) {
        writer.writeEnum(
            3,
            f
        );
    }
    f = this.getUsesRemaining();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeUint64(
            5,
            f
        );
    }
    f = this.getStartKmWalked();
    if (f !== 0.0) {
        writer.writeDouble(
            6,
            f
        );
    }
    f = this.getTargetKmWalked();
    if (f !== 0.0) {
        writer.writeDouble(
            7,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.getId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.setId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional item.ItemId item_id = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional EggIncubatorType incubator_type = 3;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.getIncubatorType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubatorType} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.setIncubatorType = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 uses_remaining = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.getUsesRemaining = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.setUsesRemaining = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional uint64 pokemon_id = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional double start_km_walked = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.getStartKmWalked = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.setStartKmWalked = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional double target_km_walked = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.getTargetKmWalked = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.prototype.setTargetKmWalked = function(value) {
    jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            itemType: msg.getItemType(),
            expireMs: msg.getExpireMs(),
            appliedMs: msg.getAppliedMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem;
    return proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemType} */ (reader.readEnum());
                msg.setItemType(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setExpireMs(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setAppliedMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getItemType();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getExpireMs();
    if (f !== 0) {
        writer.writeInt64(
            3,
            f
        );
    }
    f = this.getAppliedMs();
    if (f !== 0) {
        writer.writeInt64(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional item.ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional item.ItemType item_type = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemType}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.getItemType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemType} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemType} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.setItemType = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 expire_ms = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.getExpireMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.setExpireMs = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 applied_ms = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.getAppliedMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.prototype.setAppliedMs = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemList: jspb.Message.toObjectList(msg.getItemList(),
                proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems;
    return proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.deserializeBinaryFromReader);
                msg.getItemList().push(value);
                msg.setItemList(msg.getItemList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated AppliedItem item = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem>}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.prototype.getItemList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem, 4));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem>} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.prototype.setItemList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.prototype.clearItemList = function() {
    this.setItemList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.toObject = function(includeInstance, msg) {
        var f, obj = {
            eggIncubatorList: jspb.Message.toObjectList(msg.getEggIncubatorList(),
                proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators;
    return proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.deserializeBinaryFromReader);
                msg.getEggIncubatorList().push(value);
                msg.setEggIncubatorList(msg.getEggIncubatorList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getEggIncubatorList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated EggIncubator egg_incubator = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator>}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.prototype.getEggIncubatorList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator, 1));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator>} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.prototype.setEggIncubatorList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.prototype.clearEggIncubatorList = function() {
    this.setEggIncubatorList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.Candy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.Candy.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.Candy';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.Candy.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.Candy.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.Candy} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.Candy.toObject = function(includeInstance, msg) {
        var f, obj = {
            familyId: msg.getFamilyId(),
            candy: msg.getCandy()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.Candy}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.Candy;
    return proto.com.github.aeonlucid.pogoprotos.inventory.Candy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.Candy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.Candy}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId} */ (reader.readEnum());
                msg.setFamilyId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCandy(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.Candy} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getFamilyId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getCandy();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.Candy} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.Candy} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId family_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy.prototype.getFamilyId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy.prototype.setFamilyId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 candy = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy.prototype.getCandy = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.Candy.prototype.setCandy = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.toObject = function(includeInstance, msg) {
        var f, obj = {
            inventoryUpgradesList: jspb.Message.toObjectList(msg.getInventoryUpgradesList(),
                proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades;
    return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.deserializeBinaryFromReader);
                msg.getInventoryUpgradesList().push(value);
                msg.setInventoryUpgradesList(msg.getInventoryUpgradesList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getInventoryUpgradesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated InventoryUpgrade inventory_upgrades = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade>}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.prototype.getInventoryUpgradesList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade, 1));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrade>} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.prototype.setInventoryUpgradesList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.prototype.clearInventoryUpgradesList = function() {
    this.setInventoryUpgradesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId(),
            timesEncountered: msg.getTimesEncountered(),
            timesCaptured: msg.getTimesCaptured(),
            evolutionStonePieces: msg.getEvolutionStonePieces(),
            evolutionStones: msg.getEvolutionStones()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry;
    return proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setPokemonId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTimesEncountered(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTimesCaptured(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEvolutionStonePieces(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEvolutionStones(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getTimesEncountered();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getTimesCaptured();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getEvolutionStonePieces();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
    f = this.getEvolutionStones();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId pokemon_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.getPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 times_encountered = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.getTimesEncountered = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.setTimesEncountered = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 times_captured = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.getTimesCaptured = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.setTimesCaptured = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 evolution_stone_pieces = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.getEvolutionStonePieces = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.setEvolutionStonePieces = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 evolution_stones = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.getEvolutionStones = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.prototype.setEvolutionStones = function(value) {
    jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.repeatedFields_ = [22];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.toObject = function(includeInstance, msg) {
        var f, obj = {
            level: msg.getLevel(),
            experience: msg.getExperience(),
            prevLevelXp: msg.getPrevLevelXp(),
            nextLevelXp: msg.getNextLevelXp(),
            kmWalked: msg.getKmWalked(),
            pokemonsEncountered: msg.getPokemonsEncountered(),
            uniquePokedexEntries: msg.getUniquePokedexEntries(),
            pokemonsCaptured: msg.getPokemonsCaptured(),
            evolutions: msg.getEvolutions(),
            pokeStopVisits: msg.getPokeStopVisits(),
            pokeballsThrown: msg.getPokeballsThrown(),
            eggsHatched: msg.getEggsHatched(),
            bigMagikarpCaught: msg.getBigMagikarpCaught(),
            battleAttackWon: msg.getBattleAttackWon(),
            battleAttackTotal: msg.getBattleAttackTotal(),
            battleDefendedWon: msg.getBattleDefendedWon(),
            battleTrainingWon: msg.getBattleTrainingWon(),
            battleTrainingTotal: msg.getBattleTrainingTotal(),
            prestigeRaisedTotal: msg.getPrestigeRaisedTotal(),
            prestigeDroppedTotal: msg.getPrestigeDroppedTotal(),
            pokemonDeployed: msg.getPokemonDeployed(),
            pokemonCaughtByTypeList: jspb.Message.getField(msg, 22),
            smallRattataCaught: msg.getSmallRattataCaught()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats;
    return proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setLevel(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setExperience(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setPrevLevelXp(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setNextLevelXp(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setKmWalked(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPokemonsEncountered(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setUniquePokedexEntries(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPokemonsCaptured(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEvolutions(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPokeStopVisits(value);
                break;
            case 11:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPokeballsThrown(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEggsHatched(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBigMagikarpCaught(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBattleAttackWon(value);
                break;
            case 15:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBattleAttackTotal(value);
                break;
            case 16:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBattleDefendedWon(value);
                break;
            case 17:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBattleTrainingWon(value);
                break;
            case 18:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBattleTrainingTotal(value);
                break;
            case 19:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPrestigeRaisedTotal(value);
                break;
            case 20:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPrestigeDroppedTotal(value);
                break;
            case 21:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPokemonDeployed(value);
                break;
            case 22:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setPokemonCaughtByTypeList(value);
                break;
            case 23:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setSmallRattataCaught(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getLevel();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
    f = this.getExperience();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = this.getPrevLevelXp();
    if (f !== 0) {
        writer.writeInt64(
            3,
            f
        );
    }
    f = this.getNextLevelXp();
    if (f !== 0) {
        writer.writeInt64(
            4,
            f
        );
    }
    f = this.getKmWalked();
    if (f !== 0.0) {
        writer.writeFloat(
            5,
            f
        );
    }
    f = this.getPokemonsEncountered();
    if (f !== 0) {
        writer.writeInt32(
            6,
            f
        );
    }
    f = this.getUniquePokedexEntries();
    if (f !== 0) {
        writer.writeInt32(
            7,
            f
        );
    }
    f = this.getPokemonsCaptured();
    if (f !== 0) {
        writer.writeInt32(
            8,
            f
        );
    }
    f = this.getEvolutions();
    if (f !== 0) {
        writer.writeInt32(
            9,
            f
        );
    }
    f = this.getPokeStopVisits();
    if (f !== 0) {
        writer.writeInt32(
            10,
            f
        );
    }
    f = this.getPokeballsThrown();
    if (f !== 0) {
        writer.writeInt32(
            11,
            f
        );
    }
    f = this.getEggsHatched();
    if (f !== 0) {
        writer.writeInt32(
            12,
            f
        );
    }
    f = this.getBigMagikarpCaught();
    if (f !== 0) {
        writer.writeInt32(
            13,
            f
        );
    }
    f = this.getBattleAttackWon();
    if (f !== 0) {
        writer.writeInt32(
            14,
            f
        );
    }
    f = this.getBattleAttackTotal();
    if (f !== 0) {
        writer.writeInt32(
            15,
            f
        );
    }
    f = this.getBattleDefendedWon();
    if (f !== 0) {
        writer.writeInt32(
            16,
            f
        );
    }
    f = this.getBattleTrainingWon();
    if (f !== 0) {
        writer.writeInt32(
            17,
            f
        );
    }
    f = this.getBattleTrainingTotal();
    if (f !== 0) {
        writer.writeInt32(
            18,
            f
        );
    }
    f = this.getPrestigeRaisedTotal();
    if (f !== 0) {
        writer.writeInt32(
            19,
            f
        );
    }
    f = this.getPrestigeDroppedTotal();
    if (f !== 0) {
        writer.writeInt32(
            20,
            f
        );
    }
    f = this.getPokemonDeployed();
    if (f !== 0) {
        writer.writeInt32(
            21,
            f
        );
    }
    f = this.getPokemonCaughtByTypeList();
    if (f.length > 0) {
        writer.writePackedInt32(
            22,
            f
        );
    }
    f = this.getSmallRattataCaught();
    if (f !== 0) {
        writer.writeInt32(
            23,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 level = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getLevel = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setLevel = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 experience = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getExperience = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setExperience = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 prev_level_xp = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getPrevLevelXp = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setPrevLevelXp = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 next_level_xp = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getNextLevelXp = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setNextLevelXp = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional float km_walked = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getKmWalked = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setKmWalked = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional int32 pokemons_encountered = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getPokemonsEncountered = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setPokemonsEncountered = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 unique_pokedex_entries = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getUniquePokedexEntries = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setUniquePokedexEntries = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional int32 pokemons_captured = 8;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getPokemonsCaptured = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setPokemonsCaptured = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional int32 evolutions = 9;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getEvolutions = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setEvolutions = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * optional int32 poke_stop_visits = 10;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getPokeStopVisits = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setPokeStopVisits = function(value) {
    jspb.Message.setField(this, 10, value);
};


/**
 * optional int32 pokeballs_thrown = 11;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getPokeballsThrown = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 11, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setPokeballsThrown = function(value) {
    jspb.Message.setField(this, 11, value);
};


/**
 * optional int32 eggs_hatched = 12;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getEggsHatched = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 12, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setEggsHatched = function(value) {
    jspb.Message.setField(this, 12, value);
};


/**
 * optional int32 big_magikarp_caught = 13;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getBigMagikarpCaught = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 13, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setBigMagikarpCaught = function(value) {
    jspb.Message.setField(this, 13, value);
};


/**
 * optional int32 battle_attack_won = 14;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getBattleAttackWon = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 14, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setBattleAttackWon = function(value) {
    jspb.Message.setField(this, 14, value);
};


/**
 * optional int32 battle_attack_total = 15;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getBattleAttackTotal = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 15, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setBattleAttackTotal = function(value) {
    jspb.Message.setField(this, 15, value);
};


/**
 * optional int32 battle_defended_won = 16;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getBattleDefendedWon = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 16, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setBattleDefendedWon = function(value) {
    jspb.Message.setField(this, 16, value);
};


/**
 * optional int32 battle_training_won = 17;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getBattleTrainingWon = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 17, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setBattleTrainingWon = function(value) {
    jspb.Message.setField(this, 17, value);
};


/**
 * optional int32 battle_training_total = 18;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getBattleTrainingTotal = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 18, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setBattleTrainingTotal = function(value) {
    jspb.Message.setField(this, 18, value);
};


/**
 * optional int32 prestige_raised_total = 19;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getPrestigeRaisedTotal = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 19, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setPrestigeRaisedTotal = function(value) {
    jspb.Message.setField(this, 19, value);
};


/**
 * optional int32 prestige_dropped_total = 20;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getPrestigeDroppedTotal = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 20, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setPrestigeDroppedTotal = function(value) {
    jspb.Message.setField(this, 20, value);
};


/**
 * optional int32 pokemon_deployed = 21;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getPokemonDeployed = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 21, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setPokemonDeployed = function(value) {
    jspb.Message.setField(this, 21, value);
};


/**
 * repeated int32 pokemon_caught_by_type = 22;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getPokemonCaughtByTypeList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 22));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setPokemonCaughtByTypeList = function(value) {
    jspb.Message.setField(this, 22, value || []);
};


proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.clearPokemonCaughtByTypeList = function() {
    jspb.Message.setField(this, 22, []);
};


/**
 * optional int32 small_rattata_caught = 23;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.getSmallRattataCaught = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 23, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.prototype.setSmallRattataCaught = function(value) {
    jspb.Message.setField(this, 23, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.toObject = function(includeInstance, msg) {
        var f, obj = {
            gems: msg.getGems()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency;
    return proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setGems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getGems();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 gems = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.prototype.getGems = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.prototype.setGems = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.toObject = function(includeInstance, msg) {
        var f, obj = {
            isDefaultCamera: msg.getIsDefaultCamera()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera;
    return proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsDefaultCamera(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getIsDefaultCamera();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool is_default_camera = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.prototype.getIsDefaultCamera = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.prototype.setIsDefaultCamera = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonData: (f = msg.getPokemonData()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            item: (f = msg.getItem()) && proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.toObject(includeInstance, f),
            pokedexEntry: (f = msg.getPokedexEntry()) && proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.toObject(includeInstance, f),
            playerStats: (f = msg.getPlayerStats()) && proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.toObject(includeInstance, f),
            playerCurrency: (f = msg.getPlayerCurrency()) && proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.toObject(includeInstance, f),
            playerCamera: (f = msg.getPlayerCamera()) && proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.toObject(includeInstance, f),
            inventoryUpgrades: (f = msg.getInventoryUpgrades()) && proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.toObject(includeInstance, f),
            appliedItems: (f = msg.getAppliedItems()) && proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.toObject(includeInstance, f),
            eggIncubators: (f = msg.getEggIncubators()) && proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.toObject(includeInstance, f),
            candy: (f = msg.getCandy()) && proto.com.github.aeonlucid.pogoprotos.inventory.Candy.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData;
    return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setPokemonData(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.deserializeBinaryFromReader);
                msg.setItem(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.deserializeBinaryFromReader);
                msg.setPokedexEntry(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.deserializeBinaryFromReader);
                msg.setPlayerStats(value);
                break;
            case 5:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.deserializeBinaryFromReader);
                msg.setPlayerCurrency(value);
                break;
            case 6:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.deserializeBinaryFromReader);
                msg.setPlayerCamera(value);
                break;
            case 7:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.deserializeBinaryFromReader);
                msg.setInventoryUpgrades(value);
                break;
            case 8:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.deserializeBinaryFromReader);
                msg.setAppliedItems(value);
                break;
            case 9:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.deserializeBinaryFromReader);
                msg.setEggIncubators(value);
                break;
            case 10:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.Candy;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.Candy.deserializeBinaryFromReader);
                msg.setCandy(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonData();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getItem();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData.serializeBinaryToWriter
        );
    }
    f = this.getPokedexEntry();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry.serializeBinaryToWriter
        );
    }
    f = this.getPlayerStats();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats.serializeBinaryToWriter
        );
    }
    f = this.getPlayerCurrency();
    if (f != null) {
        writer.writeMessage(
            5,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency.serializeBinaryToWriter
        );
    }
    f = this.getPlayerCamera();
    if (f != null) {
        writer.writeMessage(
            6,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera.serializeBinaryToWriter
        );
    }
    f = this.getInventoryUpgrades();
    if (f != null) {
        writer.writeMessage(
            7,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades.serializeBinaryToWriter
        );
    }
    f = this.getAppliedItems();
    if (f != null) {
        writer.writeMessage(
            8,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.serializeBinaryToWriter
        );
    }
    f = this.getEggIncubators();
    if (f != null) {
        writer.writeMessage(
            9,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators.serializeBinaryToWriter
        );
    }
    f = this.getCandy();
    if (f != null) {
        writer.writeMessage(
            10,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.Candy.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData pokemon_data = 1;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.getPokemonData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 1));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.setPokemonData = function(value) {
    jspb.Message.setWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.clearPokemonData = function() {
    this.setPokemonData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.hasPokemonData = function() {
    return jspb.Message.getField(this, 1) != null;
};


/**
 * optional item.ItemData item = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.getItem = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.setItem = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.clearItem = function() {
    this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.hasItem = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokedexEntry pokedex_entry = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.getPokedexEntry = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokedexEntry|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.setPokedexEntry = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.clearPokedexEntry = function() {
    this.setPokedexEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.hasPokedexEntry = function() {
    return jspb.Message.getField(this, 3) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.player.PlayerStats player_stats = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.getPlayerStats = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerStats|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.setPlayerStats = function(value) {
    jspb.Message.setWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.clearPlayerStats = function() {
    this.setPlayerStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.hasPlayerStats = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency player_currency = 5;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.getPlayerCurrency = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency, 5));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCurrency|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.setPlayerCurrency = function(value) {
    jspb.Message.setWrapperField(this, 5, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.clearPlayerCurrency = function() {
    this.setPlayerCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.hasPlayerCurrency = function() {
    return jspb.Message.getField(this, 5) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.player.PlayerCamera player_camera = 6;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.getPlayerCamera = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera, 6));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerCamera|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.setPlayerCamera = function(value) {
    jspb.Message.setWrapperField(this, 6, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.clearPlayerCamera = function() {
    this.setPlayerCamera(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.hasPlayerCamera = function() {
    return jspb.Message.getField(this, 6) != null;
};


/**
 * optional InventoryUpgrades inventory_upgrades = 7;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.getInventoryUpgrades = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades, 7));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.InventoryUpgrades|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.setInventoryUpgrades = function(value) {
    jspb.Message.setWrapperField(this, 7, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.clearInventoryUpgrades = function() {
    this.setInventoryUpgrades(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.hasInventoryUpgrades = function() {
    return jspb.Message.getField(this, 7) != null;
};


/**
 * optional AppliedItems applied_items = 8;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.getAppliedItems = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems, 8));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.setAppliedItems = function(value) {
    jspb.Message.setWrapperField(this, 8, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.clearAppliedItems = function() {
    this.setAppliedItems(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.hasAppliedItems = function() {
    return jspb.Message.getField(this, 8) != null;
};


/**
 * optional EggIncubators egg_incubators = 9;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.getEggIncubators = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators, 9));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubators|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.setEggIncubators = function(value) {
    jspb.Message.setWrapperField(this, 9, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.clearEggIncubators = function() {
    this.setEggIncubators(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.hasEggIncubators = function() {
    return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Candy candy = 10;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.Candy}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.getCandy = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.Candy} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.Candy, 10));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.Candy|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.setCandy = function(value) {
    jspb.Message.setWrapperField(this, 10, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.clearCandy = function() {
    this.setCandy(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.prototype.hasCandy = function() {
    return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.toObject = function(includeInstance, msg) {
        var f, obj = {
            modifiedTimestampMs: msg.getModifiedTimestampMs(),
            deletedItem: (f = msg.getDeletedItem()) && proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.toObject(includeInstance, f),
            inventoryItemData: (f = msg.getInventoryItemData()) && proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem;
    return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setModifiedTimestampMs(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.deserializeBinaryFromReader);
                msg.setDeletedItem(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.deserializeBinaryFromReader);
                msg.setInventoryItemData(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getModifiedTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            1,
            f
        );
    }
    f = this.getDeletedItem();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.serializeBinaryToWriter
        );
    }
    f = this.getInventoryItemData();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 modified_timestamp_ms = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.getModifiedTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.setModifiedTimestampMs = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional DeletedItem deleted_item = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.getDeletedItem = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.setDeletedItem = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.clearDeletedItem = function() {
    this.setDeletedItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.hasDeletedItem = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional InventoryItemData inventory_item_data = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.getInventoryItemData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItemData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.setInventoryItemData = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.clearInventoryItemData = function() {
    this.setInventoryItemData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.prototype.hasInventoryItemData = function() {
    return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem;
    return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 pokemon_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.DeletedItem.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.toObject = function(includeInstance, msg) {
        var f, obj = {
            originalTimestampMs: msg.getOriginalTimestampMs(),
            newTimestampMs: msg.getNewTimestampMs(),
            inventoryItemsList: jspb.Message.toObjectList(msg.getInventoryItemsList(),
                proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta;
    return proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setOriginalTimestampMs(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setNewTimestampMs(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.deserializeBinaryFromReader);
                msg.getInventoryItemsList().push(value);
                msg.setInventoryItemsList(msg.getInventoryItemsList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getOriginalTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            1,
            f
        );
    }
    f = this.getNewTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = this.getInventoryItemsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 original_timestamp_ms = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.getOriginalTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.setOriginalTimestampMs = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 new_timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.getNewTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.setNewTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * repeated InventoryItem inventory_items = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem>}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.getInventoryItemsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem, 3));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.InventoryItem>} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.setInventoryItemsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.prototype.clearInventoryItemsList = function() {
    this.setInventoryItemsList([]);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapObjectsStatus = {
    UNSET_STATUS: 0,
    SUCCESS: 1,
    LOCATION_UNSET: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.displayName = 'proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.toObject = function(includeInstance, msg) {
        var f, obj = {
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint}
 */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint;
    return proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint}
 */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional double latitude = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double longitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.map.MapCell.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.map.MapCell, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.map.MapCell.displayName = 'proto.com.github.aeonlucid.pogoprotos.map.MapCell';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.repeatedFields_ = [3,4,6,8,9,5,10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.map.MapCell.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.map.MapCell} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.map.MapCell.toObject = function(includeInstance, msg) {
        var f, obj = {
            s2CellId: msg.getS2CellId(),
            currentTimestampMs: msg.getCurrentTimestampMs(),
            fortsList: jspb.Message.toObjectList(msg.getFortsList(),
                proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.toObject, includeInstance),
            spawnPointsList: jspb.Message.toObjectList(msg.getSpawnPointsList(),
                proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.toObject, includeInstance),
            deletedObjectsList: jspb.Message.getField(msg, 6),
            isTruncatedList: msg.getIsTruncatedList(),
            fortSummariesList: jspb.Message.toObjectList(msg.getFortSummariesList(),
                proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.toObject, includeInstance),
            decimatedSpawnPointsList: jspb.Message.toObjectList(msg.getDecimatedSpawnPointsList(),
                proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.toObject, includeInstance),
            wildPokemonsList: jspb.Message.toObjectList(msg.getWildPokemonsList(),
                proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.toObject, includeInstance),
            catchablePokemonsList: jspb.Message.toObjectList(msg.getCatchablePokemonsList(),
                proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.toObject, includeInstance),
            nearbyPokemonsList: jspb.Message.toObjectList(msg.getNearbyPokemonsList(),
                proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.MapCell}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.map.MapCell;
    return proto.com.github.aeonlucid.pogoprotos.map.MapCell.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.MapCell} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.MapCell}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setS2CellId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setCurrentTimestampMs(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.fort.FortData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.deserializeBinaryFromReader);
                msg.getFortsList().push(value);
                msg.setFortsList(msg.getFortsList());
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.deserializeBinaryFromReader);
                msg.getSpawnPointsList().push(value);
                msg.setSpawnPointsList(msg.getSpawnPointsList());
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.getDeletedObjectsList().push(value);
                msg.setDeletedObjectsList(msg.getDeletedObjectsList());
                break;
            case 7:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsTruncatedList(value);
                break;
            case 8:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.deserializeBinaryFromReader);
                msg.getFortSummariesList().push(value);
                msg.setFortSummariesList(msg.getFortSummariesList());
                break;
            case 9:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.deserializeBinaryFromReader);
                msg.getDecimatedSpawnPointsList().push(value);
                msg.setDecimatedSpawnPointsList(msg.getDecimatedSpawnPointsList());
                break;
            case 5:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.deserializeBinaryFromReader);
                msg.getWildPokemonsList().push(value);
                msg.setWildPokemonsList(msg.getWildPokemonsList());
                break;
            case 10:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.deserializeBinaryFromReader);
                msg.getCatchablePokemonsList().push(value);
                msg.setCatchablePokemonsList(msg.getCatchablePokemonsList());
                break;
            case 11:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.deserializeBinaryFromReader);
                msg.getNearbyPokemonsList().push(value);
                msg.setNearbyPokemonsList(msg.getNearbyPokemonsList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.map.MapCell} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getS2CellId();
    if (f !== 0) {
        writer.writeUint64(
            1,
            f
        );
    }
    f = this.getCurrentTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = this.getFortsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.serializeBinaryToWriter
        );
    }
    f = this.getSpawnPointsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.serializeBinaryToWriter
        );
    }
    f = this.getDeletedObjectsList();
    if (f.length > 0) {
        writer.writeRepeatedString(
            6,
            f
        );
    }
    f = this.getIsTruncatedList();
    if (f) {
        writer.writeBool(
            7,
            f
        );
    }
    f = this.getFortSummariesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            8,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary.serializeBinaryToWriter
        );
    }
    f = this.getDecimatedSpawnPointsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            9,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint.serializeBinaryToWriter
        );
    }
    f = this.getWildPokemonsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            5,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.serializeBinaryToWriter
        );
    }
    f = this.getCatchablePokemonsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            10,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon.serializeBinaryToWriter
        );
    }
    f = this.getNearbyPokemonsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            11,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.MapCell} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.MapCell} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint64 s2_cell_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getS2CellId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setS2CellId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 current_timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getCurrentTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setCurrentTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * repeated fort.FortData forts = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData>}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getFortsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.fort.FortData, 3));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData>} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setFortsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.clearFortsList = function() {
    this.setFortsList([]);
};


/**
 * repeated SpawnPoint spawn_points = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint>}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getSpawnPointsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint, 4));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint>} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setSpawnPointsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.clearSpawnPointsList = function() {
    this.setSpawnPointsList([]);
};


/**
 * repeated string deleted_objects = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getDeletedObjectsList = function() {
    return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 6));
};


/** @param {Array.<string>} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setDeletedObjectsList = function(value) {
    jspb.Message.setField(this, 6, value || []);
};


proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.clearDeletedObjectsList = function() {
    jspb.Message.setField(this, 6, []);
};


/**
 * optional bool is_truncated_list = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getIsTruncatedList = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 7, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setIsTruncatedList = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * repeated fort.FortSummary fort_summaries = 8;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary>}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getFortSummariesList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary, 8));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortSummary>} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setFortSummariesList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 8, value);
};


proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.clearFortSummariesList = function() {
    this.setFortSummariesList([]);
};


/**
 * repeated SpawnPoint decimated_spawn_points = 9;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint>}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getDecimatedSpawnPointsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint, 9));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.SpawnPoint>} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setDecimatedSpawnPointsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 9, value);
};


proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.clearDecimatedSpawnPointsList = function() {
    this.setDecimatedSpawnPointsList([]);
};


/**
 * repeated pokemon.WildPokemon wild_pokemons = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon>}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getWildPokemonsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon, 5));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon>} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setWildPokemonsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 5, value);
};


proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.clearWildPokemonsList = function() {
    this.setWildPokemonsList([]);
};


/**
 * repeated pokemon.MapPokemon catchable_pokemons = 10;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon>}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getCatchablePokemonsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon, 10));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.MapPokemon>} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setCatchablePokemonsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 10, value);
};


proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.clearCatchablePokemonsList = function() {
    this.setCatchablePokemonsList([]);
};


/**
 * repeated pokemon.NearbyPokemon nearby_pokemons = 11;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon>}
 */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.getNearbyPokemonsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon, 11));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.NearbyPokemon>} value  */
proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.setNearbyPokemonsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 11, value);
};


proto.com.github.aeonlucid.pogoprotos.map.MapCell.prototype.clearNearbyPokemonsList = function() {
    this.setNearbyPokemonsList([]);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType = {
    METHOD_UNSET: 0,
    BUY_ITEM_POKECOINS: 2,
    BUY_ITEM_ANDROID: 3,
    BUY_ITEM_IOS: 4,
    GET_STORE_ITEMS: 5,
    SEND_ENCRYPTED_SIGNATURE: 6
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.Gender = {
    MALE: 0,
    FEMALE: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.toObject = function(includeInstance, msg) {
        var f, obj = {
            skin: msg.getSkin(),
            hair: msg.getHair(),
            shirt: msg.getShirt(),
            pants: msg.getPants(),
            hat: msg.getHat(),
            shoes: msg.getShoes(),
            gender: msg.getGender(),
            eyes: msg.getEyes(),
            backpack: msg.getBackpack()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar;
    return proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setSkin(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setHair(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setShirt(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setPants(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setHat(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setShoes(value);
                break;
            case 8:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.Gender} */ (reader.readEnum());
                msg.setGender(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEyes(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBackpack(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSkin();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getHair();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getShirt();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
    f = this.getPants();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
    f = this.getHat();
    if (f !== 0) {
        writer.writeInt32(
            6,
            f
        );
    }
    f = this.getShoes();
    if (f !== 0) {
        writer.writeInt32(
            7,
            f
        );
    }
    f = this.getGender();
    if (f !== 0.0) {
        writer.writeEnum(
            8,
            f
        );
    }
    f = this.getEyes();
    if (f !== 0) {
        writer.writeInt32(
            9,
            f
        );
    }
    f = this.getBackpack();
    if (f !== 0) {
        writer.writeInt32(
            10,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 skin = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.getSkin = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.setSkin = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 hair = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.getHair = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.setHair = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 shirt = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.getShirt = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.setShirt = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 pants = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.getPants = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.setPants = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional int32 hat = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.getHat = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.setHat = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 shoes = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.getShoes = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.setShoes = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.Gender gender = 8;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.Gender}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.getGender = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.Gender} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.Gender} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.setGender = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional int32 eyes = 9;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.getEyes = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.setEyes = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * optional int32 backpack = 10;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.getBackpack = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.prototype.setBackpack = function(value) {
    jspb.Message.setField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.toObject = function(includeInstance, msg) {
        var f, obj = {
            name: msg.getName(),
            level: msg.getLevel(),
            avatar: (f = msg.getAvatar()) && proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile;
    return proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setLevel(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.deserializeBinaryFromReader);
                msg.setAvatar(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getName();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getLevel();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getAvatar();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.getName = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.setName = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 level = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.getLevel = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.setLevel = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional PlayerAvatar avatar = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.getAvatar = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.setAvatar = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.clearAvatar = function() {
    this.setAvatar(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.prototype.hasAvatar = function() {
    return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonData: (f = msg.getPokemonData()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            trainerPublicProfile: (f = msg.getTrainerPublicProfile()) && proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership;
    return proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setPokemonData(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.deserializeBinaryFromReader);
                msg.setTrainerPublicProfile(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonData();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getTrainerPublicProfile();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData pokemon_data = 1;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.getPokemonData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 1));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.setPokemonData = function(value) {
    jspb.Message.setWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.clearPokemonData = function() {
    this.setPokemonData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.hasPokemonData = function() {
    return jspb.Message.getField(this, 1) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile trainer_public_profile = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.getTrainerPublicProfile = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.setTrainerPublicProfile = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.clearTrainerPublicProfile = function() {
    this.setTrainerPublicProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.prototype.hasTrainerPublicProfile = function() {
    return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.gym.GymState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.gym.GymState';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymState} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.toObject = function(includeInstance, msg) {
        var f, obj = {
            fortData: (f = msg.getFortData()) && proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.toObject(includeInstance, f),
            membershipsList: jspb.Message.toObjectList(msg.getMembershipsList(),
                proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymState}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.gym.GymState;
    return proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymState}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.fort.FortData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.deserializeBinaryFromReader);
                msg.setFortData(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.deserializeBinaryFromReader);
                msg.getMembershipsList().push(value);
                msg.setMembershipsList(msg.getMembershipsList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymState} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getFortData();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.serializeBinaryToWriter
        );
    }
    f = this.getMembershipsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymState} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.gym.GymState} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.map.fort.FortData fort_data = 1;
 * @return {proto.com.github.aeonlucid.pogoprotos.map.fort.FortData}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.getFortData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.map.fort.FortData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.fort.FortData, 1));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.map.fort.FortData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.setFortData = function(value) {
    jspb.Message.setWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.clearFortData = function() {
    this.setFortData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.hasFortData = function() {
    return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GymMembership memberships = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership>}
 */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.getMembershipsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership, 2));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.gym.GymMembership>} value  */
proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.setMembershipsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.prototype.clearMembershipsList = function() {
    this.setMembershipsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.toObject = function(includeInstance, msg) {
        var f, obj = {
            badgeType: msg.getBadgeType(),
            level: msg.getLevel(),
            nextEquipChangeAllowedTimestampMs: msg.getNextEquipChangeAllowedTimestampMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge;
    return proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} */ (reader.readEnum());
                msg.setBadgeType(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setLevel(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setNextEquipChangeAllowedTimestampMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getBadgeType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getLevel();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getNextEquipChangeAllowedTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.BadgeType badge_type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.prototype.getBadgeType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.prototype.setBadgeType = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 level = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.prototype.getLevel = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.prototype.setLevel = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 next_equip_change_allowed_timestamp_ms = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.prototype.getNextEquipChangeAllowedTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.prototype.setNextEquipChangeAllowedTimestampMs = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.toObject = function(includeInstance, msg) {
        var f, obj = {
            nextCollectedTimestampMs: msg.getNextCollectedTimestampMs(),
            nextDefenderBonusCollectTimestampMs: msg.getNextDefenderBonusCollectTimestampMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus;
    return proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setNextCollectedTimestampMs(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setNextDefenderBonusCollectTimestampMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getNextCollectedTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            1,
            f
        );
    }
    f = this.getNextDefenderBonusCollectTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 next_collected_timestamp_ms = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.prototype.getNextCollectedTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.prototype.setNextCollectedTimestampMs = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 next_defender_bonus_collect_timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.prototype.getNextDefenderBonusCollectTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.prototype.setNextDefenderBonusCollectTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            sendMarketingEmails: msg.getSendMarketingEmails(),
            sendPushNotifications: msg.getSendPushNotifications()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings;
    return proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSendMarketingEmails(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSendPushNotifications(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSendMarketingEmails();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
    f = this.getSendPushNotifications();
    if (f) {
        writer.writeBool(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool send_marketing_emails = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.prototype.getSendMarketingEmails = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.prototype.setSendMarketingEmails = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional bool send_push_notifications = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.prototype.getSendPushNotifications = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.prototype.setSendPushNotifications = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.repeatedFields_ = [4,24];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.toObject = function(includeInstance, msg) {
        var f, obj = {
            timestampSinceStart: msg.getTimestampSinceStart(),
            locationFixList: jspb.Message.toObjectList(msg.getLocationFixList(),
                proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.toObject, includeInstance),
            gpsInfo: (f = msg.getGpsInfo()) && proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.toObject(includeInstance, f),
            sensorInfo: (f = msg.getSensorInfo()) && proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.toObject(includeInstance, f),
            deviceInfo: (f = msg.getDeviceInfo()) && proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.toObject(includeInstance, f),
            activityStatus: (f = msg.getActivityStatus()) && proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.toObject(includeInstance, f),
            locationHash1: msg.getLocationHash1(),
            locationHash2: msg.getLocationHash2(),
            sessionHash: msg.getSessionHash_asB64(),
            timestamp: msg.getTimestamp(),
            requestHashList: jspb.Message.getField(msg, 24),
            unknown25: msg.getUnknown25()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 2:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setTimestampSinceStart(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.deserializeBinaryFromReader);
                msg.getLocationFixList().push(value);
                msg.setLocationFixList(msg.getLocationFixList());
                break;
            case 5:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.deserializeBinaryFromReader);
                msg.setGpsInfo(value);
                break;
            case 7:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.deserializeBinaryFromReader);
                msg.setSensorInfo(value);
                break;
            case 8:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.deserializeBinaryFromReader);
                msg.setDeviceInfo(value);
                break;
            case 9:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.deserializeBinaryFromReader);
                msg.setActivityStatus(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setLocationHash1(value);
                break;
            case 20:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setLocationHash2(value);
                break;
            case 22:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setSessionHash(value);
                break;
            case 23:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setTimestamp(value);
                break;
            case 24:
                var value = /** @type {!Array.<number>} */ (reader.readPackedUint64());
                msg.setRequestHashList(value);
                break;
            case 25:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setUnknown25(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getTimestampSinceStart();
    if (f !== 0) {
        writer.writeUint64(
            2,
            f
        );
    }
    f = this.getLocationFixList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.serializeBinaryToWriter
        );
    }
    f = this.getGpsInfo();
    if (f != null) {
        writer.writeMessage(
            5,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.serializeBinaryToWriter
        );
    }
    f = this.getSensorInfo();
    if (f != null) {
        writer.writeMessage(
            7,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.serializeBinaryToWriter
        );
    }
    f = this.getDeviceInfo();
    if (f != null) {
        writer.writeMessage(
            8,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.serializeBinaryToWriter
        );
    }
    f = this.getActivityStatus();
    if (f != null) {
        writer.writeMessage(
            9,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.serializeBinaryToWriter
        );
    }
    f = this.getLocationHash1();
    if (f !== 0) {
        writer.writeUint32(
            10,
            f
        );
    }
    f = this.getLocationHash2();
    if (f !== 0) {
        writer.writeUint32(
            20,
            f
        );
    }
    f = this.getSessionHash_asU8();
    if (f.length > 0) {
        writer.writeBytes(
            22,
            f
        );
    }
    f = this.getTimestamp();
    if (f !== 0) {
        writer.writeUint64(
            23,
            f
        );
    }
    f = this.getRequestHashList();
    if (f.length > 0) {
        writer.writePackedUint64(
            24,
            f
        );
    }
    f = this.getUnknown25();
    if (f !== 0) {
        writer.writeInt64(
            25,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint64 timestamp_since_start = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getTimestampSinceStart = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setTimestampSinceStart = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * repeated LocationFix location_fix = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getLocationFixList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix, 4));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setLocationFixList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.clearLocationFixList = function() {
    this.setLocationFixList([]);
};


/**
 * optional AndroidGpsInfo gps_info = 5;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getGpsInfo = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo, 5));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setGpsInfo = function(value) {
    jspb.Message.setWrapperField(this, 5, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.clearGpsInfo = function() {
    this.setGpsInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.hasGpsInfo = function() {
    return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SensorInfo sensor_info = 7;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getSensorInfo = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo, 7));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setSensorInfo = function(value) {
    jspb.Message.setWrapperField(this, 7, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.clearSensorInfo = function() {
    this.setSensorInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.hasSensorInfo = function() {
    return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DeviceInfo device_info = 8;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getDeviceInfo = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo, 8));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setDeviceInfo = function(value) {
    jspb.Message.setWrapperField(this, 8, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.clearDeviceInfo = function() {
    this.setDeviceInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.hasDeviceInfo = function() {
    return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ActivityStatus activity_status = 9;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getActivityStatus = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus, 9));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setActivityStatus = function(value) {
    jspb.Message.setWrapperField(this, 9, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.clearActivityStatus = function() {
    this.setActivityStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.hasActivityStatus = function() {
    return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 location_hash1 = 10;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getLocationHash1 = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setLocationHash1 = function(value) {
    jspb.Message.setField(this, 10, value);
};


/**
 * optional uint32 location_hash2 = 20;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getLocationHash2 = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 20, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setLocationHash2 = function(value) {
    jspb.Message.setField(this, 20, value);
};


/**
 * optional bytes session_hash = 22;
 * @return {!(string|Uint8Array)}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getSessionHash = function() {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 22, ""));
};


/**
 * optional bytes session_hash = 22;
 * This is a type-conversion wrapper around `getSessionHash()`
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getSessionHash_asB64 = function() {
    return /** @type {string} */ (jspb.Message.bytesAsB64(
        this.getSessionHash()));
};


/**
 * optional bytes session_hash = 22;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSessionHash()`
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getSessionHash_asU8 = function() {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
        this.getSessionHash()));
};


/** @param {!(string|Uint8Array)} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setSessionHash = function(value) {
    jspb.Message.setField(this, 22, value);
};


/**
 * optional uint64 timestamp = 23;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getTimestamp = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 23, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setTimestamp = function(value) {
    jspb.Message.setField(this, 23, value);
};


/**
 * repeated uint64 request_hash = 24;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getRequestHashList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 24));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setRequestHashList = function(value) {
    jspb.Message.setField(this, 24, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.clearRequestHashList = function() {
    jspb.Message.setField(this, 24, []);
};


/**
 * optional int64 unknown25 = 25;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.getUnknown25 = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 25, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.prototype.setUnknown25 = function(value) {
    jspb.Message.setField(this, 25, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.toObject = function(includeInstance, msg) {
        var f, obj = {
            provider: msg.getProvider(),
            timestampSnapshot: msg.getTimestampSnapshot(),
            altitude: msg.getAltitude(),
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude(),
            speed: msg.getSpeed(),
            course: msg.getCourse(),
            horizontalAccuracy: msg.getHorizontalAccuracy(),
            verticalAccuracy: msg.getVerticalAccuracy(),
            providerStatus: msg.getProviderStatus(),
            floor: msg.getFloor(),
            locationType: msg.getLocationType()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setProvider(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setTimestampSnapshot(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setAltitude(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setLatitude(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setLongitude(value);
                break;
            case 18:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setSpeed(value);
                break;
            case 20:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCourse(value);
                break;
            case 21:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setHorizontalAccuracy(value);
                break;
            case 22:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setVerticalAccuracy(value);
                break;
            case 26:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setProviderStatus(value);
                break;
            case 27:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setFloor(value);
                break;
            case 28:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setLocationType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getProvider();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getTimestampSnapshot();
    if (f !== 0) {
        writer.writeUint64(
            2,
            f
        );
    }
    f = this.getAltitude();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeFloat(
            13,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeFloat(
            14,
            f
        );
    }
    f = this.getSpeed();
    if (f !== 0.0) {
        writer.writeFloat(
            18,
            f
        );
    }
    f = this.getCourse();
    if (f !== 0.0) {
        writer.writeFloat(
            20,
            f
        );
    }
    f = this.getHorizontalAccuracy();
    if (f !== 0.0) {
        writer.writeFloat(
            21,
            f
        );
    }
    f = this.getVerticalAccuracy();
    if (f !== 0.0) {
        writer.writeFloat(
            22,
            f
        );
    }
    f = this.getProviderStatus();
    if (f !== 0) {
        writer.writeUint64(
            26,
            f
        );
    }
    f = this.getFloor();
    if (f !== 0) {
        writer.writeUint32(
            27,
            f
        );
    }
    f = this.getLocationType();
    if (f !== 0) {
        writer.writeUint64(
            28,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getProvider = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setProvider = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 timestamp_snapshot = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getTimestampSnapshot = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setTimestampSnapshot = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional float altitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getAltitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setAltitude = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional float latitude = 13;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 13, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 13, value);
};


/**
 * optional float longitude = 14;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 14, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 14, value);
};


/**
 * optional float speed = 18;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getSpeed = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 18, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setSpeed = function(value) {
    jspb.Message.setField(this, 18, value);
};


/**
 * optional float course = 20;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getCourse = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 20, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setCourse = function(value) {
    jspb.Message.setField(this, 20, value);
};


/**
 * optional float horizontal_accuracy = 21;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getHorizontalAccuracy = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 21, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setHorizontalAccuracy = function(value) {
    jspb.Message.setField(this, 21, value);
};


/**
 * optional float vertical_accuracy = 22;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getVerticalAccuracy = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 22, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setVerticalAccuracy = function(value) {
    jspb.Message.setField(this, 22, value);
};


/**
 * optional uint64 provider_status = 26;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getProviderStatus = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 26, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setProviderStatus = function(value) {
    jspb.Message.setField(this, 26, value);
};


/**
 * optional uint32 floor = 27;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getFloor = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 27, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setFloor = function(value) {
    jspb.Message.setField(this, 27, value);
};


/**
 * optional uint64 location_type = 28;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.getLocationType = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 28, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.LocationFix.prototype.setLocationType = function(value) {
    jspb.Message.setField(this, 28, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.repeatedFields_ = [2,3,4,5,6,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.toObject = function(includeInstance, msg) {
        var f, obj = {
            timeToFix: msg.getTimeToFix(),
            satellitesPrnList: jspb.Message.getField(msg, 2),
            azimuthList: jspb.Message.getRepeatedFloatingPointField(msg, 3),
            elevationList: jspb.Message.getRepeatedFloatingPointField(msg, 4),
            snrList: jspb.Message.getRepeatedFloatingPointField(msg, 5),
            hasAlmanacList: jspb.Message.getField(msg, 6),
            hasEphemerisList: jspb.Message.getField(msg, 7),
            usedInFixList: jspb.Message.getField(msg, 8)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setTimeToFix(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setSatellitesPrnList(value);
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setAzimuthList(value);
                break;
            case 4:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setElevationList(value);
                break;
            case 5:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setSnrList(value);
                break;
            case 6:
                var value = /** @type {!Array.<boolean>} */ (reader.readPackedBool());
                msg.setHasAlmanacList(value);
                break;
            case 7:
                var value = /** @type {!Array.<boolean>} */ (reader.readPackedBool());
                msg.setHasEphemerisList(value);
                break;
            case 8:
                var value = /** @type {!Array.<boolean>} */ (reader.readPackedBool());
                msg.setUsedInFixList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getTimeToFix();
    if (f !== 0) {
        writer.writeUint64(
            1,
            f
        );
    }
    f = this.getSatellitesPrnList();
    if (f.length > 0) {
        writer.writePackedInt32(
            2,
            f
        );
    }
    f = this.getAzimuthList();
    if (f.length > 0) {
        writer.writePackedFloat(
            3,
            f
        );
    }
    f = this.getElevationList();
    if (f.length > 0) {
        writer.writePackedFloat(
            4,
            f
        );
    }
    f = this.getSnrList();
    if (f.length > 0) {
        writer.writePackedFloat(
            5,
            f
        );
    }
    f = this.getHasAlmanacList();
    if (f.length > 0) {
        writer.writePackedBool(
            6,
            f
        );
    }
    f = this.getHasEphemerisList();
    if (f.length > 0) {
        writer.writePackedBool(
            7,
            f
        );
    }
    f = this.getUsedInFixList();
    if (f.length > 0) {
        writer.writePackedBool(
            8,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint64 time_to_fix = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.getTimeToFix = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.setTimeToFix = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated int32 satellites_prn = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.getSatellitesPrnList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.setSatellitesPrnList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.clearSatellitesPrnList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * repeated float azimuth = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.getAzimuthList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.setAzimuthList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.clearAzimuthList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * repeated float elevation = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.getElevationList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.setElevationList = function(value) {
    jspb.Message.setField(this, 4, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.clearElevationList = function() {
    jspb.Message.setField(this, 4, []);
};


/**
 * repeated float snr = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.getSnrList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.setSnrList = function(value) {
    jspb.Message.setField(this, 5, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.clearSnrList = function() {
    jspb.Message.setField(this, 5, []);
};


/**
 * repeated bool has_almanac = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<boolean>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.getHasAlmanacList = function() {
    return /** @type {!Array.<boolean>} */ (jspb.Message.getField(this, 6));
};


/** @param {Array.<boolean>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.setHasAlmanacList = function(value) {
    jspb.Message.setField(this, 6, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.clearHasAlmanacList = function() {
    jspb.Message.setField(this, 6, []);
};


/**
 * repeated bool has_ephemeris = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<boolean>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.getHasEphemerisList = function() {
    return /** @type {!Array.<boolean>} */ (jspb.Message.getField(this, 7));
};


/** @param {Array.<boolean>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.setHasEphemerisList = function(value) {
    jspb.Message.setField(this, 7, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.clearHasEphemerisList = function() {
    jspb.Message.setField(this, 7, []);
};


/**
 * repeated bool used_in_fix = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<boolean>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.getUsedInFixList = function() {
    return /** @type {!Array.<boolean>} */ (jspb.Message.getField(this, 8));
};


/** @param {Array.<boolean>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.setUsedInFixList = function(value) {
    jspb.Message.setField(this, 8, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.AndroidGpsInfo.prototype.clearUsedInFixList = function() {
    jspb.Message.setField(this, 8, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.toObject = function(includeInstance, msg) {
        var f, obj = {
            timestampSnapshot: msg.getTimestampSnapshot(),
            linearAccelerationX: msg.getLinearAccelerationX(),
            linearAccelerationY: msg.getLinearAccelerationY(),
            linearAccelerationZ: msg.getLinearAccelerationZ(),
            magneticFieldX: msg.getMagneticFieldX(),
            magneticFieldY: msg.getMagneticFieldY(),
            magneticFieldZ: msg.getMagneticFieldZ(),
            rotationVectorX: msg.getRotationVectorX(),
            rotationVectorY: msg.getRotationVectorY(),
            rotationVectorZ: msg.getRotationVectorZ(),
            gyroscopeRawX: msg.getGyroscopeRawX(),
            gyroscopeRawY: msg.getGyroscopeRawY(),
            gyroscopeRawZ: msg.getGyroscopeRawZ(),
            gravityX: msg.getGravityX(),
            gravityY: msg.getGravityY(),
            gravityZ: msg.getGravityZ(),
            accelerometerAxes: msg.getAccelerometerAxes()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setTimestampSnapshot(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLinearAccelerationX(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLinearAccelerationY(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLinearAccelerationZ(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setMagneticFieldX(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setMagneticFieldY(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setMagneticFieldZ(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setRotationVectorX(value);
                break;
            case 11:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setRotationVectorY(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setRotationVectorZ(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setGyroscopeRawX(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setGyroscopeRawY(value);
                break;
            case 15:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setGyroscopeRawZ(value);
                break;
            case 16:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setGravityX(value);
                break;
            case 17:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setGravityY(value);
                break;
            case 18:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setGravityZ(value);
                break;
            case 19:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setAccelerometerAxes(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getTimestampSnapshot();
    if (f !== 0) {
        writer.writeUint64(
            1,
            f
        );
    }
    f = this.getLinearAccelerationX();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getLinearAccelerationY();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
    f = this.getLinearAccelerationZ();
    if (f !== 0.0) {
        writer.writeDouble(
            5,
            f
        );
    }
    f = this.getMagneticFieldX();
    if (f !== 0.0) {
        writer.writeDouble(
            6,
            f
        );
    }
    f = this.getMagneticFieldY();
    if (f !== 0.0) {
        writer.writeDouble(
            7,
            f
        );
    }
    f = this.getMagneticFieldZ();
    if (f !== 0.0) {
        writer.writeDouble(
            8,
            f
        );
    }
    f = this.getRotationVectorX();
    if (f !== 0.0) {
        writer.writeDouble(
            10,
            f
        );
    }
    f = this.getRotationVectorY();
    if (f !== 0.0) {
        writer.writeDouble(
            11,
            f
        );
    }
    f = this.getRotationVectorZ();
    if (f !== 0.0) {
        writer.writeDouble(
            12,
            f
        );
    }
    f = this.getGyroscopeRawX();
    if (f !== 0.0) {
        writer.writeDouble(
            13,
            f
        );
    }
    f = this.getGyroscopeRawY();
    if (f !== 0.0) {
        writer.writeDouble(
            14,
            f
        );
    }
    f = this.getGyroscopeRawZ();
    if (f !== 0.0) {
        writer.writeDouble(
            15,
            f
        );
    }
    f = this.getGravityX();
    if (f !== 0.0) {
        writer.writeDouble(
            16,
            f
        );
    }
    f = this.getGravityY();
    if (f !== 0.0) {
        writer.writeDouble(
            17,
            f
        );
    }
    f = this.getGravityZ();
    if (f !== 0.0) {
        writer.writeDouble(
            18,
            f
        );
    }
    f = this.getAccelerometerAxes();
    if (f !== 0) {
        writer.writeUint64(
            19,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint64 timestamp_snapshot = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getTimestampSnapshot = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setTimestampSnapshot = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional double linear_acceleration_x = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getLinearAccelerationX = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setLinearAccelerationX = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double linear_acceleration_y = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getLinearAccelerationY = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setLinearAccelerationY = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional double linear_acceleration_z = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getLinearAccelerationZ = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setLinearAccelerationZ = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional double magnetic_field_x = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getMagneticFieldX = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setMagneticFieldX = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional double magnetic_field_y = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getMagneticFieldY = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setMagneticFieldY = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional double magnetic_field_z = 8;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getMagneticFieldZ = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setMagneticFieldZ = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional double rotation_vector_x = 10;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getRotationVectorX = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setRotationVectorX = function(value) {
    jspb.Message.setField(this, 10, value);
};


/**
 * optional double rotation_vector_y = 11;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getRotationVectorY = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 11, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setRotationVectorY = function(value) {
    jspb.Message.setField(this, 11, value);
};


/**
 * optional double rotation_vector_z = 12;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getRotationVectorZ = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 12, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setRotationVectorZ = function(value) {
    jspb.Message.setField(this, 12, value);
};


/**
 * optional double gyroscope_raw_x = 13;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getGyroscopeRawX = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 13, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setGyroscopeRawX = function(value) {
    jspb.Message.setField(this, 13, value);
};


/**
 * optional double gyroscope_raw_y = 14;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getGyroscopeRawY = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 14, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setGyroscopeRawY = function(value) {
    jspb.Message.setField(this, 14, value);
};


/**
 * optional double gyroscope_raw_z = 15;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getGyroscopeRawZ = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 15, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setGyroscopeRawZ = function(value) {
    jspb.Message.setField(this, 15, value);
};


/**
 * optional double gravity_x = 16;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getGravityX = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 16, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setGravityX = function(value) {
    jspb.Message.setField(this, 16, value);
};


/**
 * optional double gravity_y = 17;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getGravityY = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 17, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setGravityY = function(value) {
    jspb.Message.setField(this, 17, value);
};


/**
 * optional double gravity_z = 18;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getGravityZ = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 18, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setGravityZ = function(value) {
    jspb.Message.setField(this, 18, value);
};


/**
 * optional uint64 accelerometer_axes = 19;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.getAccelerometerAxes = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 19, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.SensorInfo.prototype.setAccelerometerAxes = function(value) {
    jspb.Message.setField(this, 19, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.toObject = function(includeInstance, msg) {
        var f, obj = {
            deviceId: msg.getDeviceId(),
            androidBoardName: msg.getAndroidBoardName(),
            androidBootloader: msg.getAndroidBootloader(),
            deviceBrand: msg.getDeviceBrand(),
            deviceModel: msg.getDeviceModel(),
            deviceModelIdentifier: msg.getDeviceModelIdentifier(),
            deviceModelBoot: msg.getDeviceModelBoot(),
            hardwareManufacturer: msg.getHardwareManufacturer(),
            hardwareModel: msg.getHardwareModel(),
            firmwareBrand: msg.getFirmwareBrand(),
            firmwareTags: msg.getFirmwareTags(),
            firmwareType: msg.getFirmwareType(),
            firmwareFingerprint: msg.getFirmwareFingerprint()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeviceId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setAndroidBoardName(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setAndroidBootloader(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeviceBrand(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeviceModel(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeviceModelIdentifier(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeviceModelBoot(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setHardwareManufacturer(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setHardwareModel(value);
                break;
            case 10:
                var value = /** @type {string} */ (reader.readString());
                msg.setFirmwareBrand(value);
                break;
            case 12:
                var value = /** @type {string} */ (reader.readString());
                msg.setFirmwareTags(value);
                break;
            case 13:
                var value = /** @type {string} */ (reader.readString());
                msg.setFirmwareType(value);
                break;
            case 14:
                var value = /** @type {string} */ (reader.readString());
                msg.setFirmwareFingerprint(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getDeviceId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getAndroidBoardName();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getAndroidBootloader();
    if (f.length > 0) {
        writer.writeString(
            3,
            f
        );
    }
    f = this.getDeviceBrand();
    if (f.length > 0) {
        writer.writeString(
            4,
            f
        );
    }
    f = this.getDeviceModel();
    if (f.length > 0) {
        writer.writeString(
            5,
            f
        );
    }
    f = this.getDeviceModelIdentifier();
    if (f.length > 0) {
        writer.writeString(
            6,
            f
        );
    }
    f = this.getDeviceModelBoot();
    if (f.length > 0) {
        writer.writeString(
            7,
            f
        );
    }
    f = this.getHardwareManufacturer();
    if (f.length > 0) {
        writer.writeString(
            8,
            f
        );
    }
    f = this.getHardwareModel();
    if (f.length > 0) {
        writer.writeString(
            9,
            f
        );
    }
    f = this.getFirmwareBrand();
    if (f.length > 0) {
        writer.writeString(
            10,
            f
        );
    }
    f = this.getFirmwareTags();
    if (f.length > 0) {
        writer.writeString(
            12,
            f
        );
    }
    f = this.getFirmwareType();
    if (f.length > 0) {
        writer.writeString(
            13,
            f
        );
    }
    f = this.getFirmwareFingerprint();
    if (f.length > 0) {
        writer.writeString(
            14,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string device_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getDeviceId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setDeviceId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string android_board_name = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getAndroidBoardName = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setAndroidBoardName = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional string android_bootloader = 3;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getAndroidBootloader = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setAndroidBootloader = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional string device_brand = 4;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getDeviceBrand = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setDeviceBrand = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional string device_model = 5;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getDeviceModel = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setDeviceModel = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional string device_model_identifier = 6;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getDeviceModelIdentifier = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setDeviceModelIdentifier = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional string device_model_boot = 7;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getDeviceModelBoot = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setDeviceModelBoot = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional string hardware_manufacturer = 8;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getHardwareManufacturer = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setHardwareManufacturer = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional string hardware_model = 9;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getHardwareModel = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setHardwareModel = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * optional string firmware_brand = 10;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getFirmwareBrand = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setFirmwareBrand = function(value) {
    jspb.Message.setField(this, 10, value);
};


/**
 * optional string firmware_tags = 12;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getFirmwareTags = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setFirmwareTags = function(value) {
    jspb.Message.setField(this, 12, value);
};


/**
 * optional string firmware_type = 13;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getFirmwareType = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setFirmwareType = function(value) {
    jspb.Message.setField(this, 13, value);
};


/**
 * optional string firmware_fingerprint = 14;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.getFirmwareFingerprint = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 14, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.DeviceInfo.prototype.setFirmwareFingerprint = function(value) {
    jspb.Message.setField(this, 14, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.toObject = function(includeInstance, msg) {
        var f, obj = {
            startTimeMs: msg.getStartTimeMs(),
            unknownStatus: msg.getUnknownStatus(),
            walking: msg.getWalking(),
            running: msg.getRunning(),
            stationary: msg.getStationary(),
            automotive: msg.getAutomotive(),
            tilting: msg.getTilting(),
            cycling: msg.getCycling(),
            status: msg.getStatus_asB64()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setStartTimeMs(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setUnknownStatus(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setWalking(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setRunning(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStationary(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setAutomotive(value);
                break;
            case 7:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setTilting(value);
                break;
            case 8:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setCycling(value);
                break;
            case 9:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStartTimeMs();
    if (f !== 0) {
        writer.writeUint64(
            1,
            f
        );
    }
    f = this.getUnknownStatus();
    if (f) {
        writer.writeBool(
            2,
            f
        );
    }
    f = this.getWalking();
    if (f) {
        writer.writeBool(
            3,
            f
        );
    }
    f = this.getRunning();
    if (f) {
        writer.writeBool(
            4,
            f
        );
    }
    f = this.getStationary();
    if (f) {
        writer.writeBool(
            5,
            f
        );
    }
    f = this.getAutomotive();
    if (f) {
        writer.writeBool(
            6,
            f
        );
    }
    f = this.getTilting();
    if (f) {
        writer.writeBool(
            7,
            f
        );
    }
    f = this.getCycling();
    if (f) {
        writer.writeBool(
            8,
            f
        );
    }
    f = this.getStatus_asU8();
    if (f.length > 0) {
        writer.writeBytes(
            9,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint64 start_time_ms = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getStartTimeMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.setStartTimeMs = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional bool unknown_status = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getUnknownStatus = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.setUnknownStatus = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional bool walking = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getWalking = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.setWalking = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional bool running = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getRunning = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 4, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.setRunning = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional bool stationary = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getStationary = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 5, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.setStationary = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional bool automotive = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getAutomotive = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 6, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.setAutomotive = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional bool tilting = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getTilting = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 7, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.setTilting = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional bool cycling = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getCycling = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 8, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.setCycling = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional bytes status = 9;
 * @return {!(string|Uint8Array)}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getStatus = function() {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/**
 * optional bytes status = 9;
 * This is a type-conversion wrapper around `getStatus()`
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getStatus_asB64 = function() {
    return /** @type {string} */ (jspb.Message.bytesAsB64(
        this.getStatus()));
};


/**
 * optional bytes status = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStatus()`
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.getStatus_asU8 = function() {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
        this.getStatus()));
};


/** @param {!(string|Uint8Array)} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.Signature.ActivityStatus.prototype.setStatus = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.RequestType = {
    METHOD_UNSET: 0,
    PLAYER_UPDATE: 1,
    GET_PLAYER: 2,
    GET_INVENTORY: 4,
    DOWNLOAD_SETTINGS: 5,
    DOWNLOAD_ITEM_TEMPLATES: 6,
    DOWNLOAD_REMOTE_CONFIG_VERSION: 7,
    FORT_SEARCH: 101,
    ENCOUNTER: 102,
    CATCH_POKEMON: 103,
    FORT_DETAILS: 104,
    ITEM_USE: 105,
    GET_MAP_OBJECTS: 106,
    FORT_DEPLOY_POKEMON: 110,
    FORT_RECALL_POKEMON: 111,
    RELEASE_POKEMON: 112,
    USE_ITEM_POTION: 113,
    USE_ITEM_CAPTURE: 114,
    USE_ITEM_FLEE: 115,
    USE_ITEM_REVIVE: 116,
    TRADE_SEARCH: 117,
    TRADE_OFFER: 118,
    TRADE_RESPONSE: 119,
    TRADE_RESULT: 120,
    GET_PLAYER_PROFILE: 121,
    GET_ITEM_PACK: 122,
    BUY_ITEM_PACK: 123,
    BUY_GEM_PACK: 124,
    EVOLVE_POKEMON: 125,
    GET_HATCHED_EGGS: 126,
    ENCOUNTER_TUTORIAL_COMPLETE: 127,
    LEVEL_UP_REWARDS: 128,
    CHECK_AWARDED_BADGES: 129,
    USE_ITEM_GYM: 133,
    GET_GYM_DETAILS: 134,
    START_GYM_BATTLE: 135,
    ATTACK_GYM: 136,
    RECYCLE_INVENTORY_ITEM: 137,
    COLLECT_DAILY_BONUS: 138,
    USE_ITEM_XP_BOOST: 139,
    USE_ITEM_EGG_INCUBATOR: 140,
    USE_INCENSE: 141,
    GET_INCENSE_POKEMON: 142,
    INCENSE_ENCOUNTER: 143,
    ADD_FORT_MODIFIER: 144,
    DISK_ENCOUNTER: 145,
    COLLECT_DAILY_DEFENDER_BONUS: 146,
    UPGRADE_POKEMON: 147,
    SET_FAVORITE_POKEMON: 148,
    NICKNAME_POKEMON: 149,
    EQUIP_BADGE: 150,
    SET_CONTACT_SETTINGS: 151,
    SET_BUDDY_POKEMON: 152,
    GET_BUDDY_WALKED: 153,
    GET_ASSET_DIGEST: 300,
    GET_DOWNLOAD_URLS: 301,
    GET_SUGGESTED_CODENAMES: 401,
    CHECK_CODENAME_AVAILABLE: 402,
    CLAIM_CODENAME: 403,
    SET_AVATAR: 404,
    SET_PLAYER_TEAM: 405,
    MARK_TUTORIAL_COMPLETE: 406,
    LOAD_SPAWN_POINTS: 500,
    CHECK_CHALLENGE: 600,
    VERIFY_CHALLENGE: 601,
    ECHO: 666,
    DEBUG_UPDATE_INVENTORY: 700,
    DEBUG_DELETE_PLAYER: 701,
    SFIDA_REGISTRATION: 800,
    SFIDA_ACTION_LOG: 801,
    SFIDA_CERTIFICATION: 802,
    SFIDA_UPDATE: 803,
    SFIDA_ACTION: 804,
    SFIDA_DOWSER: 805,
    SFIDA_CAPTURE: 806
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.Request';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.Request} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.toObject = function(includeInstance, msg) {
        var f, obj = {
            requestType: msg.getRequestType(),
            requestMessage: msg.getRequestMessage_asB64()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.Request}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.Request;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.Request}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.RequestType} */ (reader.readEnum());
                msg.setRequestType(value);
                break;
            case 2:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setRequestMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.Request} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getRequestType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getRequestMessage_asU8();
    if (f.length > 0) {
        writer.writeBytes(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.Request} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.Request} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RequestType request_type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.RequestType}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.prototype.getRequestType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.RequestType} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.RequestType} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.prototype.setRequestType = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes request_message = 2;
 * @return {!(string|Uint8Array)}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.prototype.getRequestMessage = function() {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/**
 * optional bytes request_message = 2;
 * This is a type-conversion wrapper around `getRequestMessage()`
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.prototype.getRequestMessage_asB64 = function() {
    return /** @type {string} */ (jspb.Message.bytesAsB64(
        this.getRequestMessage()));
};


/**
 * optional bytes request_message = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRequestMessage()`
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.prototype.getRequestMessage_asU8 = function() {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
        this.getRequestMessage()));
};


/** @param {!(string|Uint8Array)} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.prototype.setRequestMessage = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.toObject = function(includeInstance, msg) {
        var f, obj = {
            start: msg.getStart_asB64(),
            expireTimestampMs: msg.getExpireTimestampMs(),
            end: msg.getEnd_asB64()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setStart(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setExpireTimestampMs(value);
                break;
            case 3:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setEnd(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStart_asU8();
    if (f.length > 0) {
        writer.writeBytes(
            1,
            f
        );
    }
    f = this.getExpireTimestampMs();
    if (f !== 0) {
        writer.writeUint64(
            2,
            f
        );
    }
    f = this.getEnd_asU8();
    if (f.length > 0) {
        writer.writeBytes(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bytes start = 1;
 * @return {!(string|Uint8Array)}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.getStart = function() {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/**
 * optional bytes start = 1;
 * This is a type-conversion wrapper around `getStart()`
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.getStart_asB64 = function() {
    return /** @type {string} */ (jspb.Message.bytesAsB64(
        this.getStart()));
};


/**
 * optional bytes start = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStart()`
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.getStart_asU8 = function() {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
        this.getStart()));
};


/** @param {!(string|Uint8Array)} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.setStart = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 expire_timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.getExpireTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.setExpireTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional bytes end = 3;
 * @return {!(string|Uint8Array)}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.getEnd = function() {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/**
 * optional bytes end = 3;
 * This is a type-conversion wrapper around `getEnd()`
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.getEnd_asB64 = function() {
    return /** @type {string} */ (jspb.Message.bytesAsB64(
        this.getEnd()));
};


/**
 * optional bytes end = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEnd()`
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.getEnd_asU8 = function() {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
        this.getEnd()));
};


/** @param {!(string|Uint8Array)} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.prototype.setEnd = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.repeatedFields_ = [4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.toObject = function(includeInstance, msg) {
        var f, obj = {
            statusCode: msg.getStatusCode(),
            requestId: msg.getRequestId(),
            requestsList: jspb.Message.toObjectList(msg.getRequestsList(),
                proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.toObject, includeInstance),
            platformRequestsList: jspb.Message.toObjectList(msg.getPlatformRequestsList(),
                proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.toObject, includeInstance),
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude(),
            accuracy: msg.getAccuracy(),
            authInfo: (f = msg.getAuthInfo()) && proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.toObject(includeInstance, f),
            authTicket: (f = msg.getAuthTicket()) && proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.toObject(includeInstance, f),
            msSinceLastLocationfix: msg.getMsSinceLastLocationfix()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStatusCode(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setRequestId(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.requests.Request;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.deserializeBinaryFromReader);
                msg.getRequestsList().push(value);
                msg.setRequestsList(msg.getRequestsList());
                break;
            case 6:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.deserializeBinaryFromReader);
                msg.getPlatformRequestsList().push(value);
                msg.setPlatformRequestsList(msg.getPlatformRequestsList());
                break;
            case 7:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setAccuracy(value);
                break;
            case 10:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.deserializeBinaryFromReader);
                msg.setAuthInfo(value);
                break;
            case 11:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.deserializeBinaryFromReader);
                msg.setAuthTicket(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setMsSinceLastLocationfix(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStatusCode();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
    f = this.getRequestId();
    if (f !== 0) {
        writer.writeUint64(
            3,
            f
        );
    }
    f = this.getRequestsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.requests.Request.serializeBinaryToWriter
        );
    }
    f = this.getPlatformRequestsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            6,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.serializeBinaryToWriter
        );
    }
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            7,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            8,
            f
        );
    }
    f = this.getAccuracy();
    if (f !== 0.0) {
        writer.writeDouble(
            9,
            f
        );
    }
    f = this.getAuthInfo();
    if (f != null) {
        writer.writeMessage(
            10,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.serializeBinaryToWriter
        );
    }
    f = this.getAuthTicket();
    if (f != null) {
        writer.writeMessage(
            11,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.serializeBinaryToWriter
        );
    }
    f = this.getMsSinceLastLocationfix();
    if (f !== 0) {
        writer.writeInt64(
            12,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 status_code = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.getStatusCode = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.setStatusCode = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 request_id = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.getRequestId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.setRequestId = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.networking.requests.Request requests = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.requests.Request>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.getRequestsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.requests.Request>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.requests.Request, 4));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.networking.requests.Request>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.setRequestsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.clearRequestsList = function() {
    this.setRequestsList([]);
};


/**
 * repeated PlatformRequest platform_requests = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.getPlatformRequestsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest, 6));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.setPlatformRequestsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 6, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.clearPlatformRequestsList = function() {
    this.setPlatformRequestsList([]);
};


/**
 * optional double latitude = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional double longitude = 8;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional double accuracy = 9;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.getAccuracy = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.setAccuracy = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * optional AuthInfo auth_info = 10;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.getAuthInfo = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo, 10));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.setAuthInfo = function(value) {
    jspb.Message.setWrapperField(this, 10, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.clearAuthInfo = function() {
    this.setAuthInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.hasAuthInfo = function() {
    return jspb.Message.getField(this, 10) != null;
};


/**
 * optional AuthTicket auth_ticket = 11;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.getAuthTicket = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket, 11));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.setAuthTicket = function(value) {
    jspb.Message.setWrapperField(this, 11, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.clearAuthTicket = function() {
    this.setAuthTicket(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.hasAuthTicket = function() {
    return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int64 ms_since_last_locationfix = 12;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.getMsSinceLastLocationfix = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 12, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.prototype.setMsSinceLastLocationfix = function(value) {
    jspb.Message.setField(this, 12, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.toObject = function(includeInstance, msg) {
        var f, obj = {
            provider: msg.getProvider(),
            token: (f = msg.getToken()) && proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setProvider(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.deserializeBinaryFromReader);
                msg.setToken(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getProvider();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getToken();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.prototype.getProvider = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.prototype.setProvider = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional JWT token = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.prototype.getToken = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.prototype.setToken = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.prototype.clearToken = function() {
    this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.prototype.hasToken = function() {
    return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.toObject = function(includeInstance, msg) {
        var f, obj = {
            contents: msg.getContents(),
            unknown2: msg.getUnknown2()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setContents(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setUnknown2(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getContents();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getUnknown2();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string contents = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.prototype.getContents = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.prototype.setContents = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 unknown2 = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.prototype.getUnknown2 = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.AuthInfo.JWT.prototype.setUnknown2 = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
            type: msg.getType(),
            requestMessage: msg.getRequestMessage_asB64()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setRequestMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getRequestMessage_asU8();
    if (f.length > 0) {
        writer.writeBytes(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.prototype.getType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.prototype.setType = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes request_message = 2;
 * @return {!(string|Uint8Array)}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.prototype.getRequestMessage = function() {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/**
 * optional bytes request_message = 2;
 * This is a type-conversion wrapper around `getRequestMessage()`
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.prototype.getRequestMessage_asB64 = function() {
    return /** @type {string} */ (jspb.Message.bytesAsB64(
        this.getRequestMessage()));
};


/**
 * optional bytes request_message = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRequestMessage()`
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.prototype.getRequestMessage_asU8 = function() {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
        this.getRequestMessage()));
};


/** @param {!(string|Uint8Array)} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.RequestEnvelope.PlatformRequest.prototype.setRequestMessage = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.repeatedFields_ = [6,100];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.toObject = function(includeInstance, msg) {
        var f, obj = {
            statusCode: msg.getStatusCode(),
            requestId: msg.getRequestId(),
            apiUrl: msg.getApiUrl(),
            platformReturnsList: jspb.Message.toObjectList(msg.getPlatformReturnsList(),
                proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.toObject, includeInstance),
            authTicket: (f = msg.getAuthTicket()) && proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.toObject(includeInstance, f),
            returnsList: msg.getReturnsList_asB64(),
            error: msg.getError()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.StatusCode} */ (reader.readEnum());
                msg.setStatusCode(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setRequestId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setApiUrl(value);
                break;
            case 6:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.deserializeBinaryFromReader);
                msg.getPlatformReturnsList().push(value);
                msg.setPlatformReturnsList(msg.getPlatformReturnsList());
                break;
            case 7:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.deserializeBinaryFromReader);
                msg.setAuthTicket(value);
                break;
            case 100:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.getReturnsList().push(value);
                msg.setReturnsList(msg.getReturnsList());
                break;
            case 101:
                var value = /** @type {string} */ (reader.readString());
                msg.setError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStatusCode();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getRequestId();
    if (f !== 0) {
        writer.writeUint64(
            2,
            f
        );
    }
    f = this.getApiUrl();
    if (f.length > 0) {
        writer.writeString(
            3,
            f
        );
    }
    f = this.getPlatformReturnsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            6,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.serializeBinaryToWriter
        );
    }
    f = this.getAuthTicket();
    if (f != null) {
        writer.writeMessage(
            7,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket.serializeBinaryToWriter
        );
    }
    f = this.getReturnsList_asU8();
    if (f.length > 0) {
        writer.writeRepeatedBytes(
            100,
            f
        );
    }
    f = this.getError();
    if (f.length > 0) {
        writer.writeString(
            101,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional StatusCode status_code = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.StatusCode}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.getStatusCode = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.StatusCode} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.StatusCode} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.setStatusCode = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 request_id = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.getRequestId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.setRequestId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional string api_url = 3;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.getApiUrl = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.setApiUrl = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * repeated PlatformResponse platform_returns = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.getPlatformReturnsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse, 6));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.setPlatformReturnsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 6, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.clearPlatformReturnsList = function() {
    this.setPlatformReturnsList([]);
};


/**
 * optional AuthTicket auth_ticket = 7;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.getAuthTicket = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket, 7));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.envelopes.AuthTicket|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.setAuthTicket = function(value) {
    jspb.Message.setWrapperField(this, 7, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.clearAuthTicket = function() {
    this.setAuthTicket(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.hasAuthTicket = function() {
    return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated bytes returns = 100;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.getReturnsList = function() {
    return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getField(this, 100));
};


/**
 * repeated bytes returns = 100;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * This is a type-conversion wrapper around `getReturnsList()`
 * @return {!Array.<string>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.getReturnsList_asB64 = function() {
    return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
        this.getReturnsList()));
};


/**
 * repeated bytes returns = 100;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReturnsList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.getReturnsList_asU8 = function() {
    return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
        this.getReturnsList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.setReturnsList = function(value) {
    jspb.Message.setField(this, 100, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.clearReturnsList = function() {
    jspb.Message.setField(this, 100, []);
};


/**
 * optional string error = 101;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.getError = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 101, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.prototype.setError = function(value) {
    jspb.Message.setField(this, 101, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.StatusCode = {
    UNKNOWN: 0,
    OK: 1,
    OK_RPC_URL_IN_RESPONSE: 2,
    BAD_REQUEST: 3,
    INVALID_REQUEST: 51,
    INVALID_PLATFORM_REQUEST: 52,
    REDIRECT: 53,
    SESSION_INVALIDATED: 100,
    INVALID_AUTH_TOKEN: 102
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            type: msg.getType(),
            response: msg.getResponse_asB64()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setResponse(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getResponse_asU8();
    if (f.length > 0) {
        writer.writeBytes(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.prototype.getType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.PlatformRequestType} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.prototype.setType = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes response = 2;
 * @return {!(string|Uint8Array)}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.prototype.getResponse = function() {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/**
 * optional bytes response = 2;
 * This is a type-conversion wrapper around `getResponse()`
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.prototype.getResponse_asB64 = function() {
    return /** @type {string} */ (jspb.Message.bytesAsB64(
        this.getResponse()));
};


/**
 * optional bytes response = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getResponse()`
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.prototype.getResponse_asU8 = function() {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
        this.getResponse()));
};


/** @param {!(string|Uint8Array)} value  */
proto.com.github.aeonlucid.pogoprotos.networking.envelopes.ResponseEnvelope.PlatformResponse.prototype.setResponse = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
            buyItemIntent: msg.getBuyItemIntent()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest;
    return proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setBuyItemIntent(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getBuyItemIntent();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string buy_item_intent = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.prototype.getBuyItemIntent = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemAndroidRequest.prototype.setBuyItemIntent = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest;
    return proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setItemId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.prototype.getItemId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.BuyItemPokeCoinsRequest.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
            encryptedSignature: msg.getEncryptedSignature_asB64()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest;
    return proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setEncryptedSignature(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getEncryptedSignature_asU8();
    if (f.length > 0) {
        writer.writeBytes(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bytes encrypted_signature = 1;
 * @return {!(string|Uint8Array)}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.prototype.getEncryptedSignature = function() {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/**
 * optional bytes encrypted_signature = 1;
 * This is a type-conversion wrapper around `getEncryptedSignature()`
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.prototype.getEncryptedSignature_asB64 = function() {
    return /** @type {string} */ (jspb.Message.bytesAsB64(
        this.getEncryptedSignature()));
};


/**
 * optional bytes encrypted_signature = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedSignature()`
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.prototype.getEncryptedSignature_asU8 = function() {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
        this.getEncryptedSignature()));
};


/** @param {!(string|Uint8Array)} value  */
proto.com.github.aeonlucid.pogoprotos.networking.platform.requests.SendEncryptedSignatureRequest.prototype.setEncryptedSignature = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.TutorialState = {
    LEGAL_SCREEN: 0,
    AVATAR_SELECTION: 1,
    ACCOUNT_CREATION: 2,
    POKEMON_CAPTURE: 3,
    NAME_SELECTION: 4,
    POKEMON_BERRY: 5,
    USE_ITEM: 6,
    FIRST_TIME_EXPERIENCE_COMPLETE: 7,
    POKESTOP_TUTORIAL: 8,
    GYM_TUTORIAL: 9
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.toObject = function(includeInstance, msg) {
        var f, obj = {
            id: msg.getId(),
            startKmWalked: msg.getStartKmWalked(),
            lastKmAwarded: msg.getLastKmAwarded()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon;
    return proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setStartKmWalked(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLastKmAwarded(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
    f = this.getStartKmWalked();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
    f = this.getLastKmAwarded();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.prototype.getId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.prototype.setId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional double start_km_walked = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.prototype.getStartKmWalked = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.prototype.setStartKmWalked = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double last_km_awarded = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.prototype.getLastKmAwarded = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.prototype.setLastKmAwarded = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.data.PlayerData.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.PlayerData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.PlayerData.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.PlayerData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.repeatedFields_ = [7,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.PlayerData.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.PlayerData} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.PlayerData.toObject = function(includeInstance, msg) {
        var f, obj = {
            creationTimestampMs: msg.getCreationTimestampMs(),
            username: msg.getUsername(),
            team: msg.getTeam(),
            tutorialStateList: jspb.Message.getField(msg, 7),
            avatar: (f = msg.getAvatar()) && proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.toObject(includeInstance, f),
            maxPokemonStorage: msg.getMaxPokemonStorage(),
            maxItemStorage: msg.getMaxItemStorage(),
            dailyBonus: (f = msg.getDailyBonus()) && proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.toObject(includeInstance, f),
            equippedBadge: (f = msg.getEquippedBadge()) && proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.toObject(includeInstance, f),
            contactSettings: (f = msg.getContactSettings()) && proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.toObject(includeInstance, f),
            currenciesList: jspb.Message.toObjectList(msg.getCurrenciesList(),
                proto.com.github.aeonlucid.pogoprotos.data.player.Currency.toObject, includeInstance),
            remainingCodenameClaims: msg.getRemainingCodenameClaims(),
            buddyPokemon: (f = msg.getBuddyPokemon()) && proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PlayerData}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.PlayerData;
    return proto.com.github.aeonlucid.pogoprotos.data.PlayerData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.PlayerData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PlayerData}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setCreationTimestampMs(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setUsername(value);
                break;
            case 5:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} */ (reader.readEnum());
                msg.setTeam(value);
                break;
            case 7:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.TutorialState>} */ (reader.readPackedEnum());
                msg.setTutorialStateList(value);
                break;
            case 8:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.deserializeBinaryFromReader);
                msg.setAvatar(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaxPokemonStorage(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaxItemStorage(value);
                break;
            case 11:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.deserializeBinaryFromReader);
                msg.setDailyBonus(value);
                break;
            case 12:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.deserializeBinaryFromReader);
                msg.setEquippedBadge(value);
                break;
            case 13:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.deserializeBinaryFromReader);
                msg.setContactSettings(value);
                break;
            case 14:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.Currency;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.Currency.deserializeBinaryFromReader);
                msg.getCurrenciesList().push(value);
                msg.setCurrenciesList(msg.getCurrenciesList());
                break;
            case 15:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setRemainingCodenameClaims(value);
                break;
            case 16:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.deserializeBinaryFromReader);
                msg.setBuddyPokemon(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.PlayerData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getCreationTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            1,
            f
        );
    }
    f = this.getUsername();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getTeam();
    if (f !== 0.0) {
        writer.writeEnum(
            5,
            f
        );
    }
    f = this.getTutorialStateList();
    if (f.length > 0) {
        writer.writePackedEnum(
            7,
            f
        );
    }
    f = this.getAvatar();
    if (f != null) {
        writer.writeMessage(
            8,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.serializeBinaryToWriter
        );
    }
    f = this.getMaxPokemonStorage();
    if (f !== 0) {
        writer.writeInt32(
            9,
            f
        );
    }
    f = this.getMaxItemStorage();
    if (f !== 0) {
        writer.writeInt32(
            10,
            f
        );
    }
    f = this.getDailyBonus();
    if (f != null) {
        writer.writeMessage(
            11,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus.serializeBinaryToWriter
        );
    }
    f = this.getEquippedBadge();
    if (f != null) {
        writer.writeMessage(
            12,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.serializeBinaryToWriter
        );
    }
    f = this.getContactSettings();
    if (f != null) {
        writer.writeMessage(
            13,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.serializeBinaryToWriter
        );
    }
    f = this.getCurrenciesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            14,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.Currency.serializeBinaryToWriter
        );
    }
    f = this.getRemainingCodenameClaims();
    if (f !== 0) {
        writer.writeInt32(
            15,
            f
        );
    }
    f = this.getBuddyPokemon();
    if (f != null) {
        writer.writeMessage(
            16,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PlayerData} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.PlayerData} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 creation_timestamp_ms = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getCreationTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setCreationTimestampMs = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getUsername = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setUsername = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.TeamColor team = 5;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getTeam = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setTeam = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.TutorialState tutorial_state = 7;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.TutorialState>}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getTutorialStateList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.TutorialState>} */ (jspb.Message.getField(this, 7));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.TutorialState>} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setTutorialStateList = function(value) {
    jspb.Message.setField(this, 7, value || []);
};


proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.clearTutorialStateList = function() {
    jspb.Message.setField(this, 7, []);
};


/**
 * optional player.PlayerAvatar avatar = 8;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getAvatar = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar, 8));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setAvatar = function(value) {
    jspb.Message.setWrapperField(this, 8, value);
};


proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.clearAvatar = function() {
    this.setAvatar(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.hasAvatar = function() {
    return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 max_pokemon_storage = 9;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getMaxPokemonStorage = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setMaxPokemonStorage = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * optional int32 max_item_storage = 10;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getMaxItemStorage = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setMaxItemStorage = function(value) {
    jspb.Message.setField(this, 10, value);
};


/**
 * optional player.DailyBonus daily_bonus = 11;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getDailyBonus = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus, 11));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.DailyBonus|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setDailyBonus = function(value) {
    jspb.Message.setWrapperField(this, 11, value);
};


proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.clearDailyBonus = function() {
    this.setDailyBonus(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.hasDailyBonus = function() {
    return jspb.Message.getField(this, 11) != null;
};


/**
 * optional player.EquippedBadge equipped_badge = 12;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getEquippedBadge = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge, 12));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setEquippedBadge = function(value) {
    jspb.Message.setWrapperField(this, 12, value);
};


proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.clearEquippedBadge = function() {
    this.setEquippedBadge(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.hasEquippedBadge = function() {
    return jspb.Message.getField(this, 12) != null;
};


/**
 * optional player.ContactSettings contact_settings = 13;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getContactSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings, 13));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setContactSettings = function(value) {
    jspb.Message.setWrapperField(this, 13, value);
};


proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.clearContactSettings = function() {
    this.setContactSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.hasContactSettings = function() {
    return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated player.Currency currencies = 14;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.player.Currency>}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getCurrenciesList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.player.Currency>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.Currency, 14));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.player.Currency>} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setCurrenciesList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 14, value);
};


proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.clearCurrenciesList = function() {
    this.setCurrenciesList([]);
};


/**
 * optional int32 remaining_codename_claims = 15;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getRemainingCodenameClaims = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 15, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setRemainingCodenameClaims = function(value) {
    jspb.Message.setField(this, 15, value);
};


/**
 * optional BuddyPokemon buddy_pokemon = 16;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.getBuddyPokemon = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon, 16));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.setBuddyPokemon = function(value) {
    jspb.Message.setWrapperField(this, 16, value);
};


proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.clearBuddyPokemon = function() {
    this.setBuddyPokemon(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerData.prototype.hasBuddyPokemon = function() {
    return jspb.Message.getField(this, 16) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            success: msg.getSuccess(),
            playerData: (f = msg.getPlayerData()) && proto.com.github.aeonlucid.pogoprotos.data.PlayerData.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSuccess(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PlayerData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PlayerData.deserializeBinaryFromReader);
                msg.setPlayerData(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSuccess();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
    f = this.getPlayerData();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PlayerData.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.prototype.getSuccess = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.prototype.setSuccess = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PlayerData player_data = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PlayerData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.prototype.getPlayerData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PlayerData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PlayerData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PlayerData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.prototype.setPlayerData = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.prototype.clearPlayerData = function() {
    this.setPlayerData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.MarkTutorialCompleteResponse.prototype.hasPlayerData = function() {
    return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            status: msg.getStatus(),
            playerData: (f = msg.getPlayerData()) && proto.com.github.aeonlucid.pogoprotos.data.PlayerData.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.Status} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PlayerData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PlayerData.deserializeBinaryFromReader);
                msg.setPlayerData(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPlayerData();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PlayerData.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Status status = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.Status}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.prototype.getStatus = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.Status} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.Status} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.prototype.setStatus = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PlayerData player_data = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PlayerData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.prototype.getPlayerData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PlayerData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PlayerData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PlayerData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.prototype.setPlayerData = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.prototype.clearPlayerData = function() {
    this.setPlayerData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.prototype.hasPlayerData = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetContactSettingsResponse.Status = {
    UNSET: 0,
    SUCCESS: 1,
    FAILURE: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.repeatedFields_ = [5,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            fortId: msg.getFortId(),
            teamColor: msg.getTeamColor(),
            pokemonData: (f = msg.getPokemonData()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            name: msg.getName(),
            imageUrlsList: jspb.Message.getField(msg, 5),
            fp: msg.getFp(),
            stamina: msg.getStamina(),
            maxStamina: msg.getMaxStamina(),
            type: msg.getType(),
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude(),
            description: msg.getDescription(),
            modifiersList: jspb.Message.toObjectList(msg.getModifiersList(),
                proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortId(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} */ (reader.readEnum());
                msg.setTeamColor(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setPokemonData(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.getImageUrlsList().push(value);
                msg.setImageUrlsList(msg.getImageUrlsList());
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setFp(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStamina(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaxStamina(value);
                break;
            case 9:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortType} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 11:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            case 12:
                var value = /** @type {string} */ (reader.readString());
                msg.setDescription(value);
                break;
            case 13:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.deserializeBinaryFromReader);
                msg.getModifiersList().push(value);
                msg.setModifiersList(msg.getModifiersList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getFortId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getTeamColor();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getPokemonData();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getName();
    if (f.length > 0) {
        writer.writeString(
            4,
            f
        );
    }
    f = this.getImageUrlsList();
    if (f.length > 0) {
        writer.writeRepeatedString(
            5,
            f
        );
    }
    f = this.getFp();
    if (f !== 0) {
        writer.writeInt32(
            6,
            f
        );
    }
    f = this.getStamina();
    if (f !== 0) {
        writer.writeInt32(
            7,
            f
        );
    }
    f = this.getMaxStamina();
    if (f !== 0) {
        writer.writeInt32(
            8,
            f
        );
    }
    f = this.getType();
    if (f !== 0.0) {
        writer.writeEnum(
            9,
            f
        );
    }
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            10,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            11,
            f
        );
    }
    f = this.getDescription();
    if (f.length > 0) {
        writer.writeString(
            12,
            f
        );
    }
    f = this.getModifiersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            13,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string fort_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setFortId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.TeamColor team_color = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getTeamColor = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setTeamColor = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData pokemon_data = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getPokemonData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setPokemonData = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.clearPokemonData = function() {
    this.setPokemonData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.hasPokemonData = function() {
    return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getName = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setName = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * repeated string image_urls = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getImageUrlsList = function() {
    return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 5));
};


/** @param {Array.<string>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setImageUrlsList = function(value) {
    jspb.Message.setField(this, 5, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.clearImageUrlsList = function() {
    jspb.Message.setField(this, 5, []);
};


/**
 * optional int32 fp = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getFp = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setFp = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 stamina = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getStamina = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setStamina = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional int32 max_stamina = 8;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getMaxStamina = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setMaxStamina = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.map.fort.FortType type = 9;
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortType}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortType} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.map.fort.FortType} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setType = function(value) {
    jspb.Message.setField(this, 9, value);
};


/**
 * optional double latitude = 10;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 10, value);
};


/**
 * optional double longitude = 11;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 11, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 11, value);
};


/**
 * optional string description = 12;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getDescription = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setDescription = function(value) {
    jspb.Message.setField(this, 12, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.map.fort.FortModifier modifiers = 13;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.getModifiersList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier, 13));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortModifier>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.setModifiersList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 13, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.prototype.clearModifiersList = function() {
    this.setModifiersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            fortDetails: (f = msg.getFortDetails()) && proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.deserializeBinaryFromReader);
                msg.setFortDetails(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getFortDetails();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional FortDetailsResponse fort_details = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.prototype.getFortDetails = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.prototype.setFortDetails = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.prototype.clearFortDetails = function() {
    this.setFortDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.prototype.hasFortDetails = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortRecallPokemonResponse.Result = {
    NO_RESULT_SET: 0,
    SUCCESS: 1,
    ERROR_NOT_IN_RANGE: 2,
    ERROR_POKEMON_NOT_ON_FORT: 3,
    ERROR_NO_PLAYER: 4
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleState = {
    STATE_UNSET: 0,
    ACTIVE: 1,
    VICTORY: 2,
    DEFEATED: 3,
    TIMED_OUT: 4
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleType = {
    BATTLE_TYPE_UNSET: 0,
    BATTLE_TYPE_NORMAL: 1,
    BATTLE_TYPE_TRAINING: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonData: (f = msg.getPokemonData()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            currentHealth: msg.getCurrentHealth(),
            currentEnergy: msg.getCurrentEnergy()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo;
    return proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setPokemonData(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCurrentHealth(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCurrentEnergy(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonData();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getCurrentHealth();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getCurrentEnergy();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData pokemon_data = 1;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.getPokemonData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 1));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.setPokemonData = function(value) {
    jspb.Message.setWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.clearPokemonData = function() {
    this.setPokemonData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.hasPokemonData = function() {
    return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 current_health = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.getCurrentHealth = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.setCurrentHealth = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 current_energy = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.getCurrentEnergy = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.prototype.setCurrentEnergy = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.toObject = function(includeInstance, msg) {
        var f, obj = {
            activePokemon: (f = msg.getActivePokemon()) && proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.toObject(includeInstance, f),
            trainerPublicProfile: (f = msg.getTrainerPublicProfile()) && proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.toObject(includeInstance, f),
            reversePokemonList: jspb.Message.toObjectList(msg.getReversePokemonList(),
                proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.toObject, includeInstance),
            defeatedPokemonList: jspb.Message.toObjectList(msg.getDefeatedPokemonList(),
                proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant;
    return proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.deserializeBinaryFromReader);
                msg.setActivePokemon(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.deserializeBinaryFromReader);
                msg.setTrainerPublicProfile(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.deserializeBinaryFromReader);
                msg.getReversePokemonList().push(value);
                msg.setReversePokemonList(msg.getReversePokemonList());
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.deserializeBinaryFromReader);
                msg.getDefeatedPokemonList().push(value);
                msg.setDefeatedPokemonList(msg.getDefeatedPokemonList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getActivePokemon();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.serializeBinaryToWriter
        );
    }
    f = this.getTrainerPublicProfile();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile.serializeBinaryToWriter
        );
    }
    f = this.getReversePokemonList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.serializeBinaryToWriter
        );
    }
    f = this.getDefeatedPokemonList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional BattlePokemonInfo active_pokemon = 1;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.getActivePokemon = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo, 1));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.setActivePokemon = function(value) {
    jspb.Message.setWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.clearActivePokemon = function() {
    this.setActivePokemon(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.hasActivePokemon = function() {
    return jspb.Message.getField(this, 1) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile trainer_public_profile = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.getTrainerPublicProfile = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerPublicProfile|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.setTrainerPublicProfile = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.clearTrainerPublicProfile = function() {
    this.setTrainerPublicProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.hasTrainerPublicProfile = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated BattlePokemonInfo reverse_pokemon = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo>}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.getReversePokemonList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo, 3));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo>} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.setReversePokemonList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.clearReversePokemonList = function() {
    this.setReversePokemonList([]);
};


/**
 * repeated BattlePokemonInfo defeated_pokemon = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo>}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.getDefeatedPokemonList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo, 4));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo>} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.setDefeatedPokemonList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.prototype.clearDefeatedPokemonList = function() {
    this.setDefeatedPokemonList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.toObject = function(includeInstance, msg) {
        var f, obj = {
            gymState: (f = msg.getGymState()) && proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.toObject(includeInstance, f),
            attackersList: jspb.Message.toObjectList(msg.getAttackersList(),
                proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.toObject, includeInstance),
            playerExperienceAwardedList: jspb.Message.getField(msg, 3),
            nextDefenderPokemonId: msg.getNextDefenderPokemonId(),
            gymPointsDelta: msg.getGymPointsDelta()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults;
    return proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.gym.GymState;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.deserializeBinaryFromReader);
                msg.setGymState(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.deserializeBinaryFromReader);
                msg.getAttackersList().push(value);
                msg.setAttackersList(msg.getAttackersList());
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setPlayerExperienceAwardedList(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setNextDefenderPokemonId(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setGymPointsDelta(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getGymState();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.serializeBinaryToWriter
        );
    }
    f = this.getAttackersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.serializeBinaryToWriter
        );
    }
    f = this.getPlayerExperienceAwardedList();
    if (f.length > 0) {
        writer.writePackedInt32(
            3,
            f
        );
    }
    f = this.getNextDefenderPokemonId();
    if (f !== 0) {
        writer.writeInt64(
            4,
            f
        );
    }
    f = this.getGymPointsDelta();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.gym.GymState gym_state = 1;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.gym.GymState}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.getGymState = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.gym.GymState} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.gym.GymState, 1));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.gym.GymState|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.setGymState = function(value) {
    jspb.Message.setWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.clearGymState = function() {
    this.setGymState(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.hasGymState = function() {
    return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated BattleParticipant attackers = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant>}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.getAttackersList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant, 2));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant>} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.setAttackersList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.clearAttackersList = function() {
    this.setAttackersList([]);
};


/**
 * repeated int32 player_experience_awarded = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.getPlayerExperienceAwardedList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.setPlayerExperienceAwardedList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.clearPlayerExperienceAwardedList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * optional int64 next_defender_pokemon_id = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.getNextDefenderPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.setNextDefenderPokemonId = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 gym_points_delta = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.getGymPointsDelta = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.prototype.setGymPointsDelta = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleActionType = {
    ACTION_UNSET: 0,
    ACTION_ATTACK: 1,
    ACTION_DODGE: 2,
    ACTION_SPECIAL_ATTACK: 3,
    ACTION_SWAP_POKEMON: 4,
    ACTION_FAINT: 5,
    ACTION_PLAYER_JOIN: 6,
    ACTION_PLAYER_QUIT: 7,
    ACTION_VICTORY: 8,
    ACTION_DEFEAT: 9,
    ACTION_TIMED_OUT: 10
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.toObject = function(includeInstance, msg) {
        var f, obj = {
            type: msg.getType(),
            actionStartMs: msg.getActionStartMs(),
            durationMs: msg.getDurationMs(),
            energyDelta: msg.getEnergyDelta(),
            attackerIndex: msg.getAttackerIndex(),
            targetIndex: msg.getTargetIndex(),
            activePokemonId: msg.getActivePokemonId(),
            playerJoined: (f = msg.getPlayerJoined()) && proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.toObject(includeInstance, f),
            battleResults: (f = msg.getBattleResults()) && proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.toObject(includeInstance, f),
            damageWindowsStartTimestampMss: msg.getDamageWindowsStartTimestampMss(),
            damageWindowsEndTimestampMss: msg.getDamageWindowsEndTimestampMss(),
            playerLeft: (f = msg.getPlayerLeft()) && proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.toObject(includeInstance, f),
            targetPokemonId: msg.getTargetPokemonId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction;
    return proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleActionType} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setActionStartMs(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDurationMs(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEnergyDelta(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setAttackerIndex(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTargetIndex(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setActivePokemonId(value);
                break;
            case 9:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.deserializeBinaryFromReader);
                msg.setPlayerJoined(value);
                break;
            case 10:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.deserializeBinaryFromReader);
                msg.setBattleResults(value);
                break;
            case 11:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setDamageWindowsStartTimestampMss(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setDamageWindowsEndTimestampMss(value);
                break;
            case 13:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.deserializeBinaryFromReader);
                msg.setPlayerLeft(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setTargetPokemonId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getActionStartMs();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = this.getDurationMs();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getEnergyDelta();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
    f = this.getAttackerIndex();
    if (f !== 0) {
        writer.writeInt32(
            6,
            f
        );
    }
    f = this.getTargetIndex();
    if (f !== 0) {
        writer.writeInt32(
            7,
            f
        );
    }
    f = this.getActivePokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            8,
            f
        );
    }
    f = this.getPlayerJoined();
    if (f != null) {
        writer.writeMessage(
            9,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.serializeBinaryToWriter
        );
    }
    f = this.getBattleResults();
    if (f != null) {
        writer.writeMessage(
            10,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults.serializeBinaryToWriter
        );
    }
    f = this.getDamageWindowsStartTimestampMss();
    if (f !== 0) {
        writer.writeInt64(
            11,
            f
        );
    }
    f = this.getDamageWindowsEndTimestampMss();
    if (f !== 0) {
        writer.writeInt64(
            12,
            f
        );
    }
    f = this.getPlayerLeft();
    if (f != null) {
        writer.writeMessage(
            13,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.serializeBinaryToWriter
        );
    }
    f = this.getTargetPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            14,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional BattleActionType Type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleActionType}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleActionType} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleActionType} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setType = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 action_start_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getActionStartMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setActionStartMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 duration_ms = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getDurationMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setDurationMs = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 energy_delta = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getEnergyDelta = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setEnergyDelta = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional int32 attacker_index = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getAttackerIndex = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setAttackerIndex = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 target_index = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getTargetIndex = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setTargetIndex = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * optional fixed64 active_pokemon_id = 8;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getActivePokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setActivePokemonId = function(value) {
    jspb.Message.setField(this, 8, value);
};


/**
 * optional BattleParticipant player_joined = 9;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getPlayerJoined = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant, 9));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setPlayerJoined = function(value) {
    jspb.Message.setWrapperField(this, 9, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.clearPlayerJoined = function() {
    this.setPlayerJoined(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.hasPlayerJoined = function() {
    return jspb.Message.getField(this, 9) != null;
};


/**
 * optional BattleResults battle_results = 10;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getBattleResults = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults, 10));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleResults|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setBattleResults = function(value) {
    jspb.Message.setWrapperField(this, 10, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.clearBattleResults = function() {
    this.setBattleResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.hasBattleResults = function() {
    return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 damage_windows_start_timestamp_mss = 11;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getDamageWindowsStartTimestampMss = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 11, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setDamageWindowsStartTimestampMss = function(value) {
    jspb.Message.setField(this, 11, value);
};


/**
 * optional int64 damage_windows_end_timestamp_mss = 12;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getDamageWindowsEndTimestampMss = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 12, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setDamageWindowsEndTimestampMss = function(value) {
    jspb.Message.setField(this, 12, value);
};


/**
 * optional BattleParticipant player_left = 13;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getPlayerLeft = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant, 13));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setPlayerLeft = function(value) {
    jspb.Message.setWrapperField(this, 13, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.clearPlayerLeft = function() {
    this.setPlayerLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.hasPlayerLeft = function() {
    return jspb.Message.getField(this, 13) != null;
};


/**
 * optional fixed64 target_pokemon_id = 14;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.getTargetPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 14, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.prototype.setTargetPokemonId = function(value) {
    jspb.Message.setField(this, 14, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.toObject = function(includeInstance, msg) {
        var f, obj = {
            state: msg.getState(),
            battleType: msg.getBattleType(),
            serverMs: msg.getServerMs(),
            battleActionsList: jspb.Message.toObjectList(msg.getBattleActionsList(),
                proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.toObject, includeInstance),
            battleStartTimestampMs: msg.getBattleStartTimestampMs(),
            battleEndTimestampMs: msg.getBattleEndTimestampMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog;
    return proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleState} */ (reader.readEnum());
                msg.setState(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleType} */ (reader.readEnum());
                msg.setBattleType(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setServerMs(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.deserializeBinaryFromReader);
                msg.getBattleActionsList().push(value);
                msg.setBattleActionsList(msg.getBattleActionsList());
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setBattleStartTimestampMs(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setBattleEndTimestampMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getState();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getBattleType();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getServerMs();
    if (f !== 0) {
        writer.writeInt64(
            3,
            f
        );
    }
    f = this.getBattleActionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.serializeBinaryToWriter
        );
    }
    f = this.getBattleStartTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            5,
            f
        );
    }
    f = this.getBattleEndTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            6,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional BattleState state = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleState}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.getState = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleState} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleState} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.setState = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional BattleType battle_type = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleType}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.getBattleType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleType} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleType} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.setBattleType = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 server_ms = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.getServerMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.setServerMs = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * repeated BattleAction battle_actions = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction>}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.getBattleActionsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction, 4));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction>} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.setBattleActionsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.clearBattleActionsList = function() {
    this.setBattleActionsList([]);
};


/**
 * optional int64 battle_start_timestamp_ms = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.getBattleStartTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.setBattleStartTimestampMs = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 battle_end_timestamp_ms = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.getBattleEndTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.prototype.setBattleEndTimestampMs = function(value) {
    jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            battleLog: (f = msg.getBattleLog()) && proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.toObject(includeInstance, f),
            battleId: msg.getBattleId(),
            activeDefender: (f = msg.getActiveDefender()) && proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.toObject(includeInstance, f),
            activeAttacker: (f = msg.getActiveAttacker()) && proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.deserializeBinaryFromReader);
                msg.setBattleLog(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setBattleId(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.deserializeBinaryFromReader);
                msg.setActiveDefender(value);
                break;
            case 5:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.deserializeBinaryFromReader);
                msg.setActiveAttacker(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getBattleLog();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.serializeBinaryToWriter
        );
    }
    f = this.getBattleId();
    if (f.length > 0) {
        writer.writeString(
            3,
            f
        );
    }
    f = this.getActiveDefender();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.serializeBinaryToWriter
        );
    }
    f = this.getActiveAttacker();
    if (f != null) {
        writer.writeMessage(
            5,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.battle.BattleLog battle_log = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.getBattleLog = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.setBattleLog = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.clearBattleLog = function() {
    this.setBattleLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.hasBattleLog = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string battle_id = 3;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.getBattleId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.setBattleId = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo active_defender = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.getActiveDefender = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.setActiveDefender = function(value) {
    jspb.Message.setWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.clearActiveDefender = function() {
    this.setActiveDefender(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.hasActiveDefender = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo active_attacker = 5;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.getActiveAttacker = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo, 5));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.battle.BattlePokemonInfo|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.setActiveAttacker = function(value) {
    jspb.Message.setWrapperField(this, 5, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.clearActiveAttacker = function() {
    this.setActiveAttacker(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.prototype.hasActiveAttacker = function() {
    return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AttackGymResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_INVALID_ATTACK_ACTIONS: 2,
    ERROR_NOT_IN_RANGE: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.FortSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.FortSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.FortSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            interactionRangeMeters: msg.getInteractionRangeMeters(),
            maxTotalDeployedPokemon: msg.getMaxTotalDeployedPokemon(),
            maxPlayerDeployedPokemon: msg.getMaxPlayerDeployedPokemon(),
            deployStaminaMultiplier: msg.getDeployStaminaMultiplier(),
            deployAttackMultiplier: msg.getDeployAttackMultiplier(),
            farInteractionRangeMeters: msg.getFarInteractionRangeMeters()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.FortSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.FortSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.FortSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.FortSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setInteractionRangeMeters(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaxTotalDeployedPokemon(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaxPlayerDeployedPokemon(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setDeployStaminaMultiplier(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setDeployAttackMultiplier(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setFarInteractionRangeMeters(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.FortSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getInteractionRangeMeters();
    if (f !== 0.0) {
        writer.writeDouble(
            1,
            f
        );
    }
    f = this.getMaxTotalDeployedPokemon();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getMaxPlayerDeployedPokemon();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getDeployStaminaMultiplier();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
    f = this.getDeployAttackMultiplier();
    if (f !== 0.0) {
        writer.writeDouble(
            5,
            f
        );
    }
    f = this.getFarInteractionRangeMeters();
    if (f !== 0.0) {
        writer.writeDouble(
            6,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.FortSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.FortSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional double interaction_range_meters = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.getInteractionRangeMeters = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.setInteractionRangeMeters = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 max_total_deployed_pokemon = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.getMaxTotalDeployedPokemon = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.setMaxTotalDeployedPokemon = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 max_player_deployed_pokemon = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.getMaxPlayerDeployedPokemon = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.setMaxPlayerDeployedPokemon = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double deploy_stamina_multiplier = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.getDeployStaminaMultiplier = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.setDeployStaminaMultiplier = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional double deploy_attack_multiplier = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.getDeployAttackMultiplier = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.setDeployAttackMultiplier = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional double far_interaction_range_meters = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.getFarInteractionRangeMeters = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.prototype.setFarInteractionRangeMeters = function(value) {
    jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.MapSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.MapSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.MapSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonVisibleRange: msg.getPokemonVisibleRange(),
            pokeNavRangeMeters: msg.getPokeNavRangeMeters(),
            encounterRangeMeters: msg.getEncounterRangeMeters(),
            getMapObjectsMinRefreshSeconds: msg.getGetMapObjectsMinRefreshSeconds(),
            getMapObjectsMaxRefreshSeconds: msg.getGetMapObjectsMaxRefreshSeconds(),
            getMapObjectsMinDistanceMeters: msg.getGetMapObjectsMinDistanceMeters(),
            googleMapsApiKey: msg.getGoogleMapsApiKey()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.MapSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.MapSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.MapSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.MapSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPokemonVisibleRange(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPokeNavRangeMeters(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setEncounterRangeMeters(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setGetMapObjectsMinRefreshSeconds(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setGetMapObjectsMaxRefreshSeconds(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setGetMapObjectsMinDistanceMeters(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setGoogleMapsApiKey(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.MapSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonVisibleRange();
    if (f !== 0.0) {
        writer.writeDouble(
            1,
            f
        );
    }
    f = this.getPokeNavRangeMeters();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
    f = this.getEncounterRangeMeters();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getGetMapObjectsMinRefreshSeconds();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = this.getGetMapObjectsMaxRefreshSeconds();
    if (f !== 0.0) {
        writer.writeFloat(
            5,
            f
        );
    }
    f = this.getGetMapObjectsMinDistanceMeters();
    if (f !== 0.0) {
        writer.writeFloat(
            6,
            f
        );
    }
    f = this.getGoogleMapsApiKey();
    if (f.length > 0) {
        writer.writeString(
            7,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.MapSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.MapSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional double pokemon_visible_range = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.getPokemonVisibleRange = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.setPokemonVisibleRange = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional double poke_nav_range_meters = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.getPokeNavRangeMeters = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.setPokeNavRangeMeters = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double encounter_range_meters = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.getEncounterRangeMeters = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.setEncounterRangeMeters = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional float get_map_objects_min_refresh_seconds = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.getGetMapObjectsMinRefreshSeconds = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.setGetMapObjectsMinRefreshSeconds = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional float get_map_objects_max_refresh_seconds = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.getGetMapObjectsMaxRefreshSeconds = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.setGetMapObjectsMaxRefreshSeconds = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional float get_map_objects_min_distance_meters = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.getGetMapObjectsMinDistanceMeters = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.setGetMapObjectsMinDistanceMeters = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional string google_maps_api_key = 7;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.getGoogleMapsApiKey = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.prototype.setGoogleMapsApiKey = function(value) {
    jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            trainerCpModifier: msg.getTrainerCpModifier(),
            trainerDifficultyModifier: msg.getTrainerDifficultyModifier()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setTrainerCpModifier(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setTrainerDifficultyModifier(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getTrainerCpModifier();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
    f = this.getTrainerDifficultyModifier();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional double trainer_cp_modifier = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.prototype.getTrainerCpModifier = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.prototype.setTrainerCpModifier = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double trainer_difficulty_modifier = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.prototype.getTrainerDifficultyModifier = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.prototype.setTrainerDifficultyModifier = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            maxPokemon: msg.getMaxPokemon(),
            maxBagItems: msg.getMaxBagItems(),
            basePokemon: msg.getBasePokemon(),
            baseBagItems: msg.getBaseBagItems(),
            baseEggs: msg.getBaseEggs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaxPokemon(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMaxBagItems(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBasePokemon(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBaseBagItems(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBaseEggs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getMaxPokemon();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
    f = this.getMaxBagItems();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getBasePokemon();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getBaseBagItems();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
    f = this.getBaseEggs();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 max_pokemon = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.getMaxPokemon = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.setMaxPokemon = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 max_bag_items = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.getMaxBagItems = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.setMaxBagItems = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 base_pokemon = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.getBasePokemon = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.setBasePokemon = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 base_bag_items = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.getBaseBagItems = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.setBaseBagItems = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 base_eggs = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.getBaseEggs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.prototype.setBaseEggs = function(value) {
    jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            drivingWarningSpeedMetersPerSecond: msg.getDrivingWarningSpeedMetersPerSecond(),
            drivingWarningCooldownMinutes: msg.getDrivingWarningCooldownMinutes(),
            drivingSpeedSampleIntervalSeconds: msg.getDrivingSpeedSampleIntervalSeconds(),
            drivingSpeedSampleCount: msg.getDrivingSpeedSampleCount()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setDrivingWarningSpeedMetersPerSecond(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setDrivingWarningCooldownMinutes(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setDrivingSpeedSampleIntervalSeconds(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDrivingSpeedSampleCount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getDrivingWarningSpeedMetersPerSecond();
    if (f !== 0.0) {
        writer.writeFloat(
            1,
            f
        );
    }
    f = this.getDrivingWarningCooldownMinutes();
    if (f !== 0.0) {
        writer.writeFloat(
            2,
            f
        );
    }
    f = this.getDrivingSpeedSampleIntervalSeconds();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = this.getDrivingSpeedSampleCount();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional float driving_warning_speed_meters_per_second = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.getDrivingWarningSpeedMetersPerSecond = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.setDrivingWarningSpeedMetersPerSecond = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional float driving_warning_cooldown_minutes = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.getDrivingWarningCooldownMinutes = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.setDrivingWarningCooldownMinutes = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional float driving_speed_sample_interval_seconds = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.getDrivingSpeedSampleIntervalSeconds = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.setDrivingSpeedSampleIntervalSeconds = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 driving_speed_sample_count = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.getDrivingSpeedSampleCount = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.prototype.setDrivingSpeedSampleCount = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.toObject = function(includeInstance, msg) {
        var f, obj = {
            fortSettings: (f = msg.getFortSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.toObject(includeInstance, f),
            mapSettings: (f = msg.getMapSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.toObject(includeInstance, f),
            levelSettings: (f = msg.getLevelSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.toObject(includeInstance, f),
            inventorySettings: (f = msg.getInventorySettings()) && proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.toObject(includeInstance, f),
            minimumClientVersion: msg.getMinimumClientVersion(),
            gpsSettings: (f = msg.getGpsSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings;
    return proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.FortSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.deserializeBinaryFromReader);
                msg.setFortSettings(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.MapSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.deserializeBinaryFromReader);
                msg.setMapSettings(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.deserializeBinaryFromReader);
                msg.setLevelSettings(value);
                break;
            case 5:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.deserializeBinaryFromReader);
                msg.setInventorySettings(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setMinimumClientVersion(value);
                break;
            case 7:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.deserializeBinaryFromReader);
                msg.setGpsSettings(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getFortSettings();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.FortSettings.serializeBinaryToWriter
        );
    }
    f = this.getMapSettings();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.MapSettings.serializeBinaryToWriter
        );
    }
    f = this.getLevelSettings();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings.serializeBinaryToWriter
        );
    }
    f = this.getInventorySettings();
    if (f != null) {
        writer.writeMessage(
            5,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings.serializeBinaryToWriter
        );
    }
    f = this.getMinimumClientVersion();
    if (f.length > 0) {
        writer.writeString(
            6,
            f
        );
    }
    f = this.getGpsSettings();
    if (f != null) {
        writer.writeMessage(
            7,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional FortSettings fort_settings = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.FortSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.getFortSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.FortSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.FortSettings, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.FortSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.setFortSettings = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.clearFortSettings = function() {
    this.setFortSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.hasFortSettings = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MapSettings map_settings = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.MapSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.getMapSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.MapSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.MapSettings, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.MapSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.setMapSettings = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.clearMapSettings = function() {
    this.setMapSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.hasMapSettings = function() {
    return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LevelSettings level_settings = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.getLevelSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.LevelSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.setLevelSettings = function(value) {
    jspb.Message.setWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.clearLevelSettings = function() {
    this.setLevelSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.hasLevelSettings = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * optional InventorySettings inventory_settings = 5;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.getInventorySettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings, 5));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.InventorySettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.setInventorySettings = function(value) {
    jspb.Message.setWrapperField(this, 5, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.clearInventorySettings = function() {
    this.setInventorySettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.hasInventorySettings = function() {
    return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string minimum_client_version = 6;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.getMinimumClientVersion = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.setMinimumClientVersion = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional GpsSettings gps_settings = 7;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.getGpsSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings, 7));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.GpsSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.setGpsSettings = function(value) {
    jspb.Message.setWrapperField(this, 7, value);
};


proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.clearGpsSettings = function() {
    this.setGpsSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.prototype.hasGpsSettings = function() {
    return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            error: msg.getError(),
            hash: msg.getHash(),
            settings: (f = msg.getSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setError(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setHash(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.deserializeBinaryFromReader);
                msg.setSettings(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getError();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getHash();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getSettings();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.getError = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.setError = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string hash = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.getHash = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.setHash = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.GlobalSettings settings = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.getSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.GlobalSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.setSettings = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.clearSettings = function() {
    this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadSettingsResponse.prototype.hasSettings = function() {
    return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            fortDetails: (f = msg.getFortDetails()) && proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.toObject(includeInstance, f),
            pokemonData: (f = msg.getPokemonData()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            gymState: (f = msg.getGymState()) && proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.deserializeBinaryFromReader);
                msg.setFortDetails(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setPokemonData(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.gym.GymState;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.deserializeBinaryFromReader);
                msg.setGymState(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getFortDetails();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.serializeBinaryToWriter
        );
    }
    f = this.getPokemonData();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getGymState();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional FortDetailsResponse fort_details = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.getFortDetails = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.setFortDetails = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.clearFortDetails = function() {
    this.setFortDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.hasFortDetails = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData pokemon_data = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.getPokemonData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.setPokemonData = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.clearPokemonData = function() {
    this.setPokemonData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.hasPokemonData = function() {
    return jspb.Message.getField(this, 3) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.gym.GymState gym_state = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.gym.GymState}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.getGymState = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.gym.GymState} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.gym.GymState, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.gym.GymState|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.setGymState = function(value) {
    jspb.Message.setWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.clearGymState = function() {
    this.setGymState(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.prototype.hasGymState = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDeployPokemonResponse.Result = {
    NO_RESULT_SET: 0,
    SUCCESS: 1,
    ERROR_ALREADY_HAS_POKEMON_ON_FORT: 2,
    ERROR_OPPOSING_TEAM_OWNS_FORT: 3,
    ERROR_FORT_IS_FULL: 4,
    ERROR_NOT_IN_RANGE: 5,
    ERROR_PLAYER_HAS_NO_TEAM: 6,
    ERROR_POKEMON_NOT_FULL_HP: 7,
    ERROR_PLAYER_BELOW_MINIMUM_LEVEL: 8,
    ERROR_POKEMON_IS_BUDDY: 9
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.displayName = 'proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            itemCount: msg.getItemCount()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward;
    return proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setItemCount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getItemCount();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 item_count = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.prototype.getItemCount = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.prototype.setItemCount = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            itemsAwardedList: jspb.Message.toObjectList(msg.getItemsAwardedList(),
                proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.toObject, includeInstance),
            gemsAwarded: msg.getGemsAwarded(),
            pokemonDataEgg: (f = msg.getPokemonDataEgg()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            experienceAwarded: msg.getExperienceAwarded(),
            cooldownCompleteTimestampMs: msg.getCooldownCompleteTimestampMs(),
            chainHackSequenceNumber: msg.getChainHackSequenceNumber()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.deserializeBinaryFromReader);
                msg.getItemsAwardedList().push(value);
                msg.setItemsAwardedList(msg.getItemsAwardedList());
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setGemsAwarded(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setPokemonDataEgg(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setExperienceAwarded(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setCooldownCompleteTimestampMs(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setChainHackSequenceNumber(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getItemsAwardedList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.serializeBinaryToWriter
        );
    }
    f = this.getGemsAwarded();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getPokemonDataEgg();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getExperienceAwarded();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
    f = this.getCooldownCompleteTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            6,
            f
        );
    }
    f = this.getChainHackSequenceNumber();
    if (f !== 0) {
        writer.writeInt32(
            7,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.inventory.item.ItemAward items_awarded = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.getItemsAwardedList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward, 2));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.setItemsAwardedList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.clearItemsAwardedList = function() {
    this.setItemsAwardedList([]);
};


/**
 * optional int32 gems_awarded = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.getGemsAwarded = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.setGemsAwarded = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData pokemon_data_egg = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.getPokemonDataEgg = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.setPokemonDataEgg = function(value) {
    jspb.Message.setWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.clearPokemonDataEgg = function() {
    this.setPokemonDataEgg(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.hasPokemonDataEgg = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 experience_awarded = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.getExperienceAwarded = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.setExperienceAwarded = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 cooldown_complete_timestamp_ms = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.getCooldownCompleteTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.setCooldownCompleteTimestampMs = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 chain_hack_sequence_number = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.getChainHackSequenceNumber = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.prototype.setChainHackSequenceNumber = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.FortSearchResponse.Result = {
    NO_RESULT_SET: 0,
    SUCCESS: 1,
    OUT_OF_RANGE: 2,
    IN_COOLDOWN_PERIOD: 3,
    INVENTORY_FULL: 4,
    EXCEEDED_DAILY_LIMIT: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.toObject = function(includeInstance, msg) {
        var f, obj = {
            assetId: msg.getAssetId(),
            url: msg.getUrl(),
            size: msg.getSize(),
            checksum: msg.getChecksum()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry;
    return proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setAssetId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setSize(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFixed32());
                msg.setChecksum(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getAssetId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getUrl();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getSize();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getChecksum();
    if (f !== 0) {
        writer.writeFixed32(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.getAssetId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.setAssetId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.getUrl = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.setUrl = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 size = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.getSize = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.setSize = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional fixed32 checksum = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.getChecksum = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.prototype.setChecksum = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            downloadUrlsList: jspb.Message.toObjectList(msg.getDownloadUrlsList(),
                proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.deserializeBinaryFromReader);
                msg.getDownloadUrlsList().push(value);
                msg.setDownloadUrlsList(msg.getDownloadUrlsList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getDownloadUrlsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry download_urls = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.prototype.getDownloadUrlsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry, 1));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.DownloadUrlEntry>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.prototype.setDownloadUrlsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetDownloadUrlsResponse.prototype.clearDownloadUrlsList = function() {
    this.setDownloadUrlsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            success: msg.getSuccess(),
            playerData: (f = msg.getPlayerData()) && proto.com.github.aeonlucid.pogoprotos.data.PlayerData.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSuccess(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PlayerData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PlayerData.deserializeBinaryFromReader);
                msg.setPlayerData(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSuccess();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
    f = this.getPlayerData();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PlayerData.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.prototype.getSuccess = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.prototype.setSuccess = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PlayerData player_data = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PlayerData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.prototype.getPlayerData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PlayerData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PlayerData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PlayerData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.prototype.setPlayerData = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.prototype.clearPlayerData = function() {
    this.setPlayerData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerResponse.prototype.hasPlayerData = function() {
    return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            battleStartTimestampMs: msg.getBattleStartTimestampMs(),
            battleEndTimestampMs: msg.getBattleEndTimestampMs(),
            battleId: msg.getBattleId(),
            defender: (f = msg.getDefender()) && proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.toObject(includeInstance, f),
            battleLog: (f = msg.getBattleLog()) && proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setBattleStartTimestampMs(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setBattleEndTimestampMs(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setBattleId(value);
                break;
            case 5:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.deserializeBinaryFromReader);
                msg.setDefender(value);
                break;
            case 6:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.deserializeBinaryFromReader);
                msg.setBattleLog(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getBattleStartTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = this.getBattleEndTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            3,
            f
        );
    }
    f = this.getBattleId();
    if (f.length > 0) {
        writer.writeString(
            4,
            f
        );
    }
    f = this.getDefender();
    if (f != null) {
        writer.writeMessage(
            5,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant.serializeBinaryToWriter
        );
    }
    f = this.getBattleLog();
    if (f != null) {
        writer.writeMessage(
            6,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 battle_start_timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.getBattleStartTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.setBattleStartTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 battle_end_timestamp_ms = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.getBattleEndTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.setBattleEndTimestampMs = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional string battle_id = 4;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.getBattleId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.setBattleId = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant defender = 5;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.getDefender = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant, 5));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleParticipant|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.setDefender = function(value) {
    jspb.Message.setWrapperField(this, 5, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.clearDefender = function() {
    this.setDefender(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.hasDefender = function() {
    return jspb.Message.getField(this, 5) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.battle.BattleLog battle_log = 6;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.getBattleLog = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog, 6));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleLog|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.setBattleLog = function(value) {
    jspb.Message.setWrapperField(this, 6, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.clearBattleLog = function() {
    this.setBattleLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.prototype.hasBattleLog = function() {
    return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.StartGymBattleResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_GYM_NOT_FOUND: 2,
    ERROR_GYM_NEUTRAL: 3,
    ERROR_GYM_WRONG_TEAM: 4,
    ERROR_GYM_EMPTY: 5,
    ERROR_INVALID_DEFENDER: 6,
    ERROR_TRAINING_INVALID_ATTACKER_COUNT: 7,
    ERROR_ALL_POKEMON_FAINTED: 8,
    ERROR_TOO_MANY_BATTLES: 9,
    ERROR_TOO_MANY_PLAYERS: 10,
    ERROR_GYM_BATTLE_LOCKOUT: 11,
    ERROR_PLAYER_BELOW_MINIMUM_LEVEL: 12,
    ERROR_NOT_IN_RANGE: 13
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            updatedGp: msg.getUpdatedGp()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setUpdatedGp(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getUpdatedGp();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 updated_gp = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.prototype.getUpdatedGp = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.prototype.setUpdatedGp = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemGymResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_CANNOT_USE: 2,
    ERROR_NOT_IN_RANGE: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            mapCellsList: jspb.Message.toObjectList(msg.getMapCellsList(),
                proto.com.github.aeonlucid.pogoprotos.map.MapCell.toObject, includeInstance),
            status: msg.getStatus()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.MapCell;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.MapCell.deserializeBinaryFromReader);
                msg.getMapCellsList().push(value);
                msg.setMapCellsList(msg.getMapCellsList());
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.map.MapObjectsStatus} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getMapCellsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.MapCell.serializeBinaryToWriter
        );
    }
    f = this.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated com.github.aeonlucid.pogoprotos.map.MapCell map_cells = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.MapCell>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.prototype.getMapCellsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.MapCell>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.MapCell, 1));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.MapCell>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.prototype.setMapCellsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.prototype.clearMapCellsList = function() {
    this.setMapCellsList([]);
};


/**
 * optional com.github.aeonlucid.pogoprotos.map.MapObjectsStatus status = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.map.MapObjectsStatus}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.prototype.getStatus = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.map.MapObjectsStatus} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.map.MapObjectsStatus} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetMapObjectsResponse.prototype.setStatus = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            success: msg.getSuccess(),
            familyCandyId: msg.getFamilyCandyId(),
            candyEarnedCount: msg.getCandyEarnedCount()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSuccess(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId} */ (reader.readEnum());
                msg.setFamilyCandyId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCandyEarnedCount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSuccess();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
    f = this.getFamilyCandyId();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getCandyEarnedCount();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.prototype.getSuccess = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.prototype.setSuccess = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId family_candy_id = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.prototype.getFamilyCandyId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonFamilyId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.prototype.setFamilyCandyId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 candy_earned_count = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.prototype.getCandyEarnedCount = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetBuddyWalkedResponse.prototype.setCandyEarnedCount = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            pokemonId: msg.getPokemonId(),
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude(),
            encounterLocation: msg.getEncounterLocation(),
            encounterId: msg.getEncounterId(),
            disappearTimestampMs: msg.getDisappearTimestampMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setPokemonId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setEncounterLocation(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setEncounterId(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setDisappearTimestampMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
    f = this.getEncounterLocation();
    if (f.length > 0) {
        writer.writeString(
            5,
            f
        );
    }
    f = this.getEncounterId();
    if (f !== 0) {
        writer.writeFixed64(
            6,
            f
        );
    }
    f = this.getDisappearTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            7,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId pokemon_id = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.getPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional string encounter_location = 5;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.getEncounterLocation = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.setEncounterLocation = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional fixed64 encounter_id = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.getEncounterId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.setEncounterId = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional int64 disappear_timestamp_ms = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.getDisappearTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.prototype.setDisappearTimestampMs = function(value) {
    jspb.Message.setField(this, 7, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetIncensePokemonResponse.Result = {
    INCENSE_ENCOUNTER_UNKNOWN: 0,
    INCENSE_ENCOUNTER_AVAILABLE: 1,
    INCENSE_ENCOUNTER_NOT_AVAILABLE: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            success: msg.getSuccess()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSuccess(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSuccess();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.prototype.getSuccess = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.VerifyChallengeResponse.prototype.setSuccess = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            eggIncubator: (f = msg.getEggIncubator()) && proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.deserializeBinaryFromReader);
                msg.setEggIncubator(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getEggIncubator();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.EggIncubator egg_incubator = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.prototype.getEggIncubator = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.EggIncubator|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.prototype.setEggIncubator = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.prototype.clearEggIncubator = function() {
    this.setEggIncubator(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.prototype.hasEggIncubator = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemEggIncubatorResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_INCUBATOR_NOT_FOUND: 2,
    ERROR_POKEMON_EGG_NOT_FOUND: 3,
    ERROR_POKEMON_ID_NOT_EGG: 4,
    ERROR_INCUBATOR_ALREADY_IN_USE: 5,
    ERROR_POKEMON_ALREADY_INCUBATING: 6,
    ERROR_INCUBATOR_NO_USES_REMAINING: 7
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            currencyTypeList: jspb.Message.getField(msg, 2),
            currencyAwardedList: jspb.Message.getField(msg, 3),
            defendersCount: msg.getDefendersCount()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.getCurrencyTypeList().push(value);
                msg.setCurrencyTypeList(msg.getCurrencyTypeList());
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setCurrencyAwardedList(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDefendersCount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getCurrencyTypeList();
    if (f.length > 0) {
        writer.writeRepeatedString(
            2,
            f
        );
    }
    f = this.getCurrencyAwardedList();
    if (f.length > 0) {
        writer.writePackedInt32(
            3,
            f
        );
    }
    f = this.getDefendersCount();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated string currency_type = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.getCurrencyTypeList = function() {
    return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<string>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.setCurrencyTypeList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.clearCurrencyTypeList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * repeated int32 currency_awarded = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.getCurrencyAwardedList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.setCurrencyAwardedList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.clearCurrencyAwardedList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * optional int32 defenders_count = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.getDefendersCount = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.prototype.setDefendersCount = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyDefenderBonusResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    FAILURE: 2,
    TOO_SOON: 3,
    NO_DEFENDERS: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            newCount: msg.getNewCount()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setNewCount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getNewCount();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 new_count = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.prototype.getNewCount = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.prototype.setNewCount = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.RecycleInventoryItemResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_NOT_ENOUGH_COPIES: 2,
    ERROR_CANNOT_RECYCLE_INCUBATORS: 3
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.ActivityType = {
    ACTIVITY_UNKNOWN: 0,
    ACTIVITY_CATCH_POKEMON: 1,
    ACTIVITY_CATCH_LEGEND_POKEMON: 2,
    ACTIVITY_FLEE_POKEMON: 3,
    ACTIVITY_DEFEAT_FORT: 4,
    ACTIVITY_EVOLVE_POKEMON: 5,
    ACTIVITY_HATCH_EGG: 6,
    ACTIVITY_WALK_KM: 7,
    ACTIVITY_POKEDEX_ENTRY_NEW: 8,
    ACTIVITY_CATCH_FIRST_THROW: 9,
    ACTIVITY_CATCH_NICE_THROW: 10,
    ACTIVITY_CATCH_GREAT_THROW: 11,
    ACTIVITY_CATCH_EXCELLENT_THROW: 12,
    ACTIVITY_CATCH_CURVEBALL: 13,
    ACTIVITY_CATCH_FIRST_CATCH_OF_DAY: 14,
    ACTIVITY_CATCH_MILESTONE: 15,
    ACTIVITY_TRAIN_POKEMON: 16,
    ACTIVITY_SEARCH_FORT: 17,
    ACTIVITY_RELEASE_POKEMON: 18,
    ACTIVITY_HATCH_EGG_SMALL_BONUS: 19,
    ACTIVITY_HATCH_EGG_MEDIUM_BONUS: 20,
    ACTIVITY_HATCH_EGG_LARGE_BONUS: 21,
    ACTIVITY_DEFEAT_GYM_DEFENDER: 22,
    ACTIVITY_DEFEAT_GYM_LEADER: 23
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.toObject = function(includeInstance, msg) {
        var f, obj = {
            activityTypeList: jspb.Message.getField(msg, 1),
            xpList: jspb.Message.getField(msg, 2),
            candyList: jspb.Message.getField(msg, 3),
            stardustList: jspb.Message.getField(msg, 4)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward;
    return proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.ActivityType>} */ (reader.readPackedEnum());
                msg.setActivityTypeList(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setXpList(value);
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setCandyList(value);
                break;
            case 4:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setStardustList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getActivityTypeList();
    if (f.length > 0) {
        writer.writePackedEnum(
            1,
            f
        );
    }
    f = this.getXpList();
    if (f.length > 0) {
        writer.writePackedInt32(
            2,
            f
        );
    }
    f = this.getCandyList();
    if (f.length > 0) {
        writer.writePackedInt32(
            3,
            f
        );
    }
    f = this.getStardustList();
    if (f.length > 0) {
        writer.writePackedInt32(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.ActivityType activity_type = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.ActivityType>}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.getActivityTypeList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.ActivityType>} */ (jspb.Message.getField(this, 1));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.ActivityType>} value  */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.setActivityTypeList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.clearActivityTypeList = function() {
    jspb.Message.setField(this, 1, []);
};


/**
 * repeated int32 xp = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.getXpList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.setXpList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.clearXpList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * repeated int32 candy = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.getCandyList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.setCandyList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.clearCandyList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * repeated int32 stardust = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.getStardustList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 4));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.setStardustList = function(value) {
    jspb.Message.setField(this, 4, value || []);
};


proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.prototype.clearStardustList = function() {
    jspb.Message.setField(this, 4, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            pokemonData: (f = msg.getPokemonData()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            captureAward: (f = msg.getCaptureAward()) && proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setPokemonData(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.deserializeBinaryFromReader);
                msg.setCaptureAward(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPokemonData();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getCaptureAward();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData pokemon_data = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.getPokemonData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.setPokemonData = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.clearPokemonData = function() {
    this.setPokemonData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.hasPokemonData = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.capture.CaptureAward capture_award = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.getCaptureAward = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.setCaptureAward = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.clearCaptureAward = function() {
    this.setCaptureAward(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.prototype.hasCaptureAward = function() {
    return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterTutorialCompleteResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_INVALID_POKEMON: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            context: msg.getContext()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setContext(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getContext();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string context = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.prototype.getContext = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EchoResponse.prototype.setContext = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            gymState: (f = msg.getGymState()) && proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.toObject(includeInstance, f),
            name: msg.getName(),
            urlsList: jspb.Message.getField(msg, 3),
            result: msg.getResult(),
            description: msg.getDescription()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.gym.GymState;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.deserializeBinaryFromReader);
                msg.setGymState(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.getUrlsList().push(value);
                msg.setUrlsList(msg.getUrlsList());
                break;
            case 4:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setDescription(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getGymState();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.gym.GymState.serializeBinaryToWriter
        );
    }
    f = this.getName();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getUrlsList();
    if (f.length > 0) {
        writer.writeRepeatedString(
            3,
            f
        );
    }
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            4,
            f
        );
    }
    f = this.getDescription();
    if (f.length > 0) {
        writer.writeString(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.gym.GymState gym_state = 1;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.gym.GymState}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.getGymState = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.gym.GymState} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.gym.GymState, 1));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.gym.GymState|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.setGymState = function(value) {
    jspb.Message.setWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.clearGymState = function() {
    this.setGymState(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.hasGymState = function() {
    return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.getName = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.setName = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * repeated string urls = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.getUrlsList = function() {
    return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<string>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.setUrlsList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.clearUrlsList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * optional Result result = 4;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.Result} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.getDescription = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.prototype.setDescription = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetGymDetailsResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_NOT_IN_RANGE: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokeballTypeList: jspb.Message.getField(msg, 1),
            captureProbabilityList: jspb.Message.getRepeatedFloatingPointField(msg, 2),
            reticleDifficultyScale: msg.getReticleDifficultyScale()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability;
    return proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} */ (reader.readPackedEnum());
                msg.setPokeballTypeList(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
                msg.setCaptureProbabilityList(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setReticleDifficultyScale(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokeballTypeList();
    if (f.length > 0) {
        writer.writePackedEnum(
            1,
            f
        );
    }
    f = this.getCaptureProbabilityList();
    if (f.length > 0) {
        writer.writePackedFloat(
            2,
            f
        );
    }
    f = this.getReticleDifficultyScale();
    if (f !== 0.0) {
        writer.writeDouble(
            12,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball_type = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.getPokeballTypeList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} */ (jspb.Message.getField(this, 1));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} value  */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.setPokeballTypeList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.clearPokeballTypeList = function() {
    jspb.Message.setField(this, 1, []);
};


/**
 * repeated float capture_probability = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.getCaptureProbabilityList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.setCaptureProbabilityList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.clearCaptureProbabilityList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * optional double reticle_difficulty_scale = 12;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.getReticleDifficultyScale = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 12, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.prototype.setReticleDifficultyScale = function(value) {
    jspb.Message.setField(this, 12, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            wildPokemon: (f = msg.getWildPokemon()) && proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.toObject(includeInstance, f),
            background: msg.getBackground(),
            status: msg.getStatus(),
            captureProbability: (f = msg.getCaptureProbability()) && proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.deserializeBinaryFromReader);
                msg.setWildPokemon(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Background} */ (reader.readEnum());
                msg.setBackground(value);
                break;
            case 3:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Status} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.deserializeBinaryFromReader);
                msg.setCaptureProbability(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getWildPokemon();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.serializeBinaryToWriter
        );
    }
    f = this.getBackground();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(
            3,
            f
        );
    }
    f = this.getCaptureProbability();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon wild_pokemon = 1;
 * @return {proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.getWildPokemon = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon, 1));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.setWildPokemon = function(value) {
    jspb.Message.setWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.clearWildPokemon = function() {
    this.setWildPokemon(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.hasWildPokemon = function() {
    return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Background background = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Background}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.getBackground = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Background} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Background} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.setBackground = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional Status status = 3;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Status}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.getStatus = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Status} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Status} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.setStatus = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability capture_probability = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.getCaptureProbability = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.setCaptureProbability = function(value) {
    jspb.Message.setWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.clearCaptureProbability = function() {
    this.setCaptureProbability(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.prototype.hasCaptureProbability = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Background = {
    PARK: 0,
    DESERT: 1
};

/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EncounterResponse.Status = {
    ENCOUNTER_ERROR: 0,
    ENCOUNTER_SUCCESS: 1,
    ENCOUNTER_NOT_FOUND: 2,
    ENCOUNTER_CLOSED: 3,
    ENCOUNTER_POKEMON_FLED: 4,
    ENCOUNTER_NOT_IN_RANGE: 5,
    ENCOUNTER_ALREADY_HAPPENED: 6,
    POKEMON_INVENTORY_FULL: 7
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            wildPokemonsList: jspb.Message.toObjectList(msg.getWildPokemonsList(),
                proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.toObject, includeInstance),
            fortsList: jspb.Message.toObjectList(msg.getFortsList(),
                proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.toObject, includeInstance),
            fortsNearby: msg.getFortsNearby()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.deserializeBinaryFromReader);
                msg.getWildPokemonsList().push(value);
                msg.setWildPokemonsList(msg.getWildPokemonsList());
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.map.fort.FortData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.deserializeBinaryFromReader);
                msg.getFortsList().push(value);
                msg.setFortsList(msg.getFortsList());
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setFortsNearby(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getWildPokemonsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon.serializeBinaryToWriter
        );
    }
    f = this.getFortsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.map.fort.FortData.serializeBinaryToWriter
        );
    }
    f = this.getFortsNearby();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon wild_pokemons = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.getWildPokemonsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon, 1));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.pokemon.WildPokemon>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.setWildPokemonsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.clearWildPokemonsList = function() {
    this.setWildPokemonsList([]);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.map.fort.FortData forts = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.getFortsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.map.fort.FortData, 2));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.map.fort.FortData>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.setFortsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.clearFortsList = function() {
    this.setFortsList([]);
};


/**
 * optional int32 forts_nearby = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.getFortsNearby = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.PlayerUpdateResponse.prototype.setFortsNearby = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            success: msg.getSuccess(),
            inventoryDelta: (f = msg.getInventoryDelta()) && proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSuccess(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.deserializeBinaryFromReader);
                msg.setInventoryDelta(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSuccess();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
    f = this.getInventoryDelta();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.prototype.getSuccess = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.prototype.setSuccess = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.InventoryDelta inventory_delta = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.prototype.getInventoryDelta = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.InventoryDelta|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.prototype.setInventoryDelta = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.prototype.clearInventoryDelta = function() {
    this.setInventoryDelta(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetInventoryResponse.prototype.hasInventoryDelta = function() {
    return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            fortDetails: (f = msg.getFortDetails()) && proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.deserializeBinaryFromReader);
                msg.setFortDetails(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getFortDetails();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional FortDetailsResponse fort_details = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.prototype.getFortDetails = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.responses.FortDetailsResponse|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.prototype.setFortDetails = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.prototype.clearFortDetails = function() {
    this.setFortDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.prototype.hasFortDetails = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.AddFortModifierResponse.Result = {
    NO_RESULT_SET: 0,
    SUCCESS: 1,
    FORT_ALREADY_HAS_MODIFIER: 2,
    TOO_FAR_AWAY: 3,
    NO_ITEM_IN_INVENTORY: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            logEntriesList: jspb.Message.toObjectList(msg.getLogEntriesList(),
                proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.deserializeBinaryFromReader);
                msg.getLogEntriesList().push(value);
                msg.setLogEntriesList(msg.getLogEntriesList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getLogEntriesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry log_entries = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.prototype.getLogEntriesList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry, 2));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.logs.ActionLogEntry>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.prototype.setLogEntriesList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.prototype.clearLogEntriesList = function() {
    this.setLogEntriesList([]);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SfidaActionLogResponse.Result = {
    UNSET: 0,
    SUCCESS: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            stamina: msg.getStamina()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStamina(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getStamina();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 stamina = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.prototype.getStamina = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.prototype.setStamina = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemReviveResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_NO_POKEMON: 2,
    ERROR_CANNOT_USE: 3,
    ERROR_DEPLOYED_TO_FORT: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            status: msg.getStatus(),
            missPercent: msg.getMissPercent(),
            capturedPokemonId: msg.getCapturedPokemonId(),
            captureAward: (f = msg.getCaptureAward()) && proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.CatchStatus} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setMissPercent(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setCapturedPokemonId(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.deserializeBinaryFromReader);
                msg.setCaptureAward(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getMissPercent();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
    f = this.getCapturedPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            3,
            f
        );
    }
    f = this.getCaptureAward();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional CatchStatus status = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.CatchStatus}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.getStatus = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.CatchStatus} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.CatchStatus} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.setStatus = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional double miss_percent = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.getMissPercent = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.setMissPercent = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional fixed64 captured_pokemon_id = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.getCapturedPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.setCapturedPokemonId = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.capture.CaptureAward capture_award = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.getCaptureAward = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureAward|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.setCaptureAward = function(value) {
    jspb.Message.setWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.clearCaptureAward = function() {
    this.setCaptureAward(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.prototype.hasCaptureAward = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CatchPokemonResponse.CatchStatus = {
    CATCH_ERROR: 0,
    CATCH_SUCCESS: 1,
    CATCH_ESCAPE: 2,
    CATCH_FLEE: 3,
    CATCH_MISSED: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            updatedBuddy: (f = msg.getUpdatedBuddy()) && proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.deserializeBinaryFromReader);
                msg.setUpdatedBuddy(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getUpdatedBuddy();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.BuddyPokemon updated_buddy = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.prototype.getUpdatedBuddy = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.BuddyPokemon|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.prototype.setUpdatedBuddy = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.prototype.clearUpdatedBuddy = function() {
    this.setUpdatedBuddy(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.prototype.hasUpdatedBuddy = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetBuddyPokemonResponse.Result = {
    UNEST: 0,
    SUCCESS: 1,
    ERROR_POKEMON_DEPLOYED: 2,
    ERROR_POKEMON_NOT_OWNED: 3,
    ERROR_POKEMON_IS_EGG: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            success: msg.getSuccess(),
            awardedBadgesList: jspb.Message.getField(msg, 2),
            awardedBadgeLevelsList: jspb.Message.getField(msg, 3)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSuccess(value);
                break;
            case 2:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType>} */ (reader.readPackedEnum());
                msg.setAwardedBadgesList(value);
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setAwardedBadgeLevelsList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSuccess();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
    f = this.getAwardedBadgesList();
    if (f.length > 0) {
        writer.writePackedEnum(
            2,
            f
        );
    }
    f = this.getAwardedBadgeLevelsList();
    if (f.length > 0) {
        writer.writePackedInt32(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.getSuccess = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.setSuccess = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.BadgeType awarded_badges = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.getAwardedBadgesList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType>} */ (jspb.Message.getField(this, 2));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.setAwardedBadgesList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.clearAwardedBadgesList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * repeated int32 awarded_badge_levels = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.getAwardedBadgeLevelsList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.setAwardedBadgeLevelsList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckAwardedBadgesResponse.prototype.clearAwardedBadgeLevelsList = function() {
    jspb.Message.setField(this, 3, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.toObject = function(includeInstance, msg) {
        var f, obj = {
            badgeType: msg.getBadgeType(),
            rank: msg.getRank(),
            startValue: msg.getStartValue(),
            endValue: msg.getEndValue(),
            currentValue: msg.getCurrentValue()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge;
    return proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} */ (reader.readEnum());
                msg.setBadgeType(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setRank(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStartValue(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEndValue(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setCurrentValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getBadgeType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getRank();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = this.getStartValue();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getEndValue();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
    f = this.getCurrentValue();
    if (f !== 0.0) {
        writer.writeDouble(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.BadgeType badge_type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.getBadgeType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.setBadgeType = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 rank = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.getRank = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.setRank = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 start_value = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.getStartValue = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.setStartValue = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 end_value = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.getEndValue = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.setEndValue = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional double current_value = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.getCurrentValue = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.prototype.setCurrentValue = function(value) {
    jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            startTime: msg.getStartTime(),
            badgesList: jspb.Message.toObjectList(msg.getBadgesList(),
                proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setStartTime(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.deserializeBinaryFromReader);
                msg.getBadgesList().push(value);
                msg.setBadgesList(msg.getBadgesList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getStartTime();
    if (f !== 0) {
        writer.writeInt64(
            2,
            f
        );
    }
    f = this.getBadgesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 start_time = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.getStartTime = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.setStartTime = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.data.PlayerBadge badges = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.getBadgesList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge, 3));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.PlayerBadge>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.setBadgesList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.prototype.clearBadgesList = function() {
    this.setBadgesList([]);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetPlayerProfileResponse.Result = {
    UNSET: 0,
    SUCCESS: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CollectDailyBonusResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    FAILURE: 2,
    TOO_SOON: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            itemsAwardedList: jspb.Message.toObjectList(msg.getItemsAwardedList(),
                proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.toObject, includeInstance),
            itemsUnlockedList: jspb.Message.getField(msg, 4)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.deserializeBinaryFromReader);
                msg.getItemsAwardedList().push(value);
                msg.setItemsAwardedList(msg.getItemsAwardedList());
                break;
            case 4:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} */ (reader.readPackedEnum());
                msg.setItemsUnlockedList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getItemsAwardedList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward.serializeBinaryToWriter
        );
    }
    f = this.getItemsUnlockedList();
    if (f.length > 0) {
        writer.writePackedEnum(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.inventory.item.ItemAward items_awarded = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.getItemsAwardedList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward, 2));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemAward>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.setItemsAwardedList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.clearItemsAwardedList = function() {
    this.setItemsAwardedList([]);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.inventory.item.ItemId items_unlocked = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.getItemsUnlockedList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} */ (jspb.Message.getField(this, 4));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.setItemsUnlockedList = function(value) {
    jspb.Message.setField(this, 4, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.prototype.clearItemsUnlockedList = function() {
    jspb.Message.setField(this, 4, []);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.LevelUpRewardsResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    AWARDED_ALREADY: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            appliedItems: (f = msg.getAppliedItems()) && proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.deserializeBinaryFromReader);
                msg.setAppliedItems(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getAppliedItems();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.AppliedItems applied_items = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.prototype.getAppliedItems = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItems|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.prototype.setAppliedItems = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.prototype.clearAppliedItems = function() {
    this.setAppliedItems(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.prototype.hasAppliedItems = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemXpBoostResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_INVALID_ITEM_TYPE: 2,
    ERROR_XP_BOOST_ALREADY_ACTIVE: 3,
    ERROR_NO_ITEMS_REMAINING: 4,
    ERROR_LOCATION_UNSET: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            stamina: msg.getStamina()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStamina(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getStamina();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 stamina = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.prototype.getStamina = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.prototype.setStamina = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemPotionResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_NO_POKEMON: 2,
    ERROR_CANNOT_USE: 3,
    ERROR_DEPLOYED_TO_FORT: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            codename: msg.getCodename(),
            userMessage: msg.getUserMessage(),
            isAssignable: msg.getIsAssignable(),
            status: msg.getStatus()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCodename(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setUserMessage(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsAssignable(value);
                break;
            case 4:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.Status} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getCodename();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getUserMessage();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getIsAssignable();
    if (f) {
        writer.writeBool(
            3,
            f
        );
    }
    f = this.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string codename = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.getCodename = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.setCodename = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string user_message = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.getUserMessage = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.setUserMessage = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional bool is_assignable = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.getIsAssignable = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.setIsAssignable = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional Status status = 4;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.Status}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.getStatus = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.Status} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.Status} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.prototype.setStatus = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckCodenameAvailableResponse.Status = {
    UNSET: 0,
    SUCCESS: 1,
    CODENAME_NOT_AVAILABLE: 2,
    CODENAME_NOT_VALID: 3,
    CURRENT_OWNER: 4,
    CODENAME_CHANGE_NOT_ALLOWED: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            success: msg.getSuccess(),
            itemTemplatesList: jspb.Message.toObjectList(msg.getItemTemplatesList(),
                proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.toObject, includeInstance),
            timestampMs: msg.getTimestampMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSuccess(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.deserializeBinaryFromReader);
                msg.getItemTemplatesList().push(value);
                msg.setItemTemplatesList(msg.getItemTemplatesList());
                break;
            case 3:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setTimestampMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSuccess();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
    f = this.getItemTemplatesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.serializeBinaryToWriter
        );
    }
    f = this.getTimestampMs();
    if (f !== 0) {
        writer.writeUint64(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.getSuccess = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.setSuccess = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated ItemTemplate item_templates = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.getItemTemplatesList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate, 2));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.setItemTemplatesList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.clearItemTemplatesList = function() {
    this.setItemTemplatesList([]);
};


/**
 * optional uint64 timestamp_ms = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.getTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.prototype.setTimestampMs = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.toObject = function(includeInstance, msg) {
        var f, obj = {
            templateId: msg.getTemplateId(),
            pokemonSettings: (f = msg.getPokemonSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.toObject(includeInstance, f),
            itemSettings: (f = msg.getItemSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.toObject(includeInstance, f),
            moveSettings: (f = msg.getMoveSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.toObject(includeInstance, f),
            moveSequenceSettings: (f = msg.getMoveSequenceSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.toObject(includeInstance, f),
            typeEffective: (f = msg.getTypeEffective()) && proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.toObject(includeInstance, f),
            badgeSettings: (f = msg.getBadgeSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.toObject(includeInstance, f),
            camera: (f = msg.getCamera()) && proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.toObject(includeInstance, f),
            playerLevel: (f = msg.getPlayerLevel()) && proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.toObject(includeInstance, f),
            gymLevel: (f = msg.getGymLevel()) && proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.toObject(includeInstance, f),
            battleSettings: (f = msg.getBattleSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.toObject(includeInstance, f),
            encounterSettings: (f = msg.getEncounterSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.toObject(includeInstance, f),
            iapItemDisplay: (f = msg.getIapItemDisplay()) && proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.toObject(includeInstance, f),
            iapSettings: (f = msg.getIapSettings()) && proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.toObject(includeInstance, f),
            pokemonUpgrades: (f = msg.getPokemonUpgrades()) && proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.toObject(includeInstance, f),
            equippedBadges: (f = msg.getEquippedBadges()) && proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setTemplateId(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.deserializeBinaryFromReader);
                msg.setPokemonSettings(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.deserializeBinaryFromReader);
                msg.setItemSettings(value);
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.deserializeBinaryFromReader);
                msg.setMoveSettings(value);
                break;
            case 5:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.deserializeBinaryFromReader);
                msg.setMoveSequenceSettings(value);
                break;
            case 8:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.deserializeBinaryFromReader);
                msg.setTypeEffective(value);
                break;
            case 10:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.deserializeBinaryFromReader);
                msg.setBadgeSettings(value);
                break;
            case 11:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.deserializeBinaryFromReader);
                msg.setCamera(value);
                break;
            case 12:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.deserializeBinaryFromReader);
                msg.setPlayerLevel(value);
                break;
            case 13:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.deserializeBinaryFromReader);
                msg.setGymLevel(value);
                break;
            case 14:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.deserializeBinaryFromReader);
                msg.setBattleSettings(value);
                break;
            case 15:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.deserializeBinaryFromReader);
                msg.setEncounterSettings(value);
                break;
            case 16:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.deserializeBinaryFromReader);
                msg.setIapItemDisplay(value);
                break;
            case 17:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.deserializeBinaryFromReader);
                msg.setIapSettings(value);
                break;
            case 18:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.deserializeBinaryFromReader);
                msg.setPokemonUpgrades(value);
                break;
            case 19:
                var value = new proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.deserializeBinaryFromReader);
                msg.setEquippedBadges(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getTemplateId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getPokemonSettings();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings.serializeBinaryToWriter
        );
    }
    f = this.getItemSettings();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings.serializeBinaryToWriter
        );
    }
    f = this.getMoveSettings();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings.serializeBinaryToWriter
        );
    }
    f = this.getMoveSequenceSettings();
    if (f != null) {
        writer.writeMessage(
            5,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings.serializeBinaryToWriter
        );
    }
    f = this.getTypeEffective();
    if (f != null) {
        writer.writeMessage(
            8,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings.serializeBinaryToWriter
        );
    }
    f = this.getBadgeSettings();
    if (f != null) {
        writer.writeMessage(
            10,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings.serializeBinaryToWriter
        );
    }
    f = this.getCamera();
    if (f != null) {
        writer.writeMessage(
            11,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings.serializeBinaryToWriter
        );
    }
    f = this.getPlayerLevel();
    if (f != null) {
        writer.writeMessage(
            12,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings.serializeBinaryToWriter
        );
    }
    f = this.getGymLevel();
    if (f != null) {
        writer.writeMessage(
            13,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings.serializeBinaryToWriter
        );
    }
    f = this.getBattleSettings();
    if (f != null) {
        writer.writeMessage(
            14,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings.serializeBinaryToWriter
        );
    }
    f = this.getEncounterSettings();
    if (f != null) {
        writer.writeMessage(
            15,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings.serializeBinaryToWriter
        );
    }
    f = this.getIapItemDisplay();
    if (f != null) {
        writer.writeMessage(
            16,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay.serializeBinaryToWriter
        );
    }
    f = this.getIapSettings();
    if (f != null) {
        writer.writeMessage(
            17,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings.serializeBinaryToWriter
        );
    }
    f = this.getPokemonUpgrades();
    if (f != null) {
        writer.writeMessage(
            18,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings.serializeBinaryToWriter
        );
    }
    f = this.getEquippedBadges();
    if (f != null) {
        writer.writeMessage(
            19,
            f,
            proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string template_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getTemplateId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setTemplateId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings pokemon_settings = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getPokemonSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setPokemonSettings = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearPokemonSettings = function() {
    this.setPokemonSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasPokemonSettings = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.ItemSettings item_settings = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getItemSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.ItemSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setItemSettings = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearItemSettings = function() {
    this.setItemSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasItemSettings = function() {
    return jspb.Message.getField(this, 3) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.MoveSettings move_settings = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getMoveSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setMoveSettings = function(value) {
    jspb.Message.setWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearMoveSettings = function() {
    this.setMoveSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasMoveSettings = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings move_sequence_settings = 5;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getMoveSequenceSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings, 5));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.MoveSequenceSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setMoveSequenceSettings = function(value) {
    jspb.Message.setWrapperField(this, 5, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearMoveSequenceSettings = function() {
    this.setMoveSequenceSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasMoveSequenceSettings = function() {
    return jspb.Message.getField(this, 5) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings type_effective = 8;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getTypeEffective = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings, 8));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.TypeEffectiveSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setTypeEffective = function(value) {
    jspb.Message.setWrapperField(this, 8, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearTypeEffective = function() {
    this.setTypeEffective(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasTypeEffective = function() {
    return jspb.Message.getField(this, 8) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings badge_settings = 10;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getBadgeSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings, 10));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.BadgeSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setBadgeSettings = function(value) {
    jspb.Message.setWrapperField(this, 10, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearBadgeSettings = function() {
    this.setBadgeSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasBadgeSettings = function() {
    return jspb.Message.getField(this, 10) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.CameraSettings camera = 11;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getCamera = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings, 11));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.CameraSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setCamera = function(value) {
    jspb.Message.setWrapperField(this, 11, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearCamera = function() {
    this.setCamera(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasCamera = function() {
    return jspb.Message.getField(this, 11) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings player_level = 12;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getPlayerLevel = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings, 12));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.PlayerLevelSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setPlayerLevel = function(value) {
    jspb.Message.setWrapperField(this, 12, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearPlayerLevel = function() {
    this.setPlayerLevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasPlayerLevel = function() {
    return jspb.Message.getField(this, 12) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings gym_level = 13;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getGymLevel = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings, 13));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.GymLevelSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setGymLevel = function(value) {
    jspb.Message.setWrapperField(this, 13, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearGymLevel = function() {
    this.setGymLevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasGymLevel = function() {
    return jspb.Message.getField(this, 13) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings battle_settings = 14;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getBattleSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings, 14));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.GymBattleSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setBattleSettings = function(value) {
    jspb.Message.setWrapperField(this, 14, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearBattleSettings = function() {
    this.setBattleSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasBattleSettings = function() {
    return jspb.Message.getField(this, 14) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings encounter_settings = 15;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getEncounterSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings, 15));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.EncounterSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setEncounterSettings = function(value) {
    jspb.Message.setWrapperField(this, 15, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearEncounterSettings = function() {
    this.setEncounterSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasEncounterSettings = function() {
    return jspb.Message.getField(this, 15) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay iap_item_display = 16;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getIapItemDisplay = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay, 16));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.IapItemDisplay|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setIapItemDisplay = function(value) {
    jspb.Message.setWrapperField(this, 16, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearIapItemDisplay = function() {
    this.setIapItemDisplay(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasIapItemDisplay = function() {
    return jspb.Message.getField(this, 16) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.IapSettings iap_settings = 17;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getIapSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings, 17));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.IapSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setIapSettings = function(value) {
    jspb.Message.setWrapperField(this, 17, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearIapSettings = function() {
    this.setIapSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasIapSettings = function() {
    return jspb.Message.getField(this, 17) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings pokemon_upgrades = 18;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getPokemonUpgrades = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings, 18));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.PokemonUpgradeSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setPokemonUpgrades = function(value) {
    jspb.Message.setWrapperField(this, 18, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearPokemonUpgrades = function() {
    this.setPokemonUpgrades(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasPokemonUpgrades = function() {
    return jspb.Message.getField(this, 18) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings equipped_badges = 19;
 * @return {proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.getEquippedBadges = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings, 19));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.settings.master.EquippedBadgeSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.setEquippedBadges = function(value) {
    jspb.Message.setWrapperField(this, 19, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.clearEquippedBadges = function() {
    this.setEquippedBadges(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadItemTemplatesResponse.ItemTemplate.prototype.hasEquippedBadges = function() {
    return jspb.Message.getField(this, 19) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            codename: msg.getCodename(),
            userMessage: msg.getUserMessage(),
            isAssignable: msg.getIsAssignable(),
            status: msg.getStatus(),
            updatedPlayer: (f = msg.getUpdatedPlayer()) && proto.com.github.aeonlucid.pogoprotos.data.PlayerData.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCodename(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setUserMessage(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsAssignable(value);
                break;
            case 4:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.Status} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            case 5:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PlayerData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PlayerData.deserializeBinaryFromReader);
                msg.setUpdatedPlayer(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getCodename();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getUserMessage();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getIsAssignable();
    if (f) {
        writer.writeBool(
            3,
            f
        );
    }
    f = this.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(
            4,
            f
        );
    }
    f = this.getUpdatedPlayer();
    if (f != null) {
        writer.writeMessage(
            5,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PlayerData.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string codename = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.getCodename = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.setCodename = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string user_message = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.getUserMessage = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.setUserMessage = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional bool is_assignable = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.getIsAssignable = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.setIsAssignable = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional Status status = 4;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.Status}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.getStatus = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.Status} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.Status} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.setStatus = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PlayerData updated_player = 5;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PlayerData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.getUpdatedPlayer = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PlayerData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PlayerData, 5));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PlayerData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.setUpdatedPlayer = function(value) {
    jspb.Message.setWrapperField(this, 5, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.clearUpdatedPlayer = function() {
    this.setUpdatedPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.prototype.hasUpdatedPlayer = function() {
    return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ClaimCodenameResponse.Status = {
    UNSET: 0,
    SUCCESS: 1,
    CODENAME_NOT_AVAILABLE: 2,
    CODENAME_NOT_VALID: 3,
    CURRENT_OWNER: 4,
    CODENAME_CHANGE_NOT_ALLOWED: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            pokemonData: (f = msg.getPokemonData()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            captureProbability: (f = msg.getCaptureProbability()) && proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setPokemonData(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.deserializeBinaryFromReader);
                msg.setCaptureProbability(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPokemonData();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getCaptureProbability();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData pokemon_data = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.getPokemonData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.setPokemonData = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.clearPokemonData = function() {
    this.setPokemonData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.hasPokemonData = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability capture_probability = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.getCaptureProbability = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.setCaptureProbability = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.clearCaptureProbability = function() {
    this.setCaptureProbability(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.prototype.hasCaptureProbability = function() {
    return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DiskEncounterResponse.Result = {
    UNKNOWN: 0,
    SUCCESS: 1,
    NOT_AVAILABLE: 2,
    NOT_IN_RANGE: 3,
    ENCOUNTER_ALREADY_FINISHED: 4,
    POKEMON_INVENTORY_FULL: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            codenamesList: jspb.Message.getField(msg, 1),
            success: msg.getSuccess()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.getCodenamesList().push(value);
                msg.setCodenamesList(msg.getCodenamesList());
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSuccess(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getCodenamesList();
    if (f.length > 0) {
        writer.writeRepeatedString(
            1,
            f
        );
    }
    f = this.getSuccess();
    if (f) {
        writer.writeBool(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated string codenames = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.prototype.getCodenamesList = function() {
    return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<string>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.prototype.setCodenamesList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.prototype.clearCodenamesList = function() {
    jspb.Message.setField(this, 1, []);
};


/**
 * optional bool success = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.prototype.getSuccess = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetSuggestedCodenamesResponse.prototype.setSuccess = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            status: msg.getStatus(),
            playerData: (f = msg.getPlayerData()) && proto.com.github.aeonlucid.pogoprotos.data.PlayerData.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.Status} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PlayerData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PlayerData.deserializeBinaryFromReader);
                msg.setPlayerData(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPlayerData();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PlayerData.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Status status = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.Status}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.prototype.getStatus = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.Status} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.Status} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.prototype.setStatus = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PlayerData player_data = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PlayerData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.prototype.getPlayerData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PlayerData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PlayerData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PlayerData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.prototype.setPlayerData = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.prototype.clearPlayerData = function() {
    this.setPlayerData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.prototype.hasPlayerData = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetAvatarResponse.Status = {
    UNSET: 0,
    SUCCESS: 1,
    AVATAR_ALREADY_SET: 2,
    FAILURE: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            appliedIncense: (f = msg.getAppliedIncense()) && proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.deserializeBinaryFromReader);
                msg.setAppliedIncense(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getAppliedIncense();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.AppliedItem applied_incense = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.prototype.getAppliedIncense = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.inventory.AppliedItem|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.prototype.setAppliedIncense = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.prototype.clearAppliedIncense = function() {
    this.setAppliedIncense(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.prototype.hasAppliedIncense = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseIncenseResponse.Result = {
    UNKNOWN: 0,
    SUCCESS: 1,
    INCENSE_ALREADY_ACTIVE: 2,
    NONE_IN_INVENTORY: 3,
    LOCATION_UNSET: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetFavoritePokemonResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_POKEMON_NOT_FOUND: 2,
    ERROR_POKEMON_IS_EGG: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            itemTemplatesTimestampMs: msg.getItemTemplatesTimestampMs(),
            assetDigestTimestampMs: msg.getAssetDigestTimestampMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setItemTemplatesTimestampMs(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setAssetDigestTimestampMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getItemTemplatesTimestampMs();
    if (f !== 0) {
        writer.writeUint64(
            2,
            f
        );
    }
    f = this.getAssetDigestTimestampMs();
    if (f !== 0) {
        writer.writeUint64(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 item_templates_timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.prototype.getItemTemplatesTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.prototype.setItemTemplatesTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional uint64 asset_digest_timestamp_ms = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.prototype.getAssetDigestTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.prototype.setAssetDigestTimestampMs = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.DownloadRemoteConfigVersionResponse.Result = {
    UNSET: 0,
    SUCCESS: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            equipped: (f = msg.getEquipped()) && proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.deserializeBinaryFromReader);
                msg.setEquipped(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getEquipped();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.player.EquippedBadge equipped = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.prototype.getEquipped = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.EquippedBadge|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.prototype.setEquipped = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.prototype.clearEquipped = function() {
    this.setEquipped(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.prototype.hasEquipped = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EquipBadgeResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    COOLDOWN_ACTIVE: 2,
    NOT_QUALIFIED: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            showChallenge: msg.getShowChallenge(),
            challengeUrl: msg.getChallengeUrl()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setShowChallenge(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setChallengeUrl(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getShowChallenge();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
    f = this.getChallengeUrl();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool show_challenge = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.prototype.getShowChallenge = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.prototype.setShowChallenge = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string challenge_url = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.prototype.getChallengeUrl = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.CheckChallengeResponse.prototype.setChallengeUrl = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.repeatedFields_ = [2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            success: msg.getSuccess(),
            pokemonIdList: jspb.Message.getField(msg, 2),
            experienceAwardedList: jspb.Message.getField(msg, 3),
            candyAwardedList: jspb.Message.getField(msg, 4),
            stardustAwardedList: jspb.Message.getField(msg, 5)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSuccess(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFixed64());
                msg.setPokemonIdList(value);
                break;
            case 3:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setExperienceAwardedList(value);
                break;
            case 4:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setCandyAwardedList(value);
                break;
            case 5:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
                msg.setStardustAwardedList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSuccess();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
    f = this.getPokemonIdList();
    if (f.length > 0) {
        writer.writePackedFixed64(
            2,
            f
        );
    }
    f = this.getExperienceAwardedList();
    if (f.length > 0) {
        writer.writePackedInt32(
            3,
            f
        );
    }
    f = this.getCandyAwardedList();
    if (f.length > 0) {
        writer.writePackedInt32(
            4,
            f
        );
    }
    f = this.getStardustAwardedList();
    if (f.length > 0) {
        writer.writePackedInt32(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.getSuccess = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.setSuccess = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated fixed64 pokemon_id = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.getPokemonIdList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.setPokemonIdList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.clearPokemonIdList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * repeated int32 experience_awarded = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.getExperienceAwardedList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.setExperienceAwardedList = function(value) {
    jspb.Message.setField(this, 3, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.clearExperienceAwardedList = function() {
    jspb.Message.setField(this, 3, []);
};


/**
 * repeated int32 candy_awarded = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.getCandyAwardedList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 4));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.setCandyAwardedList = function(value) {
    jspb.Message.setField(this, 4, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.clearCandyAwardedList = function() {
    jspb.Message.setField(this, 4, []);
};


/**
 * repeated int32 stardust_awarded = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.getStardustAwardedList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 5));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.setStardustAwardedList = function(value) {
    jspb.Message.setField(this, 5, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetHatchedEggsResponse.prototype.clearStardustAwardedList = function() {
    jspb.Message.setField(this, 5, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            upgradedPokemon: (f = msg.getUpgradedPokemon()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setUpgradedPokemon(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getUpgradedPokemon();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData upgraded_pokemon = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.prototype.getUpgradedPokemon = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.prototype.setUpgradedPokemon = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.prototype.clearUpgradedPokemon = function() {
    this.setUpgradedPokemon(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.prototype.hasUpgradedPokemon = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UpgradePokemonResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_POKEMON_NOT_FOUND: 2,
    ERROR_INSUFFICIENT_RESOURCES: 3,
    ERROR_UPGRADE_NOT_AVAILABLE: 4,
    ERROR_POKEMON_IS_DEPLOYED: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.NicknamePokemonResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    ERROR_INVALID_NICKNAME: 2,
    ERROR_POKEMON_NOT_FOUND: 3,
    ERROR_POKEMON_IS_EGG: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            evolvedPokemonData: (f = msg.getEvolvedPokemonData()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            experienceAwarded: msg.getExperienceAwarded(),
            candyAwarded: msg.getCandyAwarded()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setEvolvedPokemonData(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setExperienceAwarded(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCandyAwarded(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getEvolvedPokemonData();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getExperienceAwarded();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = this.getCandyAwarded();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData evolved_pokemon_data = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.getEvolvedPokemonData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.setEvolvedPokemonData = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.clearEvolvedPokemonData = function() {
    this.setEvolvedPokemonData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.hasEvolvedPokemonData = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 experience_awarded = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.getExperienceAwarded = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.setExperienceAwarded = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 candy_awarded = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.getCandyAwarded = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.prototype.setCandyAwarded = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.EvolvePokemonResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    FAILED_POKEMON_MISSING: 2,
    FAILED_INSUFFICIENT_RESOURCES: 3,
    FAILED_POKEMON_CANNOT_EVOLVE: 4,
    FAILED_POKEMON_IS_DEPLOYED: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            success: msg.getSuccess(),
            itemCaptureMult: msg.getItemCaptureMult(),
            itemFleeMult: msg.getItemFleeMult(),
            stopMovement: msg.getStopMovement(),
            stopAttack: msg.getStopAttack(),
            targetMax: msg.getTargetMax(),
            targetSlow: msg.getTargetSlow()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSuccess(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setItemCaptureMult(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setItemFleeMult(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStopMovement(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setStopAttack(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setTargetMax(value);
                break;
            case 7:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setTargetSlow(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getSuccess();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
    f = this.getItemCaptureMult();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
    f = this.getItemFleeMult();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getStopMovement();
    if (f) {
        writer.writeBool(
            4,
            f
        );
    }
    f = this.getStopAttack();
    if (f) {
        writer.writeBool(
            5,
            f
        );
    }
    f = this.getTargetMax();
    if (f) {
        writer.writeBool(
            6,
            f
        );
    }
    f = this.getTargetSlow();
    if (f) {
        writer.writeBool(
            7,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.getSuccess = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.setSuccess = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional double item_capture_mult = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.getItemCaptureMult = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.setItemCaptureMult = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double item_flee_mult = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.getItemFleeMult = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.setItemFleeMult = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional bool stop_movement = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.getStopMovement = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 4, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.setStopMovement = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional bool stop_attack = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.getStopAttack = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 5, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.setStopAttack = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional bool target_max = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.getTargetMax = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 6, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.setTargetMax = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional bool target_slow = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.getTargetSlow = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 7, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.UseItemCaptureResponse.prototype.setTargetSlow = function(value) {
    jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.displayName = 'proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.toObject = function(includeInstance, msg) {
        var f, obj = {
            assetId: msg.getAssetId(),
            bundleName: msg.getBundleName(),
            version: msg.getVersion(),
            checksum: msg.getChecksum(),
            size: msg.getSize(),
            key: msg.getKey_asB64()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry;
    return proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setAssetId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setBundleName(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setVersion(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFixed32());
                msg.setChecksum(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setSize(value);
                break;
            case 6:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setKey(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getAssetId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getBundleName();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getVersion();
    if (f !== 0) {
        writer.writeInt64(
            3,
            f
        );
    }
    f = this.getChecksum();
    if (f !== 0) {
        writer.writeFixed32(
            4,
            f
        );
    }
    f = this.getSize();
    if (f !== 0) {
        writer.writeInt32(
            5,
            f
        );
    }
    f = this.getKey_asU8();
    if (f.length > 0) {
        writer.writeBytes(
            6,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.getAssetId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.setAssetId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string bundle_name = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.getBundleName = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.setBundleName = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 version = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.getVersion = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.setVersion = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional fixed32 checksum = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.getChecksum = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.setChecksum = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 size = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.getSize = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.setSize = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional bytes key = 6;
 * @return {!(string|Uint8Array)}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.getKey = function() {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/**
 * optional bytes key = 6;
 * This is a type-conversion wrapper around `getKey()`
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.getKey_asB64 = function() {
    return /** @type {string} */ (jspb.Message.bytesAsB64(
        this.getKey()));
};


/**
 * optional bytes key = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKey()`
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.getKey_asU8 = function() {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
        this.getKey()));
};


/** @param {!(string|Uint8Array)} value  */
proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.prototype.setKey = function(value) {
    jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            digestList: jspb.Message.toObjectList(msg.getDigestList(),
                proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.toObject, includeInstance),
            timestampMs: msg.getTimestampMs()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.deserializeBinaryFromReader);
                msg.getDigestList().push(value);
                msg.setDigestList(msg.getDigestList());
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setTimestampMs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getDigestList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry.serializeBinaryToWriter
        );
    }
    f = this.getTimestampMs();
    if (f !== 0) {
        writer.writeUint64(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated com.github.aeonlucid.pogoprotos.data.AssetDigestEntry digest = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.prototype.getDigestList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry, 1));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.AssetDigestEntry>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.prototype.setDigestList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.prototype.clearDigestList = function() {
    this.setDigestList([]);
};


/**
 * optional uint64 timestamp_ms = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.prototype.getTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.GetAssetDigestResponse.prototype.setTimestampMs = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            pokemonData: (f = msg.getPokemonData()) && proto.com.github.aeonlucid.pogoprotos.data.PokemonData.toObject(includeInstance, f),
            captureProbability: (f = msg.getCaptureProbability()) && proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PokemonData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PokemonData.deserializeBinaryFromReader);
                msg.setPokemonData(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.deserializeBinaryFromReader);
                msg.setCaptureProbability(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPokemonData();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PokemonData.serializeBinaryToWriter
        );
    }
    f = this.getCaptureProbability();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PokemonData pokemon_data = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PokemonData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.getPokemonData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PokemonData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PokemonData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PokemonData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.setPokemonData = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.clearPokemonData = function() {
    this.setPokemonData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.hasPokemonData = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability capture_probability = 3;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.getCaptureProbability = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability, 3));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.capture.CaptureProbability|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.setCaptureProbability = function(value) {
    jspb.Message.setWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.clearCaptureProbability = function() {
    this.setCaptureProbability(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.prototype.hasCaptureProbability = function() {
    return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.IncenseEncounterResponse.Result = {
    INCENSE_ENCOUNTER_UNKNOWN: 0,
    INCENSE_ENCOUNTER_SUCCESS: 1,
    INCENSE_ENCOUNTER_NOT_AVAILABLE: 2,
    POKEMON_INVENTORY_FULL: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            status: msg.getStatus(),
            playerData: (f = msg.getPlayerData()) && proto.com.github.aeonlucid.pogoprotos.data.PlayerData.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.Status} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.PlayerData;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.PlayerData.deserializeBinaryFromReader);
                msg.setPlayerData(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPlayerData();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.PlayerData.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Status status = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.Status}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.prototype.getStatus = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.Status} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.Status} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.prototype.setStatus = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.PlayerData player_data = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.PlayerData}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.prototype.getPlayerData = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.PlayerData} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.PlayerData, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.PlayerData|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.prototype.setPlayerData = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.prototype.clearPlayerData = function() {
    this.setPlayerData(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.prototype.hasPlayerData = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.SetPlayerTeamResponse.Status = {
    UNSET: 0,
    SUCCESS: 1,
    TEAM_ALREADY_SET: 2,
    FAILURE: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            result: msg.getResult(),
            candyAwarded: msg.getCandyAwarded()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse;
    return proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.Result} */ (reader.readEnum());
                msg.setResult(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCandyAwarded(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getResult();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getCandyAwarded();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Result result = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.Result}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.prototype.getResult = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.Result} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.Result} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.prototype.setResult = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 candy_awarded = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.prototype.getCandyAwarded = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.prototype.setCandyAwarded = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.responses.ReleasePokemonResponse.Result = {
    UNSET: 0,
    SUCCESS: 1,
    POKEMON_DEPLOYED: 2,
    FAILED: 3,
    ERROR_POKEMON_IS_EGG: 4,
    ERROR_POKEMON_IS_BUDDY: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            team: msg.getTeam()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} */ (reader.readEnum());
                msg.setTeam(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getTeam();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.TeamColor team = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.prototype.getTeam = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.TeamColor} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetPlayerTeamMessage.prototype.setTeam = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            cellIdList: jspb.Message.getField(msg, 1),
            sinceTimestampMsList: jspb.Message.getField(msg, 2),
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Array.<number>} */ (reader.readPackedUint64());
                msg.setCellIdList(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
                msg.setSinceTimestampMsList(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getCellIdList();
    if (f.length > 0) {
        writer.writePackedUint64(
            1,
            f
        );
    }
    f = this.getSinceTimestampMsList();
    if (f.length > 0) {
        writer.writePackedInt64(
            2,
            f
        );
    }
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated uint64 cell_id = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.getCellIdList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.setCellIdList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.clearCellIdList = function() {
    jspb.Message.setField(this, 1, []);
};


/**
 * repeated int64 since_timestamp_ms = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.getSinceTimestampMsList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.setSinceTimestampMsList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.clearSinceTimestampMsList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * optional double latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetMapObjectsMessage.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            1,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional double latitude = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional double longitude = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.PlayerUpdateMessage.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            debugRequest: msg.getDebugRequest()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setDebugRequest(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getDebugRequest();
    if (f) {
        writer.writeBool(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool debug_request = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.prototype.getDebugRequest = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckChallengeMessage.prototype.setDebugRequest = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            codename: msg.getCodename()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCodename(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getCodename();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string codename = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.prototype.getCodename = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ClaimCodenameMessage.prototype.setCodename = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            gymId: msg.getGymId(),
            battleId: msg.getBattleId(),
            attackActionsList: jspb.Message.toObjectList(msg.getAttackActionsList(),
                proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.toObject, includeInstance),
            lastRetrievedActions: (f = msg.getLastRetrievedActions()) && proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.toObject(includeInstance, f),
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setGymId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setBattleId(value);
                break;
            case 3:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.deserializeBinaryFromReader);
                msg.getAttackActionsList().push(value);
                msg.setAttackActionsList(msg.getAttackActionsList());
                break;
            case 4:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.deserializeBinaryFromReader);
                msg.setLastRetrievedActions(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getGymId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getBattleId();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getAttackActionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            3,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.serializeBinaryToWriter
        );
    }
    f = this.getLastRetrievedActions();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction.serializeBinaryToWriter
        );
    }
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            5,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            6,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string gym_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.getGymId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.setGymId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string battle_id = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.getBattleId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.setBattleId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * repeated com.github.aeonlucid.pogoprotos.data.battle.BattleAction attack_actions = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.getAttackActionsList = function() {
    return /** @type{!Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction, 3));
};


/** @param {Array.<!proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.setAttackActionsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.clearAttackActionsList = function() {
    this.setAttackActionsList([]);
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.battle.BattleAction last_retrieved_actions = 4;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.getLastRetrievedActions = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction, 4));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.battle.BattleAction|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.setLastRetrievedActions = function(value) {
    jspb.Message.setWrapperField(this, 4, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.clearLastRetrievedActions = function() {
    this.setLastRetrievedActions(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.hasLastRetrievedActions = function() {
    return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double player_latitude = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional double player_longitude = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AttackGymMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.toObject = function(includeInstance, msg) {
        var f, obj = {

        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckAwardedBadgesMessage} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            encounterId: msg.getEncounterId(),
            fortId: msg.getFortId(),
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setEncounterId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getEncounterId();
    if (f !== 0) {
        writer.writeUint64(
            1,
            f
        );
    }
    f = this.getFortId();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint64 encounter_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.getEncounterId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.setEncounterId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string fort_id = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.getFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.setFortId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double player_latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double player_longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DiskEncounterMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            level: msg.getLevel()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setLevel(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getLevel();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 level = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.prototype.getLevel = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.LevelUpRewardsMessage.prototype.setLevel = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            contactSettings: (f = msg.getContactSettings()) && proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.deserializeBinaryFromReader);
                msg.setContactSettings(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getContactSettings();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.player.ContactSettings contact_settings = 1;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.prototype.getContactSettings = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings, 1));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.ContactSettings|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.prototype.setContactSettings = function(value) {
    jspb.Message.setWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.prototype.clearContactSettings = function() {
    this.setContactSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetContactSettingsMessage.prototype.hasContactSettings = function() {
    return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            playerAvatar: (f = msg.getPlayerAvatar()) && proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 2:
                var value = new proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.deserializeBinaryFromReader);
                msg.setPlayerAvatar(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPlayerAvatar();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar player_avatar = 2;
 * @return {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.prototype.getPlayerAvatar = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar, 2));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.data.player.PlayerAvatar|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.prototype.setPlayerAvatar = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.prototype.clearPlayerAvatar = function() {
    this.setPlayerAvatar(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetAvatarMessage.prototype.hasPlayerAvatar = function() {
    return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemXpBoostMessage.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 pokemon_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EvolvePokemonMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            token: msg.getToken()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setToken(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getToken();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.prototype.getToken = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.VerifyChallengeMessage.prototype.setToken = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            pokemonId: msg.getPokemonId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 pokemon_id = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemPotionMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.toObject = function(includeInstance, msg) {
        var f, obj = {

        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadItemTemplatesMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * @enum {number}
 */
proto.com.github.aeonlucid.pogoprotos.enums.Platform = {
    UNSET: 0,
    IOS: 1,
    ANDROID: 2,
    OSX: 3,
    WINDOWS: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            platform: msg.getPlatform(),
            deviceManufacturer: msg.getDeviceManufacturer(),
            deviceModel: msg.getDeviceModel(),
            locale: msg.getLocale(),
            appVersion: msg.getAppVersion()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.Platform} */ (reader.readEnum());
                msg.setPlatform(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeviceManufacturer(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeviceModel(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setLocale(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setAppVersion(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPlatform();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getDeviceManufacturer();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getDeviceModel();
    if (f.length > 0) {
        writer.writeString(
            3,
            f
        );
    }
    f = this.getLocale();
    if (f.length > 0) {
        writer.writeString(
            4,
            f
        );
    }
    f = this.getAppVersion();
    if (f !== 0) {
        writer.writeUint32(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.Platform platform = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.Platform}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.getPlatform = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.Platform} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.Platform} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.setPlatform = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string device_manufacturer = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.getDeviceManufacturer = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.setDeviceManufacturer = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional string device_model = 3;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.getDeviceModel = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.setDeviceModel = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional string locale = 4;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.getLocale = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.setLocale = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional uint32 app_version = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.getAppVersion = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetAssetDigestMessage.prototype.setAppVersion = function(value) {
    jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            pokemonId: msg.getPokemonId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 pokemon_id = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemReviveMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            platform: msg.getPlatform(),
            deviceManufacturer: msg.getDeviceManufacturer(),
            deviceModel: msg.getDeviceModel(),
            locale: msg.getLocale(),
            appVersion: msg.getAppVersion()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.Platform} */ (reader.readEnum());
                msg.setPlatform(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeviceManufacturer(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setDeviceModel(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setLocale(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setAppVersion(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPlatform();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getDeviceManufacturer();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getDeviceModel();
    if (f.length > 0) {
        writer.writeString(
            3,
            f
        );
    }
    f = this.getLocale();
    if (f.length > 0) {
        writer.writeString(
            4,
            f
        );
    }
    f = this.getAppVersion();
    if (f !== 0) {
        writer.writeUint32(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.Platform platform = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.Platform}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.getPlatform = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.Platform} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.Platform} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.setPlatform = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string device_manufacturer = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.getDeviceManufacturer = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.setDeviceManufacturer = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional string device_model = 3;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.getDeviceModel = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.setDeviceModel = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional string locale = 4;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.getLocale = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.setLocale = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional uint32 app_version = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.getAppVersion = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadRemoteConfigVersionMessage.prototype.setAppVersion = function(value) {
    jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            playerLocale: (f = msg.getPlayerLocale()) && proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale;
                reader.readMessage(value,proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.deserializeBinaryFromReader);
                msg.setPlayerLocale(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPlayerLocale();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.serializeBinaryToWriter
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional PlayerLocale player_locale = 1;
 * @return {proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.prototype.getPlayerLocale = function() {
    return /** @type{proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale} */ (
        jspb.Message.getWrapperField(this, proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale, 1));
};


/** @param {proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale|undefined} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.prototype.setPlayerLocale = function(value) {
    jspb.Message.setWrapperField(this, 1, value);
};


proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.prototype.clearPlayerLocale = function() {
    this.setPlayerLocale(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.prototype.hasPlayerLocale = function() {
    return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.toObject = function(includeInstance, msg) {
        var f, obj = {
            country: msg.getCountry(),
            language: msg.getLanguage()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCountry(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setLanguage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getCountry();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getLanguage();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string country = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.prototype.getCountry = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.prototype.setCountry = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string language = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.prototype.getLanguage = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerMessage.PlayerLocale.prototype.setLanguage = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            playerName: msg.getPlayerName()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPlayerName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPlayerName();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string player_name = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.prototype.getPlayerName = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetPlayerProfileMessage.prototype.setPlayerName = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            fortId: msg.getFortId(),
            pokemonId: msg.getPokemonId(),
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getFortId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            2,
            f
        );
    }
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string fort_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.getFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.setFortId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 pokemon_id = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double player_latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double player_longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDeployPokemonMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            assetIdList: jspb.Message.getField(msg, 1)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.getAssetIdList().push(value);
                msg.setAssetIdList(msg.getAssetIdList());
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getAssetIdList();
    if (f.length > 0) {
        writer.writeRepeatedString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated string asset_id = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.prototype.getAssetIdList = function() {
    return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 1));
};


/** @param {Array.<string>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.prototype.setAssetIdList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetDownloadUrlsMessage.prototype.clearAssetIdList = function() {
    jspb.Message.setField(this, 1, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            tutorialsCompletedList: jspb.Message.getField(msg, 1),
            sendMarketingEmails: msg.getSendMarketingEmails(),
            sendPushNotifications: msg.getSendPushNotifications()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.TutorialState>} */ (reader.readPackedEnum());
                msg.setTutorialsCompletedList(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSendMarketingEmails(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSendPushNotifications(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getTutorialsCompletedList();
    if (f.length > 0) {
        writer.writePackedEnum(
            1,
            f
        );
    }
    f = this.getSendMarketingEmails();
    if (f) {
        writer.writeBool(
            2,
            f
        );
    }
    f = this.getSendPushNotifications();
    if (f) {
        writer.writeBool(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated com.github.aeonlucid.pogoprotos.enums.TutorialState tutorials_completed = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.TutorialState>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.getTutorialsCompletedList = function() {
    return /** @type {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.TutorialState>} */ (jspb.Message.getField(this, 1));
};


/** @param {!Array.<!proto.com.github.aeonlucid.pogoprotos.enums.TutorialState>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.setTutorialsCompletedList = function(value) {
    jspb.Message.setField(this, 1, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.clearTutorialsCompletedList = function() {
    jspb.Message.setField(this, 1, []);
};


/**
 * optional bool send_marketing_emails = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.getSendMarketingEmails = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.setSendMarketingEmails = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional bool send_push_notifications = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.getSendPushNotifications = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.MarkTutorialCompleteMessage.prototype.setSendPushNotifications = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.toObject = function(includeInstance, msg) {
        var f, obj = {

        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EchoMessage} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            modifierType: msg.getModifierType(),
            fortId: msg.getFortId(),
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setModifierType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getModifierType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getFortId();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId modifier_type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.getModifierType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.setModifierType = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string fort_id = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.getFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.setFortId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double player_latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double player_longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.AddFortModifierMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 pokemon_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UpgradePokemonMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            incenseType: msg.getIncenseType()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setIncenseType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getIncenseType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId incense_type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.prototype.getIncenseType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseIncenseMessage.prototype.setIncenseType = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            codename: msg.getCodename()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCodename(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getCodename();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string codename = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.prototype.getCodename = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CheckCodenameAvailableMessage.prototype.setCodename = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.toObject = function(includeInstance, msg) {
        var f, obj = {

        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyDefenderBonusMessage} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            fortId: msg.getFortId(),
            latitude: msg.getLatitude(),
            longitude: msg.getLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLatitude(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getFortId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
    f = this.getLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string fort_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.prototype.getFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.prototype.setFortId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional double latitude = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.prototype.getLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.prototype.setLatitude = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double longitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.prototype.getLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortDetailsMessage.prototype.setLongitude = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            encounterId: msg.getEncounterId(),
            spawnPointId: msg.getSpawnPointId(),
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setEncounterId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSpawnPointId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getEncounterId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
    f = this.getSpawnPointId();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 encounter_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.getEncounterId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.setEncounterId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string spawn_point_id = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.getSpawnPointId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.setSpawnPointId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double player_latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double player_longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            encounterId: msg.getEncounterId(),
            encounterLocation: msg.getEncounterLocation()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setEncounterId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setEncounterLocation(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getEncounterId();
    if (f !== 0) {
        writer.writeUint64(
            1,
            f
        );
    }
    f = this.getEncounterLocation();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint64 encounter_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.prototype.getEncounterId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.prototype.setEncounterId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string encounter_location = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.prototype.getEncounterLocation = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.IncenseEncounterMessage.prototype.setEncounterLocation = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId(),
            isFavorite: msg.getIsFavorite()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setPokemonId(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsFavorite(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeInt64(
            1,
            f
        );
    }
    f = this.getIsFavorite();
    if (f) {
        writer.writeBool(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 pokemon_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional bool is_favorite = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.prototype.getIsFavorite = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetFavoritePokemonMessage.prototype.setIsFavorite = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            hash: msg.getHash()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setHash(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getHash();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.prototype.getHash = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.DownloadSettingsMessage.prototype.setHash = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            encounterId: msg.getEncounterId(),
            pokeball: msg.getPokeball(),
            normalizedReticleSize: msg.getNormalizedReticleSize(),
            spawnPointId: msg.getSpawnPointId(),
            hitPokemon: msg.getHitPokemon(),
            spinModifier: msg.getSpinModifier(),
            normalizedHitPosition: msg.getNormalizedHitPosition()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setEncounterId(value);
                break;
            case 2:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setPokeball(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setNormalizedReticleSize(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setSpawnPointId(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setHitPokemon(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setSpinModifier(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setNormalizedHitPosition(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getEncounterId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
    f = this.getPokeball();
    if (f !== 0.0) {
        writer.writeEnum(
            2,
            f
        );
    }
    f = this.getNormalizedReticleSize();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getSpawnPointId();
    if (f.length > 0) {
        writer.writeString(
            4,
            f
        );
    }
    f = this.getHitPokemon();
    if (f) {
        writer.writeBool(
            5,
            f
        );
    }
    f = this.getSpinModifier();
    if (f !== 0.0) {
        writer.writeDouble(
            6,
            f
        );
    }
    f = this.getNormalizedHitPosition();
    if (f !== 0.0) {
        writer.writeDouble(
            7,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 encounter_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.getEncounterId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.setEncounterId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId pokeball = 2;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.getPokeball = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.setPokeball = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double normalized_reticle_size = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.getNormalizedReticleSize = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.setNormalizedReticleSize = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional string spawn_point_id = 4;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.getSpawnPointId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.setSpawnPointId = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional bool hit_pokemon = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.getHitPokemon = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 5, false));
};


/** @param {boolean} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.setHitPokemon = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional double spin_modifier = 6;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.getSpinModifier = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.setSpinModifier = function(value) {
    jspb.Message.setField(this, 6, value);
};


/**
 * optional double normalized_hit_position = 7;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.getNormalizedHitPosition = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CatchPokemonMessage.prototype.setNormalizedHitPosition = function(value) {
    jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (reader.readEnum());
                msg.setPokemonId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.PokemonId pokemon_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.prototype.getPokemonId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.PokemonId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EncounterTutorialCompleteMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.toObject = function(includeInstance, msg) {
        var f, obj = {

        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.CollectDailyBonusMessage} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            fortId: msg.getFortId(),
            pokemonId: msg.getPokemonId(),
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getFortId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            2,
            f
        );
    }
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string fort_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.getFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.setFortId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 pokemon_id = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double player_latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double player_longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortRecallPokemonMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            gymId: msg.getGymId(),
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setGymId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getGymId();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string gym_id = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.getGymId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.setGymId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double player_latitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double player_longitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemGymMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 pokemon_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.ReleasePokemonMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.toObject = function(includeInstance, msg) {
        var f, obj = {

        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetHatchedEggsMessage} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            1,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional double player_latitude = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional double player_longitude = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetIncensePokemonMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            fortId: msg.getFortId(),
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude(),
            fortLatitude: msg.getFortLatitude(),
            fortLongitude: msg.getFortLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setFortId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setFortLatitude(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setFortLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getFortId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getFortLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
    f = this.getFortLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string fort_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.getFortId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.setFortId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional double player_latitude = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double player_longitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double fort_latitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.getFortLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.setFortLatitude = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional double fort_longitude = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.getFortLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.FortSearchMessage.prototype.setFortLongitude = function(value) {
    jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            pokemonId: msg.getPokemonId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setPokemonId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeUint64(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.prototype.getItemId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 pokemon_id = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemEggIncubatorMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.toObject = function(includeInstance, msg) {
        var f, obj = {

        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetSuggestedCodenamesMessage} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 pokemon_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SetBuddyPokemonMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            count: msg.getCount()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setCount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getCount();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.prototype.getCount = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.RecycleInventoryItemMessage.prototype.setCount = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.toObject = function(includeInstance, msg) {
        var f, obj = {

        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetBuddyWalkedMessage} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            itemId: msg.getItemId(),
            encounterId: msg.getEncounterId(),
            spawnPointId: msg.getSpawnPointId()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (reader.readEnum());
                msg.setItemId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setEncounterId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setSpawnPointId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getItemId();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
    f = this.getEncounterId();
    if (f !== 0) {
        writer.writeFixed64(
            2,
            f
        );
    }
    f = this.getSpawnPointId();
    if (f.length > 0) {
        writer.writeString(
            3,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.inventory.item.ItemId item_id = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.prototype.getItemId = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.inventory.item.ItemId} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.prototype.setItemId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional fixed64 encounter_id = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.prototype.getEncounterId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.prototype.setEncounterId = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional string spawn_point_id = 3;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.prototype.getSpawnPointId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.UseItemCaptureMessage.prototype.setSpawnPointId = function(value) {
    jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.toObject = function(includeInstance, msg) {
        var f, obj = {

        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.SfidaActionLogMessage} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.repeatedFields_, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            gymId: msg.getGymId(),
            attackingPokemonIdsList: jspb.Message.getField(msg, 2),
            defendingPokemonId: msg.getDefendingPokemonId(),
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setGymId(value);
                break;
            case 2:
                var value = /** @type {!Array.<number>} */ (reader.readPackedFixed64());
                msg.setAttackingPokemonIdsList(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setDefendingPokemonId(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getGymId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getAttackingPokemonIdsList();
    if (f.length > 0) {
        writer.writePackedFixed64(
            2,
            f
        );
    }
    f = this.getDefendingPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            3,
            f
        );
    }
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            5,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string gym_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.getGymId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.setGymId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * repeated fixed64 attacking_pokemon_ids = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.getAttackingPokemonIdsList = function() {
    return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<number>} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.setAttackingPokemonIdsList = function(value) {
    jspb.Message.setField(this, 2, value || []);
};


proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.clearAttackingPokemonIdsList = function() {
    jspb.Message.setField(this, 2, []);
};


/**
 * optional fixed64 defending_pokemon_id = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.getDefendingPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.setDefendingPokemonId = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double player_latitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional double player_longitude = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.StartGymBattleMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            badgeType: msg.getBadgeType()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} */ (reader.readEnum());
                msg.setBadgeType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getBadgeType();
    if (f !== 0.0) {
        writer.writeEnum(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional com.github.aeonlucid.pogoprotos.enums.BadgeType badge_type = 1;
 * @return {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.prototype.getBadgeType = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.github.aeonlucid.pogoprotos.enums.BadgeType} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.EquipBadgeMessage.prototype.setBadgeType = function(value) {
    jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            pokemonId: msg.getPokemonId(),
            nickname: msg.getNickname()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readFixed64());
                msg.setPokemonId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setNickname(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getPokemonId();
    if (f !== 0) {
        writer.writeFixed64(
            1,
            f
        );
    }
    f = this.getNickname();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional fixed64 pokemon_id = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.prototype.getPokemonId = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.prototype.setPokemonId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional string nickname = 2;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.prototype.getNickname = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.NicknamePokemonMessage.prototype.setNickname = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            lastTimestampMs: msg.getLastTimestampMs(),
            itemBeenSeen: msg.getItemBeenSeen()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setLastTimestampMs(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setItemBeenSeen(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getLastTimestampMs();
    if (f !== 0) {
        writer.writeInt64(
            1,
            f
        );
    }
    f = this.getItemBeenSeen();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 last_timestamp_ms = 1;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.prototype.getLastTimestampMs = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.prototype.setLastTimestampMs = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 item_been_seen = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.prototype.getItemBeenSeen = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetInventoryMessage.prototype.setItemBeenSeen = function(value) {
    jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.displayName = 'proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.toObject = function(includeInstance, msg) {
        var f, obj = {
            gymId: msg.getGymId(),
            playerLatitude: msg.getPlayerLatitude(),
            playerLongitude: msg.getPlayerLongitude(),
            gymLatitude: msg.getGymLatitude(),
            gymLongitude: msg.getGymLongitude(),
            clientVersion: msg.getClientVersion()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage;
    return proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setGymId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLatitude(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPlayerLongitude(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setGymLatitude(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setGymLongitude(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setClientVersion(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getGymId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = this.getPlayerLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            2,
            f
        );
    }
    f = this.getPlayerLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            3,
            f
        );
    }
    f = this.getGymLatitude();
    if (f !== 0.0) {
        writer.writeDouble(
            4,
            f
        );
    }
    f = this.getGymLongitude();
    if (f !== 0.0) {
        writer.writeDouble(
            5,
            f
        );
    }
    f = this.getClientVersion();
    if (f.length > 0) {
        writer.writeString(
            6,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string gym_id = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.getGymId = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.setGymId = function(value) {
    jspb.Message.setField(this, 1, value);
};


/**
 * optional double player_latitude = 2;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.getPlayerLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.setPlayerLatitude = function(value) {
    jspb.Message.setField(this, 2, value);
};


/**
 * optional double player_longitude = 3;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.getPlayerLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.setPlayerLongitude = function(value) {
    jspb.Message.setField(this, 3, value);
};


/**
 * optional double gym_latitude = 4;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.getGymLatitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.setGymLatitude = function(value) {
    jspb.Message.setField(this, 4, value);
};


/**
 * optional double gym_longitude = 5;
 * @return {number}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.getGymLongitude = function() {
    return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.setGymLongitude = function(value) {
    jspb.Message.setField(this, 5, value);
};


/**
 * optional string client_version = 6;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.getClientVersion = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.networking.requests.messages.GetGymDetailsMessage.prototype.setClientVersion = function(value) {
    jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.displayName = 'proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.prototype.toObject = function(opt_includeInstance) {
        return proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction} msg The msg instance to transform.
     * @return {!Object}
     */
    proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.toObject = function(includeInstance, msg) {
        var f, obj = {
            hash: msg.getHash()
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction}
 */
proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction;
    return proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction}
 */
proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setHash(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.serializeBinaryToWriter = function(message, writer) {
    message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    this.serializeBinaryToWriter(writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.prototype.serializeBinaryToWriter = function (writer) {
    var f = undefined;
    f = this.getHash();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction} The clone.
 */
proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.prototype.cloneMessage = function() {
    return /** @type {!proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.prototype.getHash = function() {
    return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.github.aeonlucid.pogoprotos.settings.DownloadSettingsAction.prototype.setHash = function(value) {
    jspb.Message.setField(this, 1, value);
};


